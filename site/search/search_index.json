{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to RADview Documentation","text":"<p>Welcome to WebLOAD Professional, the premier performance, scalability, and reliability testing solution for Internet applications. WebLOAD is easy to use and delivers maximum testing performance and value. WebLOAD verifies the scalability and integrity of Internet applications by generating a load composed of Virtual Clients that simulate real-world traffic. Probing Clients let you refine the testing process by acting as a single user that measures the performance of targeted activities, and provides individual performance statistics of the Internet application under load.</p> <p>For full documentation visit https://www.radview.com/support/</p>"},{"location":"installation/","title":"Introduction","text":"<p>Welcome to WebLOAD, the premier  performance, scalability, and reliability testing solution for internet applications.  </p> <p>WebLOAD is easy to use and delivers maximum testing performance and value. WebLOAD verifies the scalability and integrity of internet applications by generating a load composed of Virtual Clients that simulate real-world traffic. Probing Clients let you refine the testing process by acting as a single user that measures the performance of targeted activities, and provides individual performance statistics of the internet application under load.  </p> <p>This section provides a brief introduction to WebLOAD technical support, including both documentation and online support. </p> <p>IMPORTANT NOTE: In previous WebLOAD versions, a WebLOAD script was called an \u201cAgenda\u201d. From version 12.0, it is referred to simply as a script. Wherever \u201cAgenda\u201d is still displayed, we are referring to the WebLOAD script. </p> <p>WebLOAD Recorder was formerly referred to as WebLOAD IDE. </p>"},{"location":"installation/#webload-documentation","title":"WebLOAD Documentation","text":"<p>WebLOAD is supplied with the following documentation: </p> <p>WebLOAD\u2122 Installation Guide </p> <p>Instructions for installing WebLOAD and its add-ons. </p> <p>WebLOAD\u2122 Recorder User\u2019s Guide </p> <p>Instructions for recording, editing, and debugging load test scripts to be executed by WebLOAD to test your Web-based applications. </p> <p>WebLOAD\u2122 Console User\u2019s Guide </p> <p>A guide to using WebLOAD console, RadView\u2019s load/scalability testing tool to easily and efficiently test your Web-based applications. This guide also includes a quick start section containing instructions for getting started quickly with WebLOAD using the RadView Software test site. </p> <p>WebLOAD\u2122 Analytics User\u2019s Guide </p> <p>Instructions on how to use WebLOAD Analytics to analyze data and create custom, informative reports after running a WebLOAD test session. </p> <p>WebRM\u2122 User\u2019s Guide </p> <p>Instructions for managing testing resources with the WebLOAD Resource Manager. </p> <p>WebLOAD\u2122 Scripting Guide </p> <p>Complete information on scripting and editing JavaScript scripts for use in WebLOAD and WebLOAD Recorder. </p> <p>WebLOAD\u2122 JavaScript Reference Guide </p> <p>Complete reference information on all JavaScript objects, variables, and functions used in WebLOAD and WebLOAD Recorder test scripts. </p> <p>WebLOAD\u2122 Extensibility SDK </p> <p>Instructions on how to develop extensions to tailor WebLOAD to specific working environments. </p> <p>WebLOAD\u2122 Automation Guide </p> <p>Instructions for automatically running WebLOAD tests and reports from the command line, or by using the WebLOAD plugin for Jenkins  </p> <p>WebLOAD\u2122 Cloud User Guide </p> <p>Instructions for using RadView\u2019s WebLOAD Cloud to view, analyze and compare load sessions in a web browser, with full control and customization of the display. </p> <p>The guides are distributed with the WebLOAD software in online help format. The guides are also supplied as Adobe Acrobat files. View and print these files using the Adobe Acrobat Reader. Install the Reader from the Adobe website http://www.adobe.com. ![ref2]</p>"},{"location":"installation/#where-to-get-more-information","title":"Where to Get More Information","text":"<p>This section contains information on how to obtain technical support from RadView worldwide, should you encounter any problems. </p>"},{"location":"installation/#online-help","title":"Online Help","text":"<p>WebLOAD provides a comprehensive on-line help system with step-by-step instructions for common tasks. </p> <p>You can press the F1 key on any open dialog box for an explanation of the options or select Help \u0086 Contents to open the on-line help contents and index. </p>"},{"location":"installation/#technical-support-website","title":"Technical Support Website","text":"<p>The technical support pages on our website contain: </p> <ul> <li>The option of opening a ticket </li> <li>Links to WebLOAD documentation </li> </ul>"},{"location":"installation/#technical-support","title":"Technical Support","text":"<p>For technical support in your use of this product, contact: </p> North  American Headquarters International  Headquarters e-mail: support@RadView.com Phone: 1-888-RadView  (1-888-723-8439)  (Toll Free)  908-526-7756  Fax:    908-864-8099 e-mail: support@RadView.com Phone: +972-3-915-7060  Fax:    +972-3-915-7011"},{"location":"installation/#system-requirements","title":"System Requirements","text":"<p>WebLOAD has the following system requirements. WebLOAD Console, WebLOAD Recorder, WebLOAD Analytics, WebLOAD Probing Client, and WebRM can only be run on Windows platforms. WebLOAD Load Machines can be run on Windows, and Linux platforms. </p> <p>Note: For any installation, you must have Administrator rights for the computer on which you are installing. </p>"},{"location":"installation/#windows-platforms","title":"Windows Platforms","text":"<p>WebLOAD System Requirements</p> Requirements WebLOAD Console, WebLOAD Recorder, WebLOAD Analytics, WebLOAD  Probing Client, and WebRM Load Machine Computer / Processor IBM-compatible PC (x86-32)  with Pentium III 800 MHz (or higher) microprocessor IBM-compatible PC (x86-32)  with Pentium III 800 MHz (or higher) microprocessor; Pentium 4 is recommended Operating System \u009f Windows 2000 Professional  \u009f Windows XP Pro (SP2)  \u009f Windows Vista  \u009f Windows 7  \u009f Windows 8  \u009f Windows Server 2003  \u009f Windows Server 2008  \u009f Windows Server 2012 \u009f Windows 2000 Server / Advanced Server  \u009f Windows XP Pro (SP2)  \u009f Windows Vista  \u009f Windows 7  \u009f Windows Server 2003, Standard and Enterprise Editions  \u009f Windows Server 2008 Memory 1 GB RAM (minimum); 4 GB  is recommended 1 GB RAM (minimum); 4 GB is recommended Free Disk Space 2 GB 2 GB"},{"location":"installation/#linux-platforms-for-webload-load-machines","title":"Linux Platforms (for WebLOAD Load Machines)","text":"<p>Table 4: WebLOAD Load Machine System Requirements </p> Requirements Load  Machine Hardware IBM-compatible PC (x86-32)  with Pentium III 800 MHz (or higher) microprocessor; Pentium 4 is recommended Version \u009f Fedora Core 3 or higher  \u009f Red Hat Enterprise Linux 3  or higher  \u009f CentOS 6  \u009f Java Runtime Environment  (JRE) 1.6 or higher Free Disk Space 2 GB Swap Space RAM*2 Memory 1 GB RAM (minimum); 4 GB is recommended <p>Notes:</p> <p>WebLOAD components in each major version will work with all other components of the same version. WebLOAD components are not compatible with other components of a different version. Verify that the WebLOAD components have been upgraded to Version 10.0 on all participating hosts. Running WebLOAD Console Version 10.0 with an earlier version of Load Generator (running on different Hosts) may cause unexpected behavior. </p> <p>The WebLOAD license file is limited to the computer system (machine) on which WebLOAD is initially installed. Before installing WebLOAD, make sure you are installing on the machine with which you intend to work. </p> <p>When installing WebLOAD with Unicode support on a system running an English MS Windows, Japanese must be configured as the default Windows language.</p>"},{"location":"installation/#installing-webload-for-windows","title":"Installing WebLOAD for Windows","text":"<p>This chapter provides step-by-step instructions for installing WebLOAD on a PC running Windows systems. </p>"},{"location":"installation/#installing-webload-for-windows_1","title":"Installing WebLOAD for Windows","text":"<p>You can choose either of the following installation methods: </p> <ul> <li>Command Line Installation </li> <li>Using the Installation Wizard </li> </ul>"},{"location":"installation/#command-line-installation","title":"Command Line Installation","text":"<p>To perform a command line installation, run the following command: </p> <p><code>&lt; WebLOAD executable installation file &gt; [flags]</code> </p> <p>Where the flags (case sensitive) are: </p> Option Description /SILENT Silent mode /DIR=\"\u201d Destination directory /TYPE=Agent Install a Load Generator only /TYPE=Dashboard Install the Web Dashboard only /SERVICE Install TestTalk as a service /DOMAIN=\"\" The domain in  which to install for service installation /USERNAME=\"\" The user name for service  installation /PASS=\"\" The password of the service  installation /MANUAL How to start the  service. If not set, the service will start automatically /NOCHECK Do not check for a previous installation"},{"location":"installation/#using-the-installation-wizard","title":"Using the Installation Wizard","text":"<p>When you install WebLOAD on your computer, the installation program asks you for the components to install. As part of the installation process, WebLOAD installs a database management system (PostgreSQL 8.3) for use with WebLOAD Analytics. For more information about PostgreSQL, refer to www.postgresql-support.de. </p> <p>Install the WebLOAD components as follows: </p> <ul> <li>Install the full WebLOAD product on computers that will be used to run the WebLOAD Console. </li> <li>Install only the Load Generator or the Probing Client software on a computer that will be a dedicated Load Machine. There is no need to install the full product on computers that will be used as Load Machines. </li> </ul> <p>To install WebLOAD on your system: </p> <ol> <li>Browse to the location of the WebLOAD executable (*.exe) installation file. </li> <li>Double-click the file. The WebLOAD Installation Wizard appears. </li> <li>Follow the instructions in the Installation Wizard. </li> <li>In the Select Components screen. </li> <li>Select the type of installation. For Load Machines and Probing Clients, select Load Generator only. </li> <li>Specify whether to install the Load Generator As Service.  </li> <li>If you select this option, TestTalk is installed as a service. Since a service can be started automatically, this is especially useful for machines that serve only as Load Generators.  </li> <li>If you do not select this option, TestTalk is installed as an executable file. </li> <li>Specify whether to also install the WebLOAD Cloud. The Web Cloud enables viewing, analyzing and comparing load sessions in a web browser, with full control and customization of the display. </li> </ol> <p>Note: The installation process is the same for Load Machines and Probing Clients. ![ref2] When the WebLOAD installation is complete, the WebLOAD License dialog box automatically opens to complete the registration process. License registration is discussed inRegistering and Updating the WebLOAD License (on page 17). </p> <p>Installing WebRM</p> <p>To install WebRM: </p> <ol> <li> <p>Browse to the location of the WebRM-10.0.xxx.en.exe installation file. </p> </li> <li> <p>Double-click the file. The WebRM Installation Wizard appears. </p> </li> <li> <p>The WebRM Installation Wizard displays the Select Destination Location dialog box. On the Select Destination Location dialog box, browse to the location where you would like WebRM installed. By default, this location is C:\\Program Files\\RadView\\WebRM. </p> </li> <li> <p>Click Next. </p> </li> <li> <p>The WebRM Installation Wizard displays the Select License Location dialog box. This dialog box displays your HostID and enables you to browse to the License location. </p> </li> </ol> <p>Note: If you have already received your WebRM License file, skip to step 9.</p> <ol> <li>If you have not received your License file, copy the HostID displayed in the text box into an email, together with your name, company, address, and phone number. Send the email to support@radview.com. </li> </ol> <p>A WebRM license file (*.lic) will be sent to you.  </p> <ol> <li> <p>After receiving the file, save it on the hard drive of your WebRM machine and then double-click the WebRM executable installation file to restart the installation process. </p> </li> <li> <p>On the Select License dialog box, browse to the location where you saved your WebRM license, select the file and click Next.</p> </li> </ol> <p></p> <ol> <li>WebRM begins the installation. When the WebRM installation process is complete, a dialog box appears stating that the WebRM installation has completed successfully. Click Finish. </li> </ol>"},{"location":"installation/#upgrading-webload","title":"Upgrading WebLOAD","text":"<p>To upgrade WebLOAD: </p> <ol> <li>Close TestTalk. </li> <li>Close all browser windows that are open.  </li> <li>Uninstall the existing WebLOAD version. </li> </ol> <p>For instructions on the uninstall procedure, seeUninstalling WebLOAD (on page 25). </p> <ol> <li>Install the new version of WebLOAD. </li> </ol> <p>For installation instructions, seeInstalling WebLOAD for Windows (on page 7). </p>"},{"location":"installation/#installing-and-configuring-the-webload-analytics","title":"Installing and Configuring the WebLOAD Analytics","text":"<p>WebLOAD stores information from Load Sessions in a Postgre SQL database for use with WebLOAD Analytics. You can install Postgre SQL and the WebLOAD Analytics database during the WebLOAD installation or manually after WebLOAD has already been installed. You might want to perform manual installation in the following situations: </p> <ul> <li>If Postgre SQL is already installed on your machine and you only need to create the WebLOAD Analytics database. For instructions, refer toCreating the Database when Postgre SQL is Already Installed on page 11. </li> <li>If you want to use a different machine as the database server and have several WebLOAD Analytics applications connect to the database. For instructions, refer to Installing and Configuring the Database on a Dedicated Machine on page 11. </li> </ul>"},{"location":"installation/#creating-the-database-when-postgre-sql-is-already-installed","title":"Creating the Database when Postgre SQL is Already Installed","text":"<p>If Postgre SQL is already installed on your machine, you do not have to reinstall it during the WebLOAD installation. However, you must complete the following steps in order to create the WebLOAD Analytics database in Postgre SQL so that it can be used by WebLOAD Analytics. </p> <p>To create the WebLOAD Analytics database after WebLOAD was installed: </p> <ul> <li>Run deploy\u2013database.bat from the C:\\Program Files\\RadView\\WebLOAD\\bin\\database folder. </li> </ul>"},{"location":"installation/#installing-and-configuring-the-database-on-a-dedicated-machine","title":"Installing and Configuring the Database on a Dedicated Machine","text":"<p>You can run the Postgre SQL database using a dedicated machine with several WebLOAD Analytics client applications. </p> <p>To install and configure the database on a dedicated machine: </p> <ol> <li>Install Postgre SQL.  </li> </ol> <p>Note: It is recommended to install Postgre SQL Version 8.3. You can download the application from http://www.postgresql.org/download/ and install it using its default installation settings. </p> <ol> <li> <p>Copy all the files from the C:\\Program Files\\RadView\\WebLOAD\\bin\\database directory to a temporary folder on the dedicated server. </p> </li> <li> <p>Run deploy\u2013database.bat from the temporary folder to which you copied the files in the previous step. The WebLOAD Analytics database is created. </p> </li> <li> <p>Configure Postgre SQL to allow remote connections. For more information, see Configuring Postgre SQL to Allow Remote Database Connections on page 12. </p> </li> <li> <p>Configure the relevant WebLOAD Analytics clients to work with the remote database. For more information, seeConfiguring Clients to Work with the Remote Database on page 13. </p> </li> </ol>"},{"location":"installation/#configuring-postgre-sql-to-allow-remote-database-connections","title":"Configuring Postgre SQL to Allow Remote Database Connections","text":"<p>For WebLOAD Analytics clients to work with the remote database, you must perform the following configuration steps on the host machine.  </p> <p>To configure a remote database connection through Postgre SQL: </p> <ol> <li>Run Start &gt; PostgreSql 8.3 &gt; PgAdmin III. The PgAdmin III application opens. </li> <li>Edit the postgresql.conf file, as follows: </li> <li>Select File &gt; Open.  </li> <li>Browse to C:\\program files\\Postgres\\Data\\, select postgresql.conf, and click Open. The postgresql.conf configuration file opens. </li> <li>Change the value of listen_address to *. This configures the server to listen to all addresses. </li> <li> <p>Enable the value and save the file. </p> </li> <li> <p>Edit the Pg_hba.conf file, as follows: </p> </li> <li>Select File &gt; Open.  </li> <li>Browse to C:\\program files\\Postgres\\Data\\, select Pg_hba.conf, and click Open. The Pg_hba.conf configuration file opens. </li> <li>Add a new entry with the following parameters:<ul> <li>Type = host </li> <li>Database = all </li> <li>User = all </li> <li>IP address = .0.1.1/24, where  is your organization\u2019s IP subnet mask.  <li>Method = md5 </li> <li>Enable the entry and save the file. </li>"},{"location":"installation/#configuring-clients-to-work-with-the-remote-database","title":"Configuring Clients to Work with the Remote Database","text":"<p>To configure a remote database connection through Postgre SQL: </p> <ol> <li> <p>Open WebLOAD Analytics on the client machine. </p> </li> <li> <p>Select Window \u0086 Preferences \u0086 Database. </p> </li> <li> <p>Enter the server\u2019s IP address and name in the Database host name field. </p> </li> <li> <p>Click OK. </p> </li> </ol>"},{"location":"installation/#installing-third-party-software-for-server-side-monitoring","title":"Installing Third Party Software for Server-side Monitoring","text":"<p>WebLOAD Console provides a Performance Measurements Manager (PMM) for monitoring the performance of various data sources such as server-side applications, databases, stream technology, system, and Web server measurements in real-time while your test is running. </p> <p>Some data sources require initial configuration to enable monitoring by the PMM. For more information, see the Enabling Data Sources Monitoring section in the WebLOAD Console User\u2019s Guide. </p>"},{"location":"installation/#installing-webload-for-linux","title":"Installing WebLOAD for Linux","text":"<p>This chapter contains the instructions for installing the WebLOAD Load Engine on a machine running a Linux operating system. </p>"},{"location":"installation/#installing-the-webload-load-engine-for-linux","title":"Installing the WebLOAD Load Engine for Linux","text":"<p>To install the WebLOAD Load Engine on your system: </p> <ol> <li>Select or create a directory for installing the WebLOAD Load Engine. This directory will be referred to as the working directory. </li> <li>Download the WebLOAD-linux.version.tar.gz compressed file from a server to the working directory. </li> <li>Uncompress and extract the tar file in the working directory using the following command: </li> </ol> <p>tar \u2013zvxf WebLOAD-linux-version.tar.gz </p> <ol> <li>Change directories by typing the following: </li> </ol> <p>cd radview/webload/linux/bin  <ol> <li>Run setup by typing the following: </li> </ol> <p>./setup </p> <p>During the setup process, the webload.ini configuration file is created. </p> <ol> <li>When prompted, enter the path to the Java runtime libraries. The default path to the libraries is displayed. If you are working with a different version of Java, enter the path of the libraries using the following: </li> </ol> <p>/usr/java/jre/lib/i386/server:/usr/java/jre/lib/i386/native-threads  </p> <p>The path information is stored in the LD_LIBRARY_PATH variable. </p> <p>Note: The directories containing the Java libraries are separated with a colon (:). </p> <p>Important: The WebLOAD Load Generator will not function properly without the correct paths for the Java libraries. </p>"},{"location":"installation/#running-the-load-engine-on-linux","title":"Running the Load Engine on Linux","text":"<p>When running the Load Engine on Linux, Load Engine runs with TestTalk. TestTalk enables communication between the different components of the WebLOAD module. When running the Load Generator through Linux you generally need to connect with other WebLOAD modules running on a remote Windows machine (for example WebLOAD Console). To connect with these remote modules, you must run TestTalk. Once TestTalk is running, you can access the remote WebLOAD modules. The remote module then initiates the communication with TestTalk and then TestTalk loads the Load Generator. </p> <p>Note: If the Load Generator is running and TestTalk is not running, the remote ![ref8] WebLOAD application will not be able to access the Load Generator. </p> <p>To run TestTalk on your system: </p> <ol> <li>Open the linux/bin directory within your working directory by typing the following: </li> </ol> <p>cd /linux/bin  <ol> <li>Run TestTalk by typing the following: ./starttestalk </li> </ol> <p>TestTalk starts running. </p> <p>To stop running TestTalk: </p> <ul> <li>From the linux/bin directory, run ./stoptesttalk  </li> </ul>"},{"location":"installation/#installing-third-party-software-for-server-side-monitoring_1","title":"Installing Third Party Software for Server-side Monitoring","text":"<p>WebLOAD Console provides a Performance Measurements Manager (PMM) for monitoring the performance of various data sources such as server-side applications, databases, stream technology, system, and Web server measurements in real-time while your test is running. </p> <p>Some data sources require initial configuration to enable monitoring by the PMM. For more information, see the Enabling Data Sources Monitoring section in the WebLOAD Console User\u2019s Guide. </p>"},{"location":"installation/#registering-and-updating-the-webload-license","title":"Registering and Updating the  WebLOAD License","text":"<p>Your WebLOAD license must be registered before you can start working with WebLOAD. WebLOAD licenses that have expired must also be renewed or updated before you can continue working with WebLOAD. When installing a new major or minor version of WebLOAD, make sure that you have an adequate license for that specific version. All license registration and updating is accomplished through the Update License dialog box. </p> <p>You can register and update your WebLOAD license either through an Update License application, or through the Command Line Interface. </p>"},{"location":"installation/#license-administration-through-the-ui","title":"License administration through the UI","text":""},{"location":"installation/#standard-license-registration","title":"Standard License Registration","text":"<p>To open the Update License dialog box: </p> <ul> <li>At the time of WebLOAD installation, when the WebLOAD Installation Wizard is finished, the License dialog box opens automatically, ![ref10]</li> </ul> <p>Note: After a WebLOAD installation, you may be prompted to restart your computer before the Update License dialog box appears. In this case, the License dialog box will appear automatically after the computer restarts. </p> <p>-Or- </p> <p>At any other time, from the Windows desktop, select Start &gt; Programs &gt; RadView &gt; WebLOAD &gt; Utilities &gt; Update License. </p> <p>The License dialog box includes the following sections: </p> <ul> <li>License Details </li> <li>Update License ![ref2]</li> </ul> <p>These sections are used to register and update your WebLOAD authorization license information. </p> <p>To complete or update your license registration: </p> <ol> <li>If you are registering a new license after an initial WebLOAD installation, access the Update License dialog box. The Update License dialog box is opened automatically after a successful WebLOAD installation is completed. </li> </ol> <p>-Or- </p> <p>If you are updating your license registration after your current license has expired, from the Windows desktop, select Start &gt; Programs &gt; RadView &gt; WebLOAD &gt; Utilities &gt; Update License. </p> <p>The Update License dialog box appears. </p> <p></p> <ol> <li>Create an email message with the following information: </li> <li>Copy the Host ID displayed in the text box into the email. </li> <li>Add your name, company, address, and phone number to the email message. </li> <li>Send the email to license@radview.com. </li> </ol> <p>A WebLOAD license file (*.lic) will be sent to you. </p> <ol> <li>Select Start &gt; Programs &gt; RadView &gt; WebLOAD &gt; Utilities &gt; Update License to open the Update License** dialog box and install the license key. </li> <li>By default, the Use a license file radio button is selected. This assumes that your license file is located on your local computer system. </li> </ol> <p>For information on installing a floating license, or connecting to a license server, seeWebRM Server (on page 20). </p> <p>For information on installing a license for an evaluation of WebLOAD, see Trial License </p> <p>(on page 19). </p> <ol> <li>Click the browse button next to the Use a license file text box to browse to the location of the license (*.lic) file sent to you by a RadView representative. </li> <li>Select the correct license file and click Open to return to the Update License dialog box. </li> <li>Click OK to load the new license. </li> </ol> <p>If the license registration was successful, a message box appears indicating a successful license update. </p> <p>You can now begin working with WebLOAD. </p> <p>Note: After loading the license, you can optionally click License Information to view the license\u2019s full details.</p> <p>If the license registration was not successful, an error message appears. </p> <p>If you are not able to successfully register a valid license file, contact RadView Support for assistance. </p>"},{"location":"installation/#trial-license","title":"Trial License","text":"<p>You can install a trial version of WebLOAD, which provides 50 virtual clients, and is available for 30 days. </p> <p>To use the WebLOAD evaluation: </p> <ol> <li>After installing WebLOAD, the Update License** dialog box opens,  -Or- </li> </ol> <p>To open the Update License dialog box manually, select Start &gt; Programs &gt; RadView &gt; WebLOAD &gt; Utilities &gt; Update License. </p> <p>The Update License dialog box appears. ![ref2]</p> <p></p> <ol> <li>Select 30-day trial. </li> <li>Click OK or Apply to install the license for the trial. </li> </ol> <p>You can now begin working with the trial version of WebLOAD. </p>"},{"location":"installation/#webrm-server","title":"WebRM Server","text":"<p>The WebRM Server is a stand-alone tool that manages all resource distribution to WebLOAD Console, which is the machine used to run loads in a WebRM environment. It is the method that controls the number of users allowed to access the product concurrently. </p> <p>WebRM for virtual clients is available and defined as a pool of virtual (probing) clients that can concurrently be used by members of a testing team and monitored by the WebRM Server. </p> <p>During installation of the WebRM server, you are prompted for the WebRM file that defines: </p> <ul> <li>The number of concurrent applications for the WebLOAD Console. </li> <li>The number of concurrent Virtual and Probing Clients. </li> </ul> <p>Installation also creates a FlexLM Service that controls the operation. ![ref2]</p> <p>The WebRM Server displays a list of the number of resources (Virtual and Probing Clients) that the Console is using. The WebRM Server enables a testing team to share resources. </p> <p>This section describes how to connect to the WebRM Server and how to view the license details. </p> <p>Connecting to the WebRM Server  To connect to the WebRM Server: </p> <ol> <li> <p>After installing WebLOAD, the Update License dialog box opens, </p> <p>-Or- </p> </li> </ol> <p>To open the Update License dialog box manually, select Start &gt; Programs &gt; RadView &gt; WebLOAD &gt; Utilities &gt; Update License. </p> <p>The Update License dialog box appears. </p> <p></p> <ol> <li>Select Connect to the WebRM License Server. </li> <li>Click the Browse button and select the machine where WebRM is installed. </li> <li>Click OK. </li> </ol> <p>A connection to the selected license server is attempted. </p> <ul> <li>If the connection is successful, a success message appears. </li> <li>If the connection is not successful, a failure message appears. </li> </ul> <p>Viewing License Details </p> <p>After selecting the license server, you can view the current license details in the License Details section of the Update License dialog box.  </p>"},{"location":"installation/#license-administration-through-the-command-line-interface","title":"License administration through the Command Line Interface","text":"<p>You can register or upload a WebLOAD license through a command line interface. You can enter the wlUpdateLicenseApplicationCmd command into a batch file or into an external script to automatically launch a WebLOAD License action, without user intervention, using the parameters you specify. </p>"},{"location":"installation/#configuring-connection-to-the-oracle-database-using-webload","title":"Configuring Connection to the Oracle  Database using WebLOAD","text":"<p>Connecting to the Oracle Database using WebLOAD requires that you install the Oracle Data Access Components (ODAC) on your computer. For information on ODAC, refer to the appropriate Oracle documentation. </p> <p>Note: You need to be assigned a valid username and user privileges for Oracle so that ![ref8] you can connect to the Oracle database. </p> <p>The following procedure is confirmed to work with Oracle Database version 11g, and is also expected to work with Oracle Database version 10g. </p> <p>To configure your computer to enable connection to the Oracle database using WebLOAD: </p> <ol> <li> <p>Navigate to $ORACLE_HOME\\NETWORK\\ADMIN. </p> </li> <li> <p>Open tnsnames.ora for editing. </p> </li> </ol> <p>Note: If tnsnames.ora does not exist, create it. ![ref8]</p> <p>The default content is as follows: </p> <p><code>&lt;tns\\_name&gt; =</code> </p> <p><code>(DESCRIPTION =</code> </p> <p><code>(ADDRESS = (PROTOCOL = TCP)(HOST = &lt;host or ip&gt;)(PORT = 1521))    (CONNECT\\_DATA =</code> </p> <p><code>(SERVER = DEDICATED)</code> </p> <p><code>(SERVER\\_NAME = &lt;instance\\_name&gt;)</code> </p> <p><code>)</code> </p> <p><code>)</code> </p> <ol> <li>Make the following definitions in the file: </li> </ol> <p>\u200b       tns_name =  host =  <p>\u200b       instance name =  <p>\u200b       Log out and log in, or restart, to activate the environmental variables. </p>"},{"location":"installation/#uninstalling-webload","title":"Uninstalling WebLOAD","text":"<p>When you uninstall WebLOAD, you are prompted to remove PostgreSQL 8.3, which is used to manage the WebLOAD Analytics database. RadView Software recommends that you keep PostgreSQL 8.3 installed in order to maintain all the information stored in the database. </p> <p>To uninstall WebLOAD: </p> <ol> <li>Close all WebLOAD modules including TestTalk. </li> <li>Close all browser windows that are open.  </li> <li>Select Start &gt; Settings &gt; Control Panel. </li> <li>Double-click the Add/Remove Programs icon. </li> <li>Click the Change or Remove Programs tab. </li> <li>Click Radview WebLOAD Professional, and then click Change/Remove. </li> </ol> <p>The Uninstall Wizard appears. Once the uninstall procedure is complete, you may be prompted to restart your machine. </p> <p>Note: Uninstalling WebLOAD removes all the WebLOAD program file directories, including all the WebLOAD installation files. User files that are copied into these directories (such as user-defined extensions) are not deleted. WebLOAD load templates, load sessions, and script files are not removed \u2013 they can be used with all WebLOAD upgrades.</p> <p>Caution: Close TestTalk and all browser windows before uninstalling WebLOAD. Failure to close TestTalk and all browser windows results in outdated files remaining on your disk, which could adversely affect future installations of the program.  </p> <p>To uninstall WebRM: </p> <ol> <li> <p>Select Start &gt; Settings &gt; Control Panel. </p> </li> <li> <p>Double-click the Add/Remove Programs icon. </p> </li> <li> <p>Click the Add or Remove Programs tab. </p> </li> <li> <p>Click RadView WebRM, and then click Change/Remove.</p> </li> </ol> <p>The Uninstall Wizard appears. The uninstall procedure is completed following a confirmation request. </p>"},{"location":"quickstart/","title":"WebLOAD Quick Start","text":"<p>Welcome to WebLOAD Professional,the premier performance, scalability,and reliability testing solution for Internet applications.</p> <p>WebLOAD is easy to use and delivers maximum testing performance and value.WebLOAD verifies the scalability and integrity of Internet applications by generating a load composed of Virtual Clients that simulate real-world traffic. Probing Clients let you refine the testing process by acting as a single user that measures the performance of targeted activities, and provides individual performance statistics of the Internet application under load.</p> <p>IMPORTANT NOTE: In previous WebLOAD versions, a WebLOAD script was called an \"Agenda\". From version 12.0, it is referred to simply as a script.Wherever \"Agenda\" is still displayed, we are referring to the WebLOAD script.</p> <p>WebLOAD Recorder was formerly referred to as WebLOAD IDE.</p>"},{"location":"quickstart/#how-webload-works","title":"How WebLOAD Works","text":"<p>WebLOAD tests Web applications by generating Virtual Clients that simulate real-world loads. Virtual Clients emulate the actions of human users by performing typical actions on your Web application. By increasing the number of Virtual Clients, you increase the load on the system. You create visual JavaScript-based test scripts that define the behavior of the Virtual Clients and WebLOAD executes these test scripts,monitoring the application response graphically and statistically, and presenting the test results in real time.</p> <p>WebLOAD incorporates functional verification into the scalability testing process allowing you to accurately verify the scalability and integrity of your Web applications at the per-client, per-transaction, and per-instance level under defined load conditions.WebLOAD saves the test results, including data from the Load Machines and the hosting hardware's performance monitor. You can view all or part of the data in real time, or after the test session is complete, in tabular or graphical format.</p>"},{"location":"quickstart/#webload-architecture","title":"WebLOAD Architecture","text":"<p>The following diagram illustrates the configuration for a typical WebLOAD test.</p> <p></p> <p>The Console sets up, runs, and controls a test session. At the Console, you can:</p> <ul> <li> <p>Define the hosts participating in the load test.</p> </li> <li> <p>Specify the test scripts that the load test executes.</p> </li> <li> <p>Schedule tests.</p> </li> <li> <p>View performance reports.</p> </li> </ul> <p>Load Machines are hosts that run Load Generator software simulating multiple Virtual Clients simultaneously accessing your System Under Test (SUT).One Load Machine can run multiple Load Generators.</p> <p>Load Generators execute tests that \"bombard\" the SUT with a large load, to enable complete scalability and stress testing. The tests consist of multiple simultaneous requests made by Virtual Clients (which emulate Web browsers) to Web servers. Load Machines can run multiple threads.</p> <p>The System Under Test(SUT) is where the Web system under test resides. The SUT does not require that WebLOAD software be installed on it.</p> <p>The Probing Client Machines are also hosts. They run Probing Client software,which simulates a single Virtual Client accessing the SUT and runs at the same time as Load Machines, to further measure the performance of the SUT under load. WebLOAD returns exact values for Probing Client performance, in contrast to Load Machines,which return average values of Virtual Client performance.</p>"},{"location":"quickstart/#quick-start-steps","title":"Quick Start Steps","text":"<p>This section shows you how you can get started quickly using WebLOAD by designing and executing a performance test of the RadView Software test site at http://www.webloadmpstore.com. Then you can refer to the complete WebLOAD documentation set to learn more techniques for using WebLOAD.</p> <p>In this Quick Start, you perform the following steps:</p> <ol> <li>Create a script (see Creating a script on page 6).</li> <li>Configure a Load Template using the WebLOAD Wizard (see Configuring a Load Template using WebLOAD Wizard on page 9).</li> <li>Configure session options (see Setting Session Options on page 13).</li> <li>Run a test (see Running the Test on page 14).</li> <li>Analyze test results (see Analyzing Test Results on page 15).</li> </ol> <p>Note: We recommend that you follow the steps in the order they appear. All examples are interrelated and dependent on earlier steps.</p>"},{"location":"quickstart/#creating-a-script","title":"Creating a script","text":"<p>The first step in creating a script is to record your actions as you interact with your Web application.</p> <p>To create a script:</p> <ol> <li>Start WebLOAD Recorder by selecting Start &gt; Programs &gt;RadView&gt;WebLOAD&gt;WebLOAD Recorder.</li> </ol> <p>WebLOAD Recorder opens.</p> <p></p> <ol> <li>Select Create a new project.</li> </ol> <p>The WebLOAD Recorder main window opens in Editing Mode for you to begin creating your script.</p> <p></p> <ol> <li>In the main window, in Editing Mode, click the Start Record  toolbar button to begin recording.</li> </ol> <p>The following dialog appears.</p> <p></p> <ol> <li>Click OK.</li> </ol> <p>WebLOAD Recorder begins recording all actions you perform in the browser,as indicated by the recording notification in the WebLOAD Recorder status bar.</p> <p></p> <p>A browser window opens.</p> <ol> <li>In the address bar, enter the Web address www.webloadmpstore.com to go to the WebLOAD test site.</li> </ol> <p></p> <ol> <li> <p>Navigate through the site, performing the actions you want to test. For example:</p> </li> <li> <p>Click a product to view the product details.</p> </li> <li> <p>Click Add to Cart to add the product to your shopping chart.</p> <p>Your actions are recorded and appear in the Script Tree as you navigate the site.(If you see additional nodes in the Script Tree with different URLs, this may be traffic generated by browser plug-ins or extensions, for example, third-party toolbars.)</p> </li> </ol> <p></p> <ol> <li> <p>Click the Stop Record toolbar button in WebLOAD Recorder to stop the recording.</p> </li> <li> <p>Click the Save toolbar button to save your script.</p> </li> <li> <p>Type QuickStart as the name of the script in the Save As dialog box and click Save.</p> </li> </ol> <p>The script is saved with the extension *,wlp.</p> <p>You now have a basic script that can be used in a WebLOAD test configuration. For complete information on creating, editing and modifying scripts,and adding functionality to your script, see the WebLOAD Recorder User Guide.</p>"},{"location":"quickstart/#configuring-a-load-template-using-webload-wizard","title":"Configuring a Load Template using WebLOAD Wizard","text":"<p>Using the Quick Start,you will learn how to perform the following steps in order to configure a Load Template with the WebLOAD Wizard in the WebLOAD Console:</p> <ol> <li>Opening the WebLOAD Wizard.</li> <li>Selecting a script and a Performance Statistic to monitor.</li> <li>Selecting a host on which to run the Load Machine.</li> <li>Scheduling the test and selecting the number of Virtual Clients to run.</li> <li>Setting session options.</li> </ol> <p>For more details about each of these steps, see the WebLOAD Console User's Guide.</p>"},{"location":"quickstart/#opening-webload-wizard","title":"Opening WebLOAD Wizard","text":"<p>The first step in defining a Load Template with the WebLOAD Wizard is defining the type of script to run. The script is the test script that defines the actions that the Virtual Clients perform during the test. WebLOAD supports both single scripts (lone test scripts) and Mix scripts (a group of scripts simulating groups of users performing different activities on the application simultaneously). In this Quick Start, we will create a template running a single script. For information on creating templates with multiple scripts or Mix scripts, see Creating Load Templates with the WebLOAD Wizard in the WebLOAD Console User's Guide.</p> <p>To open WebLOAD Wizard:</p> <ol> <li>Start the WebLOAD Console.</li> </ol> <p>Select Start &gt;All Programs &gt;RadView &gt;WebLOAD&gt;WebLOAD Console.</p> <p>The WebLOAD Console opens,and the WebLOAD Console dialog box appears.</p> <p></p> <ol> <li>Select Create a new template using WebLOAD Wizard.</li> </ol> <p>The WebLOAD Wizard opens.</p> <ol> <li>On the Welcome screen, click Next. The script/Mix Type screen appears.</li> </ol>"},{"location":"quickstart/#selecting-a-script-and-a-performance-statistic-to-monitor","title":"Selecting a script and a Performance Statistic to Monitor","text":"<p>To select a script and a performance statistic to monitor:</p> <ol> <li> <p>On the script/Mix Type screen, select Single Script, and click Next. </p> </li> <li> <p>On the script/Mix Selection screen, click the  button and browse to the location of the QuickStart.wlp script created earlier using WebLOAD Recorder. Select the script and click Open. </p> </li> <li> <p>Click Measurements Manager at the bottom of the screen to open the Performance Measurements Manager and define the statistics to monitor during the test. </p> </li> </ol> <p>Note: In this simple example, we will monitor the CPU usage on your system during runtime. During a real test, you would probably monitor the CPU performance of your application server. </p> <ol> <li> <p>Click the Add data source toolbar button. The Performance Measurements Manager Wizard opens. </p> </li> <li> <p>On the Welcome screen, click Next. </p> </li> <li> <p>Click the \u201c+\u201d adjacent to General to expand the tree, select General Performance Monitor, and click Next. </p> </li> <li> <p>Click Browse\u2026 to browse available hosts. In the Host selection dialog box, highlight the name of your computer in the list, and click Select. </p> </li> <li> <p>Click Next. </p> </li> </ol> <p>WebLOAD attempts to connect to the selected host and collect data. A tree of all available measurements to monitor appears. </p> <ol> <li> <p>Expand the tree to select the measurement you want. Click Processor &gt; _Total, select the checkbox adjacent to % Processor Time, and click Next.</p> </li> <li> <p>Click Finish.</p> </li> </ol> <p></p> <ol> <li> <p>Click the Close &amp; update toolbar button to save the configuration with the template and return to the WebLOAD Wizard.</p> </li> <li> <p>On the script/Mix Selection screen, click Next. The Host Selection screen appears.</p> </li> </ol>"},{"location":"quickstart/#selecting-a-host","title":"Selecting a Host","text":"<p>For the steps in this Quick Start, you use your own machine as the host load machine to generate Virtual Clients. The number of Virtual Clients that can be generated depends on the power of the host machine.</p> <p>To select a host:</p> <ol> <li>On the Host Selection screen, note that your computer is automatically listed as the default Load Machine.</li> <li>Click Next to accept the default selection.</li> </ol>"},{"location":"quickstart/#scheduling-the-test","title":"Scheduling the Test","text":"<p>When you schedule the test,you define the load to be generated throughout the test and the total testing time. The Load Profiler provides a quick and easy way to select different testing patterns.</p> <p>To schedule the test:</p> <ol> <li> <p>On the Schedule screen, select Collective scheduling, and click Next. The wizard progresses to the Collective Scheduling screen. </p> </li> <li> <p>Click All Machines. The Load Profiler buttons becomes enabled. </p> </li> <li> <p>Click Load Profiler. The Load Profiler opens. </p> </li> <li> <p>Select Linear from the Select scheduling model drop-down list. </p> </li> <li> <p>Enter 10 in the Concluding number of Virtual Clients field and accept the defaults for the Total time in minutes and Starting number of Virtual Clients fields. </p> </li> </ol> <p>The test will run for 10 minutes, starting with a load of 5 Virtual Clients and increasing to a maximum of 10. </p> <ol> <li>Click Replace. </li> </ol> <p>The Linear Schedule model now appears in the row below your host computer name in the Schedule Manually screen. </p> <ol> <li> <p>Click Next. </p> </li> <li> <p>Clear the To run this Load Template immediately, select this checkbox and then click Finish checkbox, and click Finish. </p> </li> </ol> <p>You have now created a Load Template using WebLOAD Wizard.</p>"},{"location":"quickstart/#setting-session-options","title":"Setting Session Options","text":"<p>Before you run the template you created, you can select options for verifications to execute during runtime. You can set WebLOAD to perform the following tasks: </p> <ul> <li>Collect data at the page level. </li> <li>Verify the time required to receive a page (default 20 seconds). </li> <li>Verify that the links in your Web application act as expected. </li> </ul> <p>When you select page verification, WebLOAD collects transaction data under the Title name, in this case http://www.webloadmpstore.com. You can observe statistics, such as the response times for this page, as the load increases. You can also gather performance data about the objects on a page by setting WebLOAD to collect object level data. For example, you can determine whether pictures or other embedded objects are taking a long time to download. </p> <p>To set options for these verification tests: </p> <ol> <li> <p>On the WebLOAD Console ribbon bar, select the Tools tab, click the Current Session Options icon. </p> </li> <li> <p>Select the Functional Testing tab. </p> </li> <li> <p>Under Automatic Data Collection, select the Pages radio button. </p> </li> <li> <p>Under Page Time, select the Verification checkbox, enter 20 in the Max Time field, and select Minor Error from the Severity Level drop-down list. </p> </li> </ol> <p>If the time required to receive a page exceeds 20 seconds, a Minor Error message appears in the Log Window and the event appears in the WebLOAD data drilling report. </p> <ol> <li>Under Verification, select the Verification checkbox, and enter 5 in the % field. </li> </ol> <p>Five percent of the Virtual Clients will perform the selected verification tasks. This percentage lets you balance data gathering with the need to maintain performance during the test. </p> <ol> <li>Click OK. </li> </ol>"},{"location":"quickstart/#running-the-test","title":"Running the Test","text":"<p>You are now ready to start the test. As you run the test, you can view the data gathered by WebLOAD in real time. </p> <p>To run the test: </p> <ol> <li> <p>Click the Start Session  icon on the Console ribbon bar. </p> </li> <li> <p>At the prompt, click Yes to save the template. Type the filename QuickStart.tpl, and click Save. You can now reuse this template, with its script, schedule, and options at a later time.  </p> </li> </ol> <p>The test begins. !</p>"},{"location":"quickstart/#analyzing-test-results","title":"Analyzing Test Results","text":"<p>You can view test results in real time while the test is running or after the test session has completed. Once the test begins, the WebLOAD Wizard default report displays in the Results window. </p> <p></p>"},{"location":"quickstart/#viewing-the-results-in-real-time","title":"Viewing the Results in Real Time","text":"<p>Data on load size, hits per second, round time (one run through the script), and throughput (bytes per second) appear in the Chart View window, with a color legend underneath the chart. Each data point represents a 20 second slice. Data is gathered every 20 seconds and is then either averaged (for hits, round time, and throughout) or summed (for load size). The graphs are all normalized to scale so they can be viewed in a single Chart View window. You can access several kinds of test details: </p> <ul> <li>Hover over any data point to see actual values. </li> <li>Select the Dash Board Window  icon on the Console ribbon bar to view a quick overview of the status of the test including the following: </li> <li>Elapsed time </li> <li>Current load size (number of running Virtual Clients) </li> <li>Rounds executed </li> <li>Failed rounds </li> <li>Failed hits </li> <li>Hits per second</li> <li>Pages per second </li> <li>Throughput </li> <li>Select the Open Statistics  icon on the Console ribbon bar. A Statistics tab appears in the results window. Scroll through the data and double-click a cell to drill-down to further detail. </li> </ul> <p>Each of these views opens in a new tab window. Please close all windows except the Default Report tab. </p>"},{"location":"quickstart/#creating-integrated-reports","title":"Creating Integrated Reports","text":"<p>Create an Integrated report to view the results for additional metrics gathered by WebLOAD. This can be done while the current session is still running. </p> <p>To create an Integrated Report: </p> <ol> <li>On the WebLOAD Console ribbon bar, select Session  tab, and click the Report Manager  icon. </li> </ol> <p>The Integrated Report dialog box opens. </p> <ol> <li> <p>In the Integrated Report dialog box, click New. </p> </li> <li> <p>In the tree, expand the QuickStart::Total branch. </p> </li> <li> <p>Expand the Performance Measurements branch. </p> </li> <li> <p>Click the ''+'' sign adjacent to Hit Time to expand the branch and then expand Current Slice. Select the checkbox adjacent to Average (Current Value). </p> </li> </ol> <p>Checkmarks appear next to Hit Time, Current Slice, and Average (Current Value). </p> <ol> <li> <p>Expand Successful Hits and then expand Current Slice. Select the checkbox adjacent to Sum (Current Value). </p> </li> <li> <p>Expand Successful Connections and then expand Current Slice. Select the checkbox adjacent to Sum (Current Value). </p> </li> <li> <p>Scroll to the PM@your-system-name branch at the bottom of the tree (PM stands for performance monitor). Click the ''+'' sign adjacent to it to expand the branch. </p> </li> <li> <p>Expand Processor:%Processor Time:_Time and then expand Current Slice. Select the checkbox adjacent to Average (Current Value). </p> </li> </ol> <p>This choice displays the statistics on CPU processor usage that were collected during the load test. </p> <ol> <li> <p>Click OK. </p> <p>The Save dialog box appears.</p> </li> <li> <p>Type MyReport as the name of the report, click Predefined Report, and click OK.  The new report is added to the list of Predefined Reports. </p> </li> <li> <p>To open the newly created report, select MyReport in the list of Predefined Reports, and click Open. </p> <p>In the WebLOAD Console Results window, the MyReport tab appears displaying the report data. The name of the tab is the name of the report you selected. </p> </li> <li> <p>If the test is still running, click the  Stop All icon . </p> </li> <li> <p>Click the Save Load Session  icon to save the data from the test along with the template information (script, options, and schedule). Specify a filename (QuickStart) and location and click Save. </p> </li> </ol>"},{"location":"quickstart/#viewing-results-with-webload-analytics","title":"Viewing Results with WebLOAD Analytics","text":"<p>WebLOAD Analytics creates analysis reports based on your session data. Even after you complete a session, you can use this data to create both predefined reports and custom reports of your own. You can create portfolios, which are collections of custom reports to run on other sessions. You can also export reports to PDF, Excel, RTF, HTML, or TXT formats to share with others, store with test plans, or mail to team members. </p> <p>To view results with WebLOAD Analytics: </p> <ol> <li>Click the WebLOAD Analytics  icon on the Console ribbon bar. </li> </ol> <p>Data for the last session saved is automatically selected and imported into the WebLOAD Analytics sessions database. WebLOAD Analytics automatically creates a new report based on the Summary Portfolio and generates the report. You can optionally perform any of the following: </p> <ul> <li>Modify the report - Select the Report Settings tab and edit the parameters you wish to change. </li> <li>Print the report - Select the Preview tab from the Reports area. Click the Print button to open the Print dialog and print the report. </li> <li> <p>Publish the report - Click the Publish  to publish your report as the default format specified in the Preferences window. Select a location and name for your report and click Save. The report is published in the format chosen and saved to the location specified in the Preferences window. </p> </li> <li> <p>Close WebLOAD Analytics. </p> </li> <li>Close the WebLOAD Console. </li> </ul> <p>This concludes our Quick Start guide for WebLOAD. For additional information please refer to the WebLOAD Console User\u2019s Guide, to RadView\u2019s website at http://www.radview.com/support. </p>"},{"location":"analytics-user-guide/appendix_a/","title":"Appendix A - WebLOAD Analytics File System Structure","text":"<p>The WebLOAD Analytics file structure consists of system files, database files, log files, and files containing templates and template elements. The table below describes the WebLOAD file structure and its contents. The folders listed in the table below are located in the \\bin folder.   Folder Description Configuration This folder is a WebLOAD Analytics system  folder.  This folder should only be  modified by qualified RadView technicians. Database This folder contains the batch files required for the installation  and deployment of the WebLOAD Analytics Load Session Repository. Gallery This folder contains all  WebLOAD Analytics templates. Each  template has its own folder containing a template JRXML file and a Jasper file.  Each template category  contains the Subreports  subdirectory. Gallery[Category] A Category folder can be a group of templates, such as Pages Analysis  or any one of the following special categories:  \u009f Portfolios.  \u009f _Master Templates.  \u009f _System Templates. Gallery[Category]\\ [Template] A Template folder exists  for every template in WebLOAD Analytics, such as Load Size Summary or HTTP  Responses.  A template consists of the following files:  \u009f .jrxml \u2013 JasperReports template file. Defines static templates structure,  can be edited using iReport. See Using JasperSoft iReport on page 61)  \u009f .jasper \u2013  JasperReports compiled report. Generated automatically from .jrxml  \u009f .system.xml \u2013  Defines a system defined interactive report.  \u009f .user.xml \u2013 Stores user defined settings, when using Save Chart As Template.  \u009f systemChart.xml \u2013 Stores graph configuration (such as colors, line  types, etc.)  userChart.xml \u2013 Stores user graph configuration. Gallery[Category]\\  [Template]\\SUBREPORTS Some static Template folders contain additional .jrxml  subreports in  this folder, and their compiled .jasper files. Gallery[Category]\\  [Template]\\Resources Some Template folders contain this folder, which  contains the static graphical elements used by the template, including icons,  images, and logos. Gallery\\Portfolios This category contains all the [Portfolio]  folders. Gallery\\Portfolios\\ [Portfolio] A Portfolio folder exists for every portfolio in WebLOAD Analytics,  such as Summary Report and Extended Summary Report.  This folder contains a .portfolio file, which is an XML file specifying the  templates included in the portfolio. Gallery\\  _Master  Templates This category is intended for advanced  users and cannot be accessed from WebLOAD Analytics.  The category contains the  master templates used by charts and reports. The master template of a report  defines the report appearance. The master template of a chart is used in  conjunction with the template to define the appearance of the chart. RadView  recommends that only advanced users should modify these templates.  When  you add a master template, it is available for selection in the Preferences window  (for more information, see Defining Your Analytics Preferences on  page 67). Gallery\\  _System Templates This category is intended  for advanced users and cannot be accessed from WebLOAD Analytics.  The category contains  system templates that are references by other templates. For example, all  reports that are based on interactive reports reference a template in this  directory. Plugins This folder is a WebLOAD Analytics system folder.  This folder should only be  modified by qualified RadView technicians. Workspace This folder is created the first time that WebLOAD Analytics is  opened. It contains internal state persistence information."},{"location":"analytics-user-guide/appendix_b/","title":"Appendix B: Understanding the Statistics","text":""},{"location":"analytics-user-guide/appendix_b/#statistical-terms","title":"Statistical Terms","text":"<p>The following table lists general terms used for the statistics. </p> Term Description Percentile A percentile is the value of a variable below which  a certain percent of observations  fall. Thus the 30th percentile is the value (or score) below which 30 percent  of the observations may be found. Average The  arithmetic mean. For timers, average is the total amount of time  counted by the timer (not the elapsed time) divided by the Count (that is,  the total number of readings). For example, the average for Transaction Time  is the amount of time it took to complete all the successful transactions  divided by the number of successful transactions (the Count). Standard  deviation (stddev) The standard  deviation is a simple measure of the variability or dispersion of a data  set. A low standard deviation indicates that all of the data points are very  close to the same value (the mean). A high  standard  deviation indicates that the data is \u201cspread out\u201d over a large range of  values."},{"location":"analytics-user-guide/appendix_c/","title":"Appendix C: Running Analytics in Command Line Mode","text":"<p>WebLOAD Analytics can be executed in command line mode. This enables incorporating WebLOAD Analytics in scripts. </p> <p>Two executables are available: </p> <ul> <li>WLAnalyticsCMD.exe \u2013 Automatically generates a report for a specified session, and publishes or prints it. WebLOAD Analytics then closes. </li> <li>WLAnalytics.exe \u2013 Launches the WebLOAD Analytics UI, and generates a report for a specified session.  </li> </ul> <p>The executables are located in \\bin. For example: C:\\Program Files\\RadView\\WebLOAD\\bin."},{"location":"analytics-user-guide/appendix_c/#running-wlanalyticscmdexe","title":"Running WLAnalyticsCMD.exe","text":"<p>Use this executable to generate a report for a specified session, and publish or print it. </p> <p>Syntax </p> <p><code>WLAnalyticsCmd.exe \u2013m** **U**|**P** {**-t** *template\\_path*}|{**-p** *portfolio\\_path*} {**-s** *session\\_name*}|{**-ls** *session\\_path*} [**-f** **DOC**|**ODT**|**HTML**|**XLS**|**RTF**|**PDF**]</code> <code>[**-l** *report\\_location*] [**-n** *output\\_report\\_name*] [**-h**]</code> </p> <p>Parameters </p> Parameter Description Comments -m Indicates  the action. Specify one of the following  U \u2013 Publish.  P \u2013 Print. Mandatory  parameter. -t template_path Generates  a chart from a specified template. You must specify the path to the template  directory (either absolute or relative to the gallery). You must  specify one of the two options: -t or \u2013p. -p portfolio_path Generates  a report from a portfolio.  You must  specify the path to the portfolio directory (either absolute or relative to  the Portfolio category). -s session_name Specifies  a session already loaded into WebLOAD.  You must  specify the session name.  Note: You can use this parameter multiple times to  specify multiple sessions. This is necessary if you are generating a  regression chart. You must specify one of the two  options: -s or \u2013ls. -ls session_path Specifies  a load session file to import into WebLOAD.  You must  specify the full path.  Note: You can use this parameter multiple times to load multiple sessions. This  is necessary if you are generating a regression chart. -f Specifies  the output format for a published report.  Select  one of the following: DOC, ODT, HTML, XLS, RTF, or PDF.  If you  do not specify an output format, the default format, specified in Analytics  Preferences, is used. Optional parameter. -l report_location Specifies  the location of the published report. If you do not specify a location, the  default location, specified in Analytics Preferences, is used. Optional parameter. -n output_report_name Specifies  a name for the newly created report. If you do not specify a name, the  application provides a default name. Optional parameter. -h Displays  the help. Optional parameter. <p>Note: Note that you must specify: </p> <ul> <li>Publish or print. </li> <li>A template or portfolio.  </li> <li>A session, either previously loaded or to be imported. </li> </ul> <p>Examples </p> <p>To load the mysession.ls Load Session, generate a \u2018General/Load Size Summary\u2019 chart, and publish it in the default file format, in the default location, under the name test-report: </p> <p><code>WLAnalyticsCmd.exe -m U -t \"General\\Load Size Summary\" -ls \"C:\\mysession.ls\" \u2013n \"test-report\"</code> </p> <p>To use the loaded first-session Load Session, generate a \u2018Summary Portfolio\u2019 portfolio, and print it: </p> <p><code>WLAnalyticsCmd.exe -m P -p \"Summary Portfolio\" -s \u201cfirst-session\"</code> </p> <p>To use the loaded first-session and second-session Load Sessions, generate a \u2018Regression/Load Size Summary\u2019 regression chart, and publish it as a PDF file in C:\\myreports, using a default name: </p> <p><code>WLAnalyticsCmd.exe -m U -t \"Regression\\Load Size Summary\" -s \u201cfirst- session\" -s \"second-session\" \u2013f PDF \u2013l \u201cc:\\myreports\u201d</code></p> <p>Running WLAnalytics.exe </p> <p>Use this executable to open the WebLOAD Analytics UI, and open a report or generate a report for a specified session. </p> <p>Syntax </p> <p><code>**WLAnalytics.exe** {**-t** *template\\_path*}|{**- p** *portfolio\\_path*}  {**-s** *session\\_name*}|{**-ls** *session\\_path*} [**-h**] [**-noSplash**]</code> </p> <p>Parameters </p> Parameter Description Comments -t template_path Generates  a chart from a specified template. You must specify the path to the template  directory (either absolute or relative to the gallery). You must specify one of the two options: -t or \u2013p. -p portfolio_path Generates a report from a portfolio.  You must specify the path to the portfolio directory  (either absolute or relative to the Portfolio category). -s session_name Specifies  a session already loaded into WebLOAD.  You must specify the session name.  Note: You can use this parameter multiple times to  specify multiple sessions. This is necessary if you are generating a  regression chart. You must specify one of the two options: -s or \u2013ls. -ls session_path Specifies a load session file to  import into WebLOAD.  You must  specify the full path.  Note: You can use this parameter multiple times to load multiple sessions. This  is necessary if you are generating a regression chart. -h Displays the help. Optional  parameter. -noSplash Launches without a Splash  screen. Optional  parameter. <p>Note: </p> <p>Note that you must specify:</p> <ul> <li>A template, report, or portfolio.</li> <li>A session, either previously loaded or to be imported.</li> </ul> <p>Examples </p> <p>To open the WebLOAD Analytics UI, load the mysession.ls Load Session, and generate a \u2018General/Load Size Summary\u2019 chart: </p> <p><code>WLAnalytics.exe -t \"General\\Load Size Summary\" -ls \"C:\\mysession.ls\"</code> </p> <p>To open the WebLOAD Analytics UI, use the loaded first-session Load Session, and generate a \u2018Summary Portfolio\u2019 portfolio: </p> <p><code>WLAnalytics.exe -p \"Summary Portfolio\" -s \u201cfirst-session\"</code></p>"},{"location":"analytics-user-guide/appendix_d/","title":"Appendix D: Understanding the Templates","text":"<p>This appendix describes each template, and provides analysis highlights and tips where applicable. </p>"},{"location":"analytics-user-guide/appendix_d/#understanding-load-session-terminology","title":"Understanding Load Session Terminology","text":"<p>Note: All the measurements appearing in the various templates are explained in the glossary. </p> <p>Each run of the script body is called a round. A round is composed of transactions. Each transaction can include various combinations of the following: </p> <ul> <li> <p>Request(s) for a page. The page can include any number of graphics and contents files. Each request for a gif, jpeg, html file, etc., is a single hit. </p> </li> <li> <p>Sleep intervals. </p> </li> <li> <p>JavaScript functions. </p> </li> </ul> <p>The following illustrates a sample round: </p> Round Transaction Transaction Page Sleep Page Page JS function Hit Hit Hit Hit Hit Hit <p>A hit is composed of several stages, as shown in Figure 37. </p> <p>Figure 37 also shows at which stages a TCP connection starts and ends, and at which stages an HTTP* Request and an HTTP Response start and end. </p> Hit  Time Breakdown DNS  Lookup Connect  Time Send Time Response Time Process  Time Time To First Byte Receive Time TCP Connection HTTP Request HTTP Response"},{"location":"analytics-user-guide/appendix_d/#general-templates","title":"General Templates","text":"<p>This category of templates provides general statistical information about the Load Session. </p>"},{"location":"analytics-user-guide/appendix_d/#http-response-status-codes","title":"HTTP Response Status Codes","text":"<p>The HTTP Errors Over Time, HTTP Responses, and HTTP Responses Over Time templates display various HTTP response status messages. The following table lists all HTTP response status codes and their descriptions. For a full description, see http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html. </p> 304 Not  Modified 305 Use  Proxy 307 Temporary Redirect Client  Error 400 Bad Request 401 Unauthorized 402 Payment Required 403 Forbidden 404 Not  Found 405 Method Not Allowed 406 Not Acceptable 407 Proxy  Authentication Required 408 Request Timeout 409 Conflict 410 Gone 411 Length Required 412 Precondition Failed 413 Request Entity Too Large 414 Request-URI Too Long 415 Unsupported Media Type 416 Requested Range Not Satisfiable 417 Expectation Failed Server  Error 500 Internal Server Error 501 Not Implemented 502 Bad  Gateway 503 Service Unavailable 504 Gateway Timeout 505 HTTP  Version Not Supported"},{"location":"analytics-user-guide/appendix_d/#attempted-connections","title":"Attempted Connections","text":"<p>This template displays a bar graph of successful and failed connections, over time. It also displays the Load Size, for reference. </p> <p>Under normal circumstances, you would not expect to see failed connections. Failed connections may indicate a problem. </p>"},{"location":"analytics-user-guide/appendix_d/#connection-time","title":"Connection Time","text":"<p>This template displays a bar graph showing the breakdown of connection time into DNS Lookup Time and Connect Time. The template also displays the Load Size, for reference. </p> <ul> <li>DNS Lookup Time \u2013 The time it takes to resolve the host name and convert it to an IP address by calling the DNS server. Note that the DNS is checked once per virtual-user, for the whole session. </li> <li>Connect Time \u2013 The time it takes for a Virtual Client to connect to the System Under Test (SUT), in seconds. In other words, the time it takes from the beginning of the HTTP request to the TCP/IP connection.  </li> </ul> <p>Note that if the Persistent Connection option is enabled in the WebLOAD Console,  there may not be a value for Connect Time because the HTTP connection remains open between successive HTTP requests. </p> <p>General Session Information </p> <p>This template displays the following information about the Load Session: </p> <ul> <li>Start and end time, and duration. </li> <li>The maximum number of virtual clients. </li> <li>Which scripts are running.  </li> <li>General information about the reporter. </li> <li>General information about the System under Test (SUT). This template is useful as an opening page for published reports. </li> </ul> <p>Tip</p> <p>You can customize the look of the General Session Information template by editing the settings of the following parameters: PEN_COMPANY, OPEN_REPORTER_NAME, OPEN_REPORTER_TITLE, OPEN_SUT_DIAGRAM, </p> <p>OPEN_SUT_NAME, OPEN_SUT_VERSION. Refer to*Defining Your Parameter Preferences on page 71. </p>"},{"location":"analytics-user-guide/appendix_d/#http-errors-over-time","title":"HTTP Errors Over Time","text":"<p>This template displays for each time interval, the number of HTTP client side errors (4xx) and HTTP server side errors (5xx) that occurred during the interval.  </p> <p>The template also displays the Load Size, for reference. </p>"},{"location":"analytics-user-guide/appendix_d/#http-responses","title":"HTTP Responses","text":"<p>This template displays a summary of the HTTP response status messages received during the Load Session. For each type of response status, the template lists the number of responses received and what percentage it represents of all HTTP responses. </p> <p>Some common response status messages are: </p> <ul> <li>200 \u2013 OK </li> <li>302 \u2013 Found </li> <li>404 \u2013 Not Found </li> <li>500 \u2013 Internal Server Error </li> </ul> <p>For more information see:http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html. </p>"},{"location":"analytics-user-guide/appendix_d/#http-responses-over-time","title":"HTTP Responses Over Time","text":"<p>This template displays the number of HTTP responses at each time interval, for each response status code. </p>"},{"location":"analytics-user-guide/appendix_d/#load-size-summary","title":"Load Size Summary","text":"<p>This template displays the progress of the Load Session by showing the load size over time. That is, the number of Virtual Clients running over time. </p> <p>This template provides an understanding of the nature of the test being conducted. All other templates should be analyzed in the context of load size behavior. </p>"},{"location":"analytics-user-guide/appendix_d/#performance-summary","title":"Performance Summary","text":"<p>This template displays the main performance indicators and changes in Load Size, over time: </p> <ul> <li>Load Size \u2013 The number of Virtual Clients running during the last reporting interval. </li> <li>Page Time \u2013 The time it takes to complete a successful upper level request, in seconds. The Page Time is the sum of the Connect Time, Send Time, Response Time, and Process Time for all the hits on a page. </li> <li>Time to First Byte \u2013 The time it takes from when a request is sent until the Virtual Client receives the first byte of data. </li> <li>Response Time \u2013The time it takes the SUT to send the object of an HTTP request back to a Virtual Client, in seconds. In other words, the time from the end of the HTTP request until the Virtual Client has received the complete item it requested. </li> <li>Hits Per Second \u2013 The number of times the Virtual Clients made an HTTP request, divided by the elapsed time, in seconds. Each request for a gif, jpeg, html file, etc., is a single hit. </li> <li>Throughput \u2013 The average number of bytes per second, transmitted from the SUT to the Virtual Clients running the script during the last reporting interval. In other words, this is the value of the Response Data Size divided by the number of seconds in the reporting interval. </li> </ul>"},{"location":"analytics-user-guide/appendix_d/#analysis-highlights","title":"Analysis Highlights","text":"<p>Hits Per Second, Page Time, Time to First Byte, and Response Time are \u2018lower is better\u2019 measurements. An increase in these measurements as the load increases may indicate performance degradation. Sudden decreases in them may also indicate a problem. </p> <p>Under normal circumstances, Throughput is expected to grow linearly with the load. A constant throughout on increased load may indicate a bottle-neck (bandwidth, or server capacity). A decreasing throughput may also indicate a problem, such as the server sending less responses or shorter, erroneous responses. </p>"},{"location":"analytics-user-guide/appendix_d/#response-time-breakdown","title":"Response Time Breakdown","text":"<p>This template displays a bar graph showing the breakdown of response time between Time to First Byte and Receive Time, as well as the Send Time.</p> <ul> <li>Send Time \u2013 The time it takes the Virtual Client to write an HTTP request to the SUT, in seconds.  </li> <li>Time to First Byte \u2013 The time it takes from when a request is sent until the Virtual Client receives the first byte of data. </li> <li>Receive Time \u2013 The elapsed time between receiving the first byte and the last byte. The template also displays the Load Size, for reference. </li> </ul>"},{"location":"analytics-user-guide/appendix_d/#log-and-errors-templates","title":"Log and Errors Templates","text":"<p>This category of templates provides information about the errors logged for this Load Session.  </p>"},{"location":"analytics-user-guide/appendix_d/#errors-by-severity","title":"Errors By Severity","text":"<p>This template displays the total number of errors received, grouped by severity level: Info, Minor Error, Error, and Severe Error.  </p> <p>By default, only warnings (minor errors) and above are displayed. To change the default setting, edit the settings of the MIN_SEVERITY parameter (refer toDefining Your Parameter Preferences on page 71). </p>"},{"location":"analytics-user-guide/appendix_d/#errors-per-second","title":"Errors Per Second","text":"<p>This template displays the number of error messages logged over time, for each level of severity. </p>"},{"location":"analytics-user-guide/appendix_d/#errors-per-transaction","title":"Errors Per Transaction","text":"<p>This template displays a summary of all failed transactions, and the reason for failure. The following attributes are displayed: </p> <ul> <li>Transaction Name \u2013 The name of the transaction. </li> <li>Total Count \u2013 The total number of times the transaction was executed. </li> <li>Successful Count \u2013 The number of successful executions of the transaction. </li> <li>Failed Count \u2013 The number of failed executions of the transaction. </li> <li>Marked Count \u2013 The number of times a lower level transaction, meaning a transaction nested within a higher level transaction, failed within the current transaction. </li> </ul> <p>For each type of failure, the template displays a description of the failure and how many times this type of failure occurred. </p>"},{"location":"analytics-user-guide/appendix_d/#log-messages","title":"Log Messages","text":"<p>This is a detailed template of all the log messages logged during the Load Session.  Note that WebLOAD automatically stops logging after a certain number of log events. </p> <p>By default, only minor errors and above are displayed. To change the default setting, edit the settings of the MIN_SEVERITY parameter (refer to Defining Your Parameter Preferences on page 71). </p>"},{"location":"analytics-user-guide/appendix_d/#log-summary","title":"Log Summary","text":"<p>This template displays a summary of the Load Session\u2019s logged messages. Similar messages are grouped, and their total count shown. </p>"},{"location":"analytics-user-guide/appendix_d/#pages-analysis-templates","title":"Pages Analysis Templates","text":"<p>This category of templates provides an analysis of the pages requested during the Load Session.</p>"},{"location":"analytics-user-guide/appendix_d/#pages-count","title":"Pages Count","text":"<p>This template displays the total number of pages received over time. This represents the total number of times the Virtual Client made upper level requests (both successful and unsuccessful) during the last reporting interval.</p> <p>The template also displays the Load Size, for reference.</p>"},{"location":"analytics-user-guide/appendix_d/#total-page-time","title":"Total Page Time","text":"<p>This template displays the Page Time, over time.</p> <p>Page Time is the time it takes to complete a successful upper level request, in seconds. It is the sum of the Connect Time, Send Time, Response Time, and Process Time for all the hits on a page.</p>"},{"location":"analytics-user-guide/appendix_d/#percentile-templates","title":"Percentile Templates","text":"<p>This category of templates provides information in the form of percentiles.</p> <p>A percentile is the value of a variable below which a certain percent of observations fall. For example, if a graph shows 40 Hits Per Second for the 70th percentile, that means that 70 percent of the Hits Per Second observation values are below 40.</p>"},{"location":"analytics-user-guide/appendix_d/#hits-per-second-by-percent","title":"Hits Per Second By Percent","text":"<p>This template displays the distribution of Hits Per Second values in the session. Hits Per Second is the number of times the Virtual Clients made an HTTP request,</p> <p>divided by the elapsed time, in seconds. Each request for a gif, jpeg, html file, etc. is a single hit.</p> <p>For example, if the graph shows 40 Hits Per Second for the 70th percentile, that means that 70 percent of the Hits Per Second observation values are below 40.</p>"},{"location":"analytics-user-guide/appendix_d/#response-time-by-percent","title":"Response Time By Percent","text":"<p>This template displays the distribution of the following response time values in the session:</p> <ul> <li>Response Time \u2013 The time it takes the SUT to send the object of an HTTP request back to a Virtual Client, in seconds. In other words, the time from the end of the HTTP request until the Virtual Client has received the complete item it requested.</li> <li>Time To First Byte \u2013 The time it takes from when a request is sent until the Virtual Client receives the first byte of data.</li> </ul> <p>For example, if the graph shows a Response Time of 1.3 seconds for the 70th percentile, that means that 70 percent of the Response Time observation values are below 1.3 seconds.</p>"},{"location":"analytics-user-guide/appendix_d/#transaction-response-time-by-percent","title":"Transaction Response Time By Percent","text":"<p>For each transaction in the session, this template displays the distribution of the transaction response time values in the session.</p> <p>For example, if the graph shows a Login Time of 10 seconds for the 80th percentile, that means that 80 percent of the Login Time observation values are below 10 seconds.</p>"},{"location":"analytics-user-guide/appendix_d/#regression-templates","title":"Regression Templates","text":"<p>This category of templates enables you to compare one selected \u201cMain\u201d session to one or more additional sessions you specify.</p> <p>Regression is very useful for comparing two sessions that were run on the same Load Template. The purpose is to gauge whether a small change in the System Under Test has degraded the performance.</p> <p>Most templates available under the Regression category are identical to templates of the same name available under other categories, with the following enhancement: each displayed measure is shown for all the sessions being compared. A given measure calculated for different sessions will appear with the same color, but a different line style. This enables easy comparison between measurements from different sessions.</p> <p>For example, in the following Pages Count regression chart, two sessions are compared: \u201cMP_Store\u201d and \u201cinteresting\u201d. The Load Size measure for both is shown in green, but the line style (dotted, continuous, round points, square points) is different.</p>"},{"location":"analytics-user-guide/appendix_d/#errors-by-severity_1","title":"Errors By Severity","text":"<p>This regression template displays for each Load Session you specified, the total number of errors received, grouped by severity level: Info, Minor Error, Error, and Severe Error.</p>"},{"location":"analytics-user-guide/appendix_d/#errors-per-second_1","title":"Errors Per Second","text":"<p>For each specified Load Session, this regression template displays the number of error messages logged over time, by severity.</p>"},{"location":"analytics-user-guide/appendix_d/#failed-transactions","title":"Failed Transactions","text":"<p>For each specified Load Session, this regression template displays information about transactions that had failures during the session.</p>"},{"location":"analytics-user-guide/appendix_d/#full-comparison","title":"Full Comparison","text":"<p>This regression template compares the average values of all measurements from two sessions. It is therefore useful for pinpointing possible disparities in measurements that are not normally compared in regression charts.</p> <p>The template compares the average values of the second session to the average values of the Main session.  </p> <ul> <li>The higher the ratio between them, the darker the background color of the ratio value.  </li> <li>A negative ratio denotes a decrease in average measurement value; a positive ratio denotes an increase in average measurement value. </li> </ul>"},{"location":"analytics-user-guide/appendix_d/#analysis-highlights_1","title":"Analysis Highlights","text":"<p>If a disparity is found, you can explore it further by creating a detailed report on the suspected measurement using the User Defined Blank Regression Template. Refer to Creating a Regression Chart from the Blank Regression Template on page 29. </p>"},{"location":"analytics-user-guide/appendix_d/#general-session-information","title":"General Session Information","text":"<p>This regression template displays the following information about the main Load Session: </p> <ul> <li>Start and end time, and duration. </li> <li>Which scripts are running.  </li> <li>General information about the reporter. </li> <li>General information about the System under Test (SUT). </li> </ul> <p>The template also displays which additional sessions are specified. </p> <p>This template is useful as an opening page for published reports generated from regression templates. </p>"},{"location":"analytics-user-guide/appendix_d/#http-responses_1","title":"HTTP Responses","text":"<p>This regression template displays a summary of the HTTP response status messages received during the specified Load Sessions. For each type of response status, the template lists the number of responses received and what percentage it represents of all HTTP responses. </p> <p>Some common response status messages are: </p> <ul> <li>200 \u2013 OK </li> <li>302 \u2013 Found </li> <li>404 \u2013 Not Found </li> <li>500 \u2013 Internal Server Error </li> </ul> <p>For more information see:http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html. </p>"},{"location":"analytics-user-guide/appendix_d/#load-size-summary_1","title":"Load Size Summary","text":"<p>For each specified Load Session, this regression template displays the progress of the load session by showing the load size over time. That is, the number of Virtual Clients running over time.  </p> <p>This template provides an understanding of the nature of the tests being conducted. All charts should be analyzed in the context of load size behavior. </p>"},{"location":"analytics-user-guide/appendix_d/#pages-count_1","title":"Pages Count","text":"<p>For each of the specified Load Sessions, this regression template displays the total number of pages received over time. This represents the total number of times the Virtual Client made upper level requests (both successful and unsuccessful) during the last reporting interval.  </p> <p>The template also displays the Load Sizes, for reference. </p>"},{"location":"analytics-user-guide/appendix_d/#performance-summary_1","title":"Performance Summary","text":"<p>For each of the specified Load Session, this regression template displays the main performance indicators and changes in Load Size, over time: </p> <ul> <li>Load Size \u2013 The number of Virtual Clients running during the last reporting interval. </li> <li>Page Time \u2013 The time it takes to complete a successful upper level request, in seconds. The Page Time is the sum of the Connect Time, Send Time, Response Time, and Process Time for all the hits on a page. </li> <li>Time to First Byte \u2013 The time it takes from when a request is sent until the Virtual Client receives the first byte of data. </li> <li>Response Time \u2013 The time it takes the SUT to send the object of an HTTP request back to a Virtual Client, in seconds. In other words, the time from the end of the HTTP request until the Virtual Client has received the complete item it requested. </li> <li>Hits Per Second \u2013 The number of times the Virtual Clients made an HTTP request, divided by the elapsed time, in seconds. Each request for a gif, jpeg, html file, etc., is a single hit. </li> <li>Throughput \u2013 The average number of bytes per second, transmitted from the SUT to the Virtual Clients running the script during the last reporting interval. In other words, this is the value of the Response Data Size divided by the number of seconds in the reporting interval. </li> </ul>"},{"location":"analytics-user-guide/appendix_d/#analysis-highlights_2","title":"Analysis Highlights","text":"<p>The Hits Per Second, Page Time, Time to First Byte and Response Time are \u2018lower is better\u2019 measurements. An increase in these measurements as the load increases may indicate performance degradation. Sudden decreases in them may also indicate a problem.  </p> <p>Under normal circumstances, Throughput is expected to grow linearly with the load. A constant throughout on increased load may indicate a bottle-neck (bandwidth, or server capacity). A decreasing throughput may also indicate a problem, such as the server sending less responses or shorter, erroneous responses. </p>"},{"location":"analytics-user-guide/appendix_d/#pmm-server-side-statistics","title":"PMM Server-side Statistics","text":"<p>For each of the specified Load sessions, this regression template displays the statistics gathered by the Performance Measurement Monitor </p> <p>The selected server side measurements are shown over time. The Load Size is also shown, for reference. Note that server side statistics must be explicitly added at the template definition stage, before executing the load session  </p> <p>For information on the PMM and how to add server side statistics, see the WebLOAD Console User  Guide. </p>"},{"location":"analytics-user-guide/appendix_d/#response-time","title":"Response Time","text":"<p>This regression template is used to compare the total response time over time of two or more sessions. The compared Load Size is also displayed, for reference. </p>"},{"location":"analytics-user-guide/appendix_d/#response-time-breakdown_1","title":"Response Time Breakdown","text":"<p>For each of the specified Load Sessions, this regression template displays a bar graph showing the breakdown of response time between Time to First Byte and Receive Time, as well as the Send Time. </p> <ul> <li>Send Time \u2013 The time it takes the Virtual Client to write an HTTP request to the SUT, in seconds.  </li> <li>Time to First Byte \u2013 The time it takes from when a request is sent until the Virtual Client receives the first byte of data. </li> <li>Receive Time \u2013 The elapsed time between receiving the first byte and the last byte. For each Load Session, the template also displays the Load Size, for reference. </li> </ul>"},{"location":"analytics-user-guide/appendix_d/#slowest-transactions","title":"Slowest Transactions","text":"<p>For each of the specified Load Sessions, this regression template displays the session\u2019s transactions, ordered by the average transaction time, slowest first. </p> <p>You can configure the template to show only a certain number or certain percentage of the slowest transactions. To do so, edit the settings of the TRAN_PERCENT or TRAN_QTY parameters (refer to*Defining Your Parameter Preferences on page 71). </p>"},{"location":"analytics-user-guide/appendix_d/#transactions-with-most-failures","title":"Transactions With Most Failures","text":"<p>For each of the specified Load Sessions, this regression template displays the transactions, ordered by the highest failure count. </p> <p>You can configure the template to show only a certain number or certain percentage of the top failing transactions. To do so, edit the settings of the TRAN_PERCENT or TRAN_QTY parameters (refer to*Defining Your Parameter Preferences on page 71) </p>"},{"location":"analytics-user-guide/appendix_d/#total-page-time_1","title":"Total Page Time","text":"<p>For each of the specified Load Sessions, this regression template displays the Page Time, over time.  </p> <p>Page Time is the time it takes to complete a successful upper level request, in seconds. It is the sum of the Connect Time, Send Time, Response Time, and Process Time for all the hits on a page. </p> <p>The template also displays the Load Sizes, for reference.</p>"},{"location":"analytics-user-guide/appendix_d/#transactions-over-load","title":"Transactions Over Load","text":"<p>For each of the specified Load Sessions, this regression template displays the transaction response time compared with Load Size values, for each transaction in the session.  </p> <p>This information can be useful when the load size does not change linearly with time. </p>"},{"location":"analytics-user-guide/appendix_d/#transactions-over-time","title":"Transactions Over Time","text":"<p>For each of the specified Load Sessions, this regression template displays changes in transaction time over session running time. It also displays the Load Size, for reference. </p>"},{"location":"analytics-user-guide/appendix_d/#transactions-summary","title":"Transactions Summary","text":"<p>For each of the specified Load Sessions, this regression template displays summary information about the transactions in the session. For each type of transaction, the following information is displayed: </p> <ul> <li> <p>Transaction Count \u2013 Displays the total number of successful and failed transactions. </p> </li> <li> <p>Transaction Time \u2013 For successful transactions, the table displays Transaction Time statistics: Average, Percentile X%, Max, Min, Standard deviation, and Transactions Per Second  </p> </li> </ul> <p>The default percentile is 90%. To change the default setting, edit the settings of the PERCENTILE parameter (refer to*Defining Your Parameter Preferences on page 71). </p> <p>You can use the Transactions Over Time and Transaction Response Time By Percent regression templates instead of this template. </p>"},{"location":"analytics-user-guide/appendix_d/#server-side-statistics-templates","title":"Server Side Statistics Templates","text":"<p>This category of templates provides statistical information related to the server. </p>"},{"location":"analytics-user-guide/appendix_d/#imported-statistics","title":"Imported Statistics","text":"<p>This template displays statistical information related to the server that was imported from an external source.  For information on how to import external statistics, see the WebLOAD Console User Guide. </p>"},{"location":"analytics-user-guide/appendix_d/#load-generators-health","title":"Load Generators Health","text":"<p>This template displays basic CPU usage and memory usage statistics, for each Load Generator used in the session.  </p> <p>Use this template to make sure that the Load Generators are not overloaded while running the load. Overloaded Load Generators may not be able to fully load the server, and may skew the test results. </p>"},{"location":"analytics-user-guide/appendix_d/#pmm-server-side-statistics_1","title":"PMM Server-Side Statistics","text":"<p>This template displays the statistics gathered by the Performance Measurement Monitor </p> <p>The selected server side measurements are shown over time. The Load Size is also shown, for reference. Note that server side statistics must be explicitly added at the template definition stage, before executing the load session  </p> <p>For information on the PMM and how to add server side statistics, see the WebLOAD Console User Guide. </p>"},{"location":"analytics-user-guide/appendix_d/#transaction-analysis-templates","title":"Transaction Analysis Templates","text":"<p>This category of templates enables you to analyze the Load Session\u2019s transactions. Refer toUnderstanding Load Session Terminology on page 86 for an explanation of the basic elements of a transaction. </p>"},{"location":"analytics-user-guide/appendix_d/#failed-transactions_1","title":"Failed Transactions","text":"<p>This template displays information about transactions that had failures during the session. </p> <p>The chart depicts failed transactions and failure reasons. </p>"},{"location":"analytics-user-guide/appendix_d/#slowest-transactions_1","title":"Slowest Transactions","text":"<p>This template displays the session\u2019s transactions, ordered by the average transaction time, slowest first. </p> <p>You can configure the template to show only a certain number or certain percentage of the slowest transactions. To do so, edit the settings of the TRAN_PERCENT or TRAN_QTY parameters (refer to*Defining Your Parameter Preferences on page 71). </p>"},{"location":"analytics-user-guide/appendix_d/#transaction-counters","title":"Transaction Counters","text":"<p>This chart shows successful and failed transaction counts for each transaction in the session. </p>"},{"location":"analytics-user-guide/appendix_d/#transaction-response-times","title":"Transaction Response Times","text":"<p>This chart shows the average transaction response time, for each transaction. </p>"},{"location":"analytics-user-guide/appendix_d/#transactions-dashboard","title":"Transactions Dashboard","text":"<p>This template displays for each transaction: </p> <ul> <li>A graph chart of transaction behavior over time. </li> <li>A bar chart of successful/failed transactions over time. </li> <li>A pie chart of overall success/fail statistics. </li> </ul>"},{"location":"analytics-user-guide/appendix_d/#transactions-over-load_1","title":"Transactions Over Load","text":"<p>This template displays for each transaction in the session, the transaction response time compared with Load Size values.</p> <p>This information can be useful when the load size does not change linearly with time.</p>"},{"location":"analytics-user-guide/appendix_d/#transactions-over-time_1","title":"Transactions Over Time","text":"<p>This template displays changes in transaction time over session running time. It also displays the Load Size, for reference.</p>"},{"location":"analytics-user-guide/appendix_d/#transactions-with-most-failures_1","title":"Transactions With Most Failures","text":"<p>This template displays the transactions, ordered by the highest failure count. You can configure the template to show only a certain number or certain percentage of the top failing transactions. To do so, edit the settings of the TRAN_PERCENT or TRAN_QTY parameters (refer to*Defining Your Parameter Preferences on page 71) </p>"},{"location":"analytics-user-guide/appendix_d/#statistical-correlation","title":"Statistical Correlation","text":"<p>Statistical correlation templates are used to pinpoint suspect causes for unusual behavior of a certain measurement. </p> <p>There are four predefined templates in this category. They differ in the leading measurement (Response Time, Throughput), and in the graphical representation (over time or over the leading measurement). However, you can specify any measurement in any script to be the leading measurement, and you can view its correlation to all other measurements either over time or over the leading measurement. </p>"},{"location":"analytics-user-guide/appendix_d/#response-time-correlation","title":"Response Time Correlation","text":"<p>This template displays the correlation of specified measurements with the Response Time measurement, over Response Time. If you selected a different leading measurement to correlate to, the chart displays correlation with the leading measurement you selected.  </p> <ul> <li>The Correlation column shows the linear correlation coefficient. It is a number between 0 and 1, with 1 being the highest possible correlation.  </li> </ul> <p>The measurements are listed in the order of correlation, with the highest first. </p> <ul> <li>The Direction column indicates whether the correlation is positive (the measurement goes up when the leading measurement goes up, and down when the leading measurement goes down) or negative (the measurement goes up when the leading measurement goes down, and down when the leading measurement goes up). </li> </ul> <p>You can apply a Time Filter that restricts the correlation calculation to a specific time frame, to better focus on a certain behavior of the leading measurement. Refer toFiltering by Time on page 39. </p>"},{"location":"analytics-user-guide/appendix_d/#response-time-correlation-over-time","title":"Response Time Correlation Over Time","text":"<p>This template displays the correlation of specified measurements with the Response Time measurement, over time. If you selected a different leading measurement to correlate to, the chart displays correlation with the leading measurement you selected. </p> <ul> <li>The Correlation column shows the linear correlation coefficient. It is a number between 0 and 1, with 1 being the highest possible correlation.  </li> </ul> <p>The measurements are listed in the order of correlation, with the highest first. </p> <ul> <li>The Direction column indicates whether the correlation is positive (the measurement goes up when the leading measurement goes up, and down when the leading measurement goes down) or negative (the measurement goes up when the leading measurement goes down, and down when the leading measurement goes up). </li> </ul> <p>Tip</p> <p>You can apply a Time Filter that restricts the correlation calculation to a specific time frame, to better focus on a certain behavior of the leading measurement. Refer toFiltering by Time on page 39. </p>"},{"location":"analytics-user-guide/appendix_d/#throughput-correlation","title":"Throughput Correlation","text":"<p>This template displays the correlation of specified measurements with the Throughput measurement, over Throughput. If you selected a different leading measurement to correlate to, the chart displays correlation with the leading measurement you selected. </p> <ul> <li>The Correlation column shows the linear correlation coefficient. It is a number between 0 and 1, with 1 being the highest possible correlation.  </li> </ul> <p>The measurements are listed in the order of correlation, with the highest first. </p> <ul> <li>The Direction column indicates whether the correlation is positive (the measurement goes up when the leading measurement goes up, and down when the leading measurement goes down) or negative (the measurement goes up when the leading measurement goes down, and down when the leading measurement goes up). </li> </ul> <p>Tip</p> <p>You can apply a Time Filter that restricts the correlation calculation to a specific time frame, to better focus on a certain behavior of the leading measurement. Refer toFiltering by Time on page 39.</p>"},{"location":"analytics-user-guide/appendix_d/#throughput-correlation-over-time","title":"Throughput Correlation Over Time","text":"<p>This template displays the correlation of specified measurements with the Throughput measurement, over time. If you selected a different leading measurement to correlate to, the chart displays correlation with the leading measurement you selected. </p> <ul> <li>The Correlation column shows the linear correlation coefficient. It is a number between 0 and 1, with 1 being the highest possible correlation.  </li> </ul> <p>The measurements are listed in the order of correlation, with the highest first. </p> <ul> <li>The Direction column indicates whether the correlation is positive (the measurement goes up when the leading measurement goes up, and down when the leading measurement goes down) or negative (the measurement goes up when the leading measurement goes down, and down when the leading measurement goes up). </li> </ul> <p>Tip</p> <p>You can apply a Time Filter that restricts the correlation calculation to a specific time frame, to better focus on a certain behavior of the leading measurement. Refer toFiltering by Time on page 39. </p>"},{"location":"analytics-user-guide/changing_chart_settings/","title":"Changing Chart Settings","text":"<p>The Settings tab of a chart enables you to modify the chart by changing various chart settings. </p> <ul> <li>You can filter your Load Session data results in various ways. You can filter the results displayed in your chart by selecting specific scripts or measurements within your Load Session, by applying time or statistics-based time filters. For example, you can focus your chart on a specific script or time segment within the Load Session data and/or specify a threshold for one or more of the statistics used in the selected Load Session (such as Hits per second &gt; 50). This enables you to produce charts that contain only the information you wish to present. </li> <li>You can also modify various chart parameters such as the time format, tolerance range, etc. </li> </ul> <p>After you modify a chart\u2019s settings, click  or  to regenerate the chart. </p> <p>To change the settings of a chart: </p> <ol> <li>Select the chart in the Charts area. </li> <li>Click the Settings tab located above the chart. </li> </ol> <p>The Settings tab appears in the Charts area. </p> <p></p> <ol> <li>In the Name field, optionally edit the name of the chart. </li> <li>Optionally specify a different Load Session by clicking Open. The Select Sessions window appears. SeeSpecifying a Load Session on page 22 for instructions. </li> <li>Optionally specify scripts or measurements.  </li> <li>For a static chart, specify scripts in the Script Selection section. SeeSelecting scripts \u2013 Static Chart on page 37. </li> <li>In an interactive chart, specify measurements in the Measurement Selection section. SeeSelecting Measurements \u2013 Interactive Chart on page 37. </li> <li>Optionally set time filter settings. SeeFiltering by Time on page 39. </li> <li>Optionally set statistics-based time filter settings. See*Filtering by Statistics-based Time on page 40. </li> <li>Optionally change parameter settings. SeeModifying Chart Parameters on page 43. </li> </ol>"},{"location":"analytics-user-guide/changing_chart_settings/#selecting-scripts-static-chart","title":"Selecting scripts \u2013 Static Chart","text":"<p>In a static chart, you can select specific scripts to include in your chart. The generated chart will include a separate graph and table for each script. By Default, charts are generated for all the scripts of a Load Session. </p> <p>To select scripts: </p> <ol> <li> <p>Select the chart in the Charts area. </p> </li> <li> <p>Click the Settings tab of the chart (Figure 12).  </p> </li> <li> <p>Click the Script Selection section. The Script Selection area appears. </p> </li> </ol> <p></p> <p>Note: If any changes are made to the script selection, an asterisk (*) is displayed besides Script Selection in the section\u2019s title. </p> <ol> <li>Select the scripts to include in your chart. Total is the script selected by default and indicates that the chart will be generated for all the Load Session\u2019s scripts.  </li> </ol> <p>The selected scripts are added to your chart settings. To regenerate the chart with the new settings, click .</p>"},{"location":"analytics-user-guide/changing_chart_settings/#selecting-measurements-interactive-chart","title":"Selecting Measurements \u2013 Interactive Chart","text":"<p>In an interactive chart, you can select specific measurements from all or specific scripts. By default, charts are generated for all the measurements of a Load Session. </p> <p>To select measurements: </p> <ol> <li> <p>Select the chart in the Charts area. </p> </li> <li> <p>Click the Settings tab of the chart (Figure 12).  </p> </li> <li> <p>Click the Measurement Selection section. The Measurement Selection area appears.</p> </li> </ol> <p>Note: If any changes are made to the measurements selection, an asterisk (*) is  displayed besides Measurement Selection in the section\u2019s title. </p> <ol> <li>Select the measurements to include in your chart. Total is selected by default and indicates that the report will be generated for all the Load Session\u2019s scripts.  </li> <li>Select a value for the X-axis of the graph: </li> <li>Time \u2013 Shows the selected measurements over time. In the Parameters section (described inModifying Chart Parameters on page 43), you can edit the Time Format parameter and set it to one of the following values:  </li> <li>Relative seconds \u2013 Shows the selected measurements over time. The time is displayed as the number of seconds that elapsed from the beginning of the test (20, 40, 60, 80, 120, etc.). </li> <li>Relative time \u2013 Shows the selected measurements over time. The time is displayed as the time that passed from the beginning of the test (00:20, 00:40, 01:00, 01:20, etc.). </li> <li>Absolute time \u2013 Shows the real time, starting from the time at the beginning of the test (17:31:40, 17:32:00, 17:32:20, \u2026). </li> <li>Load Size \u2013 Shows the change in selected measurements over the Load Size measurement. For example, if you select the 'Response Time\u2019 measurement, then Response Time over Load Size shows the response times in different load sizes, regardless of when the measurement was received. </li> <li>Percentile \u2013 Shows all the percentile values of the selected measurement(s). For example, the 90th percentile means that 90% of measurements are smaller than this value, and 10% are larger than this value. </li> <li>Summary \u2013 Shows the sum (such as the average value) of the selected measurements.  </li> <li>Other \u2013 Shows the selected measurement(s) over any measurement of your choice. For example, 'Response Time over Content Size' shows the variations in the response time, based on the size of the response, regardless of time/load size. </li> </ol> <p>The selected measurements are added to your chart settings. To regenerate the chart with the new settings, click .</p>"},{"location":"analytics-user-guide/changing_chart_settings/#filtering-by-time","title":"Filtering by Time","text":"<p>Reports are generated for the entire Load Session by default. Use the Time Filter to remove the beginning or end of a Load Session or focus on a specific window of Load Session time. If the template you are using does not support this filter, the Time Filter section is disabled. </p> <p>To change the Load Session time range: </p> <ol> <li> <p>Select the chart in the Charts area. </p> </li> <li> <p>Click the Settings tab of the chart (Figure 12).  </p> </li> <li> <p>Click the Time Filter section. The Time Filter appears. </p> </li> <li> <p></p> </li> </ol> <p>Notes: </p> <ul> <li>If any changes are made to this filter, an asterisk (*) is displayed besides Time  Filter in the section\u2019s title.</li> <li>You can enable or disable the Time Filter by selecting or clearing the Filter Enabled checkbox. When this checkbox is cleared, \u201c(Disabled)\u201d is displayed in the Time Filter section. </li> </ul> <ol> <li>Use the slider to change the Load Session start and end times. The number of seconds and the actual dates and times are displayed as you move the slider. </li> </ol> <p>Only the Load Session data from the time specified is used to generate the report. </p> <p>To clear the Time Filter: </p> <ul> <li>In the Time Filter area (Figure 15), click . The Time Filter defaults are restored in the From and To fields. By default, the entire duration of the Load Session is displayed. </li> </ul> <p>To regenerate the chart with the new settings, click . </p>"},{"location":"analytics-user-guide/changing_chart_settings/#filtering-by-statistics-based-time","title":"Filtering by Statistics-based Time","text":"<p>The statistics-based time filter enables you to specify a numeric filter for each of the statistics in the Load Session. This filter filters out segments of a chart based on their time. However, in contrast to the time filter, data is only filtered if it matches the specified condition. You can specify a numeric filter for multiple statistics and connect them using logical connectors, such as match all or any of the conditions. If the template you are using does not support this filter, the Statistics-based Time Filter section is disabled.  </p> <p>Note: The actual statistics are not filtered by this filter. For example, if your Load Session contains the following statistics and you filter by Load Size being greater than or equal to five, your chart will display the last three time segments only (from 40 to 80): </p> Time Load Size 20 1 40 5 60 10 80 15 <p>Note: For an explanation of the statistics and their meanings, see the WebLOAD Console User Guide. </p> <p>To add a filter to a specific statistic: </p> <ol> <li> <p>Select the chart in the Charts area. </p> </li> <li> <p>Click the Settings tab of the chart (Figure 12). </p> </li> <li> <p>Click the Statistics-based Time Filter section. The Statistics-based Time Filter area appears. </p> </li> </ol> <p></p> <p>Notes: </p> <ul> <li>If any changes are made to this filter, an asterisk (*) is displayed beside Statistics-based Time Filter in the section\u2019s title.</li> <li>You can enable or disable the Statistics-based Time Filter by selecting or clearing the Filter Enabled checkbox. When this checkbox is cleared, \u201c(Disabled)\u201d is displayed in the Time Filter section. </li> </ul> <ol> <li>Click . The Measurement Selection for Statistics-based Time Filter window appears. </li> </ol> <p></p> <ol> <li> <p>Select the measurement that you wish to filter from the top list. </p> </li> <li> <p>In the Operator column, select an operator from the drop-down list (\u2264, &lt;, =, &gt;, or \u2265). </p> </li> <li> <p>Enter a value in the Value field. </p> </li> </ol> <p>Note: The range of values recorded during the selected Load Session for the selected  measurement is displayed in the Value range field.  </p> <ol> <li>Click OK. The statistic is added to the Statistics-based Time Filter area. </li> <li>Repeat steps 5 through 8 for each statistic that you wish to add to the filter. </li> <li>If you added multiple statistics, select a connector (Match all conditions or Match any of the conditions) in the Statistics-based Time Filter area. </li> </ol> <p>Note: The Match all conditions and Match any of the conditions connectors apply to all statistics. For example, defining multiple measurements connected by Match all conditions filters according to all the statistics.</p> <p>To edit the statistics listed in the Statistics-based Time Filter area: </p> <ol> <li>In the Statistics-based Time Filter area (Figure 16), double-click a statistic. </li> </ol> <p>-Or- </p> <p>Select a statistic and click .  </p> <p>The Measurement Selection for Statistics-based Time Filter window appears. </p> <ol> <li>Edit the statistic as necessary and click OK. The statistic is updated. </li> </ol> <p>To remove a statistic from the Statistics-based Time Filter area: </p> <ul> <li>In the Statistics-based Time Filter area (Figure 16), select a statistic and click . The statistic is removed from the Statistics-based Time Filter area. </li> </ul> <p>To clear the Statistics-based Time Filter area of all statistics: </p> <ol> <li>In the Statistics-based Time Filter area (Figure 16), click . A confirmation message appears. </li> <li>Click Yes to confirm. The Statistics-based Time Filter area is cleared of all entries. To regenerate the chart with the new settings, click .</li> </ol>"},{"location":"analytics-user-guide/changing_chart_settings/#modifying-chart-parameters","title":"Modifying Chart Parameters","text":"<p>The Chart Master template is used together with the individual template to create a chart. The master templates contain global parameters that can be modified to change your chart\u2019s appearance, such as whether to show tables and graphs, or show only graphs.  </p> <p>Chart templates contain local parameters. You can change the values for these parameters in the Parameters section of the chart. This will only affect the current chart. The parameters that appear in the Parameters section can also be modified in the Preferences window, setting new default values for all templates using them. For a full list of parameters, seeDefining Your Parameter Preferences on page 71. </p> <p>Note: You can change the chart master template being used by specifying a different  chart master template in the Analytics tab of the Preferences window. SeeDefining Your Analytics Preferences on page 67. </p> <p>To modify your chart parameters: </p> <ol> <li> <p>Select the chart in the Charts area. </p> </li> <li> <p>Click the Settings tab of the chart (Figure 12).  </p> </li> <li> <p>Click the Parameters section. A list of available parameters appears.  </p> </li> </ol> <p>Note: The values displayed for the available parameters are the global values defined in the Parameters tab of the Preferences window</p> <p></p> <p>Note: If any changes are made to any of the parameters, an asterisk (*) is displayed besides Parameters in the section\u2019s title.</p> <ol> <li>Select a parameter and click  to edit the parameters of your choice. Only parameters relevant to the selected template are displayed.  </li> </ol> <p>To regenerate the chart using the modified parameters, click .</p>"},{"location":"analytics-user-guide/defining_preferences/","title":"Defining Your Preferences","text":"<p>You can define your default preferences for the following:  </p> <ul> <li>Analytics Preferences \u2013 General display and file location preferences (seeDefining Your Analytics Preferences on page 67). </li> <li>Database Preferences \u2013 Preferences related to the WebLOAD Analytics PostgreSQL Load Session Repository (seeDefining Your Database Preferences on page 70). </li> <li>Parameters Preferences \u2013 Customize your template parameters globally (see Defining Your Parameter Preferences on page 71). </li> </ul>"},{"location":"analytics-user-guide/defining_preferences/#defining-your-analytics-preferences","title":"Defining Your Analytics Preferences","text":"<p>WebLOAD enables you to define default Analytics parameters relating to saving and storing templates, reports, and log files. You can define the number of recently used reports and recently used sessions available to view in WebLOAD Analytics. You can also specify a path to Jasper iReport to enable you to access it directly from WebLOAD Analytics. </p> <p>To define the Analytics preferences: </p> <ol> <li>Select Window &gt; Preferences. The Preferences window opens, displaying the Analytics preferences by default. </li> </ol> <p></p> <ol> <li>Edit the Analytics preferences, according to the information in the following table: </li> </ol> Preference Description Gallery Path The default location in  which your templates and template categories are stored.  Edit the path, or click Browse to specify a different default location. Reports location The default location to which your WebLOAD  reports are saved.  Edit the path, or click Browse, to specify a different default location. Log zip location The default location to which zipped log  files are saved.  Edit the path, or click Browse to specify a different default location. iReport path The location of the JasperSoft  iReport.exe application file.  Use this field to enable  editing templates in JasperSoft iReport or launch JasperSoft iReport directly  from WebLOAD Analytics. This option is only applicable if you have JasperSoft  iReport installed on your machine (see Using JasperSoft   iReport on  page 61). Published reports location The default location to which your WebLOAD  reports are published.  Edit the path, or click Browse, to specify a different default location. Chart Preview master  template The master template that WebLOAD uses for your  charts. The following master templates are available:  \u009f Raw \u2013  Displays only the actual data (table/graph). The title page, opening page,  background, footers, and so on, are not included in the report.  \u009f WebLOAD \u2013 In addition to displaying the actual data, displays also a title page, and footers/headers with page  numbers, logos, etc.  WebLOAD with  background \u2013  In addition to the items displayed in the WebLOAD master template, displays also a background image. Reports master template The master template that WebLOAD uses for  your reports. The same master  templates available for Charts are available for Reports (Raw, WebLOAD,  WebLOAD with background). Default portfolio to be  automatically generated for imported sessions The portfolio that WebLOAD  Analytics automatically generates when you import a Load Session. The default  portfolio is the Summary portfolio.  Select None  to disable this function. Number of reports shown in  recent reports The number of recently used reports you  want to display in the Recent Reports tab. Default output format for  published reports The default format in which your reports are  published.  Select the format you want your reports to  be published in by default from the options listed. Logger severity settings The minimum severity level of errors that  are logged. Used for support purposes only. Launch external viewer  after publishing report Select this option to open a published  report in its native application immediately after publishing. When this  option is not selected, the published report is not opened. <ol> <li>Click OK to save changes, </li> </ol> <p>-Or- </p> <p>Click Restore Defaults to restore preferences to the factory default settings.</p>"},{"location":"analytics-user-guide/defining_preferences/#defining-your-database-preferences","title":"Defining Your Database Preferences","text":"<p>WebLOAD Analytics enables you to define default parameters relating to the WebLOAD Analytics Load Session Repository, including username and password details. In order to connect to a remote database, additional configuration for that remote database may be necessary (for more information, see the WebLOAD Installation Guide). </p> <p>To define your database preferences: </p> <ol> <li> <p>Select Window &gt; Preferences. The Preferences window opens displaying the Analytics preferences by default (Figure 33). </p> </li> <li> <p>Click Database, </p> </li> </ol> <p>-Or- </p> <p>Type Database in the type filter text field, and press Enter. The Database preferences are displayed. </p> <p></p> <ol> <li>Edit the Database preferences, according to the information in the following table: </li> </ol> Preference Description Database host name The host on which the database is located. Database port The port used to access the database. Database name The name of the database. User name The database user name.  The user name is defined during installation. User password The database password.  The password is defined during  installation. <ol> <li>Click OK to save changes, </li> </ol> <p>-Or- </p> <p>Click Restore Defaults to restore preferences to the factory default settings. </p>"},{"location":"analytics-user-guide/defining_preferences/#defining-your-parameter-preferences","title":"Defining Your Parameter Preferences","text":"<p>The Preferences window enables you to define default parameters relating to the charts and reports you produce using WebLOAD Analytics.  </p> <p>Parameters can be applied locally to individual charts, or globally to all charts and reports. If the same parameter is defined locally, the local parameter overrides the global parameter.  </p> <p>For information about applying parameter preferences locally, to individual templates, seeModifying Chart Parameters on page 43. </p> <p>To display the global parameter preferences: </p> <ol> <li> <p>Select Window &gt; Preferences. The Preferences window opens displaying the Analytics preferences by default (Figure 33). </p> </li> <li> <p>Click Parameter,  -Or- Type Parameter in the type filter text field and press Enter. The Parameters preferences are displayed. </p> </li> </ol> <p></p> <p>This table provides a description of the default parameters and their functions. </p> Parameter Description Valid Values Applicable Templates AXES_SCALE Controls how measurements are spread over the  Y-axes.  \u009f Separate Y-Axes \u2013 each  measurement is shown on its own axis.  \u009f Single Y-Axis \u2013 all  measurements are shown on a single  axis, using a single scale. Values that are an order of magnitude smaller may  appear as zero.  \u009f Consolidate Y-Axes by type  \u2013 show measurements of the same type/unit on the same axis and scale.  \u009f Auto scale to single  Y-Axis \u2013 show all measurements on a single, 0-100 scaled axis. Each measurement is scaled accordingly.  \u009f Show only trends \u2013 show  all measurements without scale. The actual values cannot be understood from  the graph. This option is used to compare  trends. Specify one of the  following:  \u009f Separate Y-Axes  \u009f Single Y-Axis  \u009f Consolidate Y-Axes by type (default value)  \u009f Auto scale to single  Y-Axis  \u009f Show only trends All interactive templates. COMMENTS Any additional comments,  displayed under the Additional Comments  heading on the opening page. Enter the text you wish to  display. General Session  Information  All interactive templates CONTINUOUS_ LINE Defines whether to draw  the chart line as a continuous  line, bridging over missing data points.  Set to True when data  points are likely to be missing  (such as in a Transactions Over Time charts). Select True or False. All interactive templates FOOTERLOGO The logo or image that you  wish to display in the footer. Enter the path to the  image that you wish to use, in the format:  \\pathname Master templates FOOTERTEXT The text that you wish to  display in the footer of the page. Enter the text you wish to display. Master templates HEADERLOGO The logo or image that you  wish to display in the header. Enter the path to the  image that you wish to use, in the format:  \\pathname Master templates HEADERTEXT The text that you wish to  display in the header of the page. Enter the text you wish to display. Master templates MAX_Y_AXES Determines the maximum number of Y-axes to show.  If the number of Y-axes in  your repot is greater than this value, the Y-axes are consolidated to a  single axis (similar to AXES_SCALE = Auto scale to single Y-Axis). Enter a numerical value (Default = 6). All interactive templates. MIN_SEVERITY The minimum log severity level to show. The  levels are:  1 \u2013 Info  2 \u2013 Minor error 3 \u2013 Error  4 \u2013  Severe error Enter a numerical value from 1 \u2013 4. Errors By Severity Error Per Second Log Messages  Log Summary OPEN_ COMPANY The company name that you wish to display on the  opening page. Enter the text you wish to display. General Session  Information OPEN_ REPORTER_ NAME The name of the person creating the chart,  displayed on the opening page. Enter the text you wish to display. General Session  Information OPEN_ REPORTER_ TITLE The title of the person creating the chart,  displayed on the opening page. Enter the text you wish to display. General Session  Information OPEN_SUT_ DIAGRAM A schematic diagram of the SUT to which the chart  refers, displayed on the opening page. Enter the path to the  image that you wish to use, in the format:  \\pathname General Session  Information OPEN_SUT_ NAME The name of the System Under Test (SUT) to which  the chart refers, displayed on the opening page. Enter the text you wish to  display. General Session  Information OPEN_SUT_ VERSION The version of the SUT to which the chart refers,  displayed on the opening page. Enter the text you wish to  display. General Session  Information PERCENTILE Defines a value below  which X percent of the observations fall.  For example, the 20th percentile is the value  below which 20 percent of the observations may be found. In other words, a  test score that is greater than 85 percent of the scores of people taking the  test is referred to as being at the 85th percentile. Enter the percentage of  results you wish to display (Default = 90). Failed  Transactions Slowest Transaction  Transactions  Summary SHOW_ TABLES Defines whether to show tables and graphs, or show  only graphs. Select True or False. All SUBTITLE The subtitle that you wish to display in the title  page. Enter the text you wish to  display. Master  templates THRESHOLD_ TOLERANCE Defines a tolerance range, above the  threshold value. Results in the chart table that fall within the threshold  tolerance range are displayed in yellow.  On line graphs, a line representing the tolerance  threshold is displayed. Enter a numerical value  above the threshold value, to define the range (Default = 0). Regression templates  All interactive templates THRESHOLD Defines a threshold value above which results are highlighted in  your chart.  Results exceeding the  threshold value are displayed in red.  On line graphs, a line representing the tolerance value is displayed. Enter a numerical  threshold value (Default = 0). Regression templates  All interactive  templates TIME_FILTER_ FROM_ BEGINNING Defines the number of  seconds to trim from the beginning of a session, by default.  This is useful if there is  often a lot of noise at the beginning of a session Enter a numerical value  (Default = 0) All templates with a time  filter TIME_FILTER_ FROM_END Defines the number of  seconds to trim from the end of a  session, by default.  This is useful if there is often a lot of noise at  the end of a session Enter a numerical value  (Default = 0). All templates with a time  filter TIME_FORMAT The time format to use  when the X-axis represents time.  Relative Time \u2013 shows the  time that elapsed since session start time.  Absolute Time \u2013 shows the  full time.  Absolute Date \u2013 shows the full date and time.  Relative Seconds \u2013 shows  the number of seconds that elapsed since session start time. Specify one of the following:  \u009f Relative Time (default value)  \u009f Absolute Time  \u009f Absolute Date  Relative Seconds All interactive templates.  Relevant when the X-axis represents time. TOP_RESULTS The default number of  displayed measurements, starting from the first measurement in the list.  The number zero (0)  indicates all specified measurements. Enter a numerical value (Default = 0) All interactive templates TRAN_PERCENT Defines the percentage of transactions you  wish to display in a chart.  This parameter takes  precedence over the TRAN_QTY parameter. Enter a numerical value (Default = 100). Slowest Transactions  Transactions with Most  Failures TRAN_QTY Defines the number of transactions you wish  to display in a chart.  This parameter is relevant if the TRAN_PERCENT  parameter is zero (0). Enter a numerical value (Default = 10). Slowest Transactions  Transactions with Most Failures <p>To apply a parameter to your charts or reports globally: </p> <ol> <li> <p>From the parameters displayed in the Preferences window (Figure 35), select the parameter you wish to edit and click Edit. The Edit Parameter window appears. </p> </li> <li> <p>Edit the relevant fields and click OK. The parameters table is updated to reflect your changes. The parameter is applied each time you create a new chart or report. </p> </li> </ol> <p>To add a new parameter to the parameters list: </p> <ol> <li> <p>In the Parameters tab of the Preferences window (Figure 35), click Add. The Add Parameter window appears. </p> </li> <li> <p>Enter information for the new parameter, according to the following table: </p> </li> </ol> Field Description Parameter Name The name of the parameter. Display Name The name that is displayed in the template  parameters list. Parameter Type The type of parameter:  \u009f String  \u009f Integer  \u009f Double  \u009f Positive Integer  \u009f Positive Double Parameter Value The value of the parameter. Description A short description of the function of the  parameter. <ol> <li>Click OK. The parameter is added to the parameters list and the change is applied to the Templates Gallery. </li> </ol> <p>To remove a parameter from the parameters list: </p> <ul> <li>From the list of parameters displayed in the Preferences window (Figure 33), select the parameter you wish to remove and click Remove. The parameter is removed from the list. </li> </ul> <p>Note: RadView recommends that you do not remove any parameters. To restore the  default list of parameters, click Restore Defaults. When selecting Restore Defaults, all existing parameters and their associated values are restored to their default settings.</p>"},{"location":"analytics-user-guide/generating_charts/","title":"Generating Charts","text":"<p>WebLOAD Analytics enables you to quickly and easily generate your charts in various formats. Using WebLOAD Analytics, you can create and view charts that are tailor made for your needs. You can then publish the charts in various formats, or create a report compiled of various charts, and publish the report (seeGenerating Reports on page 45). </p>"},{"location":"analytics-user-guide/generating_charts/#creating-new-charts","title":"Creating New Charts","text":"<p>To create a new chart, double-click a template in the Gallery tab (Figure 3). The chart is displayed in the Preview tab for a static chart, or in the Chart View tab for an interactive chart (Figure 4). </p> <p>Note: If you did not open WebLOAD Analytics from WebLOAD Console, the Select sessions dialog appears and you are prompted to specify a Load Session (seeSpecifying a Load Session on page 22).</p> <p></p> <p>You can now: </p> <ul> <li>Modify the chart by editing chart settings and then regenerating the chart (see Changing Chart Settings on page 35).  </li> <li>Print the chart (seePrinting a Chart on page 27). </li> <li>Publish the chart to various formats (seePublishing Charts on page 34). </li> <li>For an interactive chart, you can analyze the chart data in various ways (see Customizing Interactive Charts on page 31).  </li> <li>Create a report that will include the chart, as well as other open charts of your choice (seeGenerating Reports on page 45). </li> </ul>"},{"location":"analytics-user-guide/generating_charts/#specifying-a-load-session","title":"Specifying a Load Session","text":"<p>If you did not open WebLOAD Analytics from WebLOAD Console, the Select Session window appears the first time you double-click a template to create a chart. </p> <p></p> <p>To select a session: </p> <ol> <li>Browse to the location of the Load Session file in the From File area, and click Open. </li> </ol> <p>-Or- </p> <p>Select the session in the From Repository area, and click OK.  </p> <p>Note:  You can search for Load Sessions (seeSearching for Load Sessions on page 52).</p>"},{"location":"analytics-user-guide/generating_charts/#creating-a-regression-chart","title":"Creating a Regression Chart","text":"<p>A regression chart compares one selected \u201cMain\u201d session to all additional sessions you specify. Regression charts are the only kind of chart that require you to specify multiple sessions for the generation of the chart. </p> <p>To create a regression chart: </p> <ol> <li>In the Templates Gallery, open the Session Comparison node located under the Templates node. </li> <li>Double-click a regression template. The Select Sessions window appears. </li> </ol> <p></p> <ol> <li>Optionally browse to the location of a Load Session file in the From File area, and click Open. </li> </ol> <p>The Load Session file appears in the From Repository area.  </p> <ol> <li> <p>Optionally search for Load Sessions (seeSearching for Load Sessions on page 52). </p> </li> <li> <p>In the From Repository area, select a Load Session you wish to use, and click . </p> </li> </ol> <p>The Load Session moves to the Selected Sessions area. Repeat this step to include all the Load Sessions you wish to compare. </p> <p>The first session you select is set as the main Load Session. The main session appears in red. The main session is the session to which all other Load Sessions are compared.  </p> <ol> <li>To specify a different session as the main session, select the Load Session in the Selected Sessions area and click .</li> </ol> <p>To remove a Load Session from a regression chart: </p> <ol> <li>Select the regression chart in the Charts area. </li> <li>Click the Settings tab. </li> <li>Click . The Select Sessions window appears. </li> </ol> <p></p> <ol> <li>Select the Load Session you wish to remove from the Selected Sessions area. </li> <li>Click . The selected Load Session is removed from the Selected Sessions area. It is still available for use in WebLOAD Analytics, and remains listed in the From Repository area. </li> </ol>"},{"location":"analytics-user-guide/generating_charts/#creating-a-statistical-correlation-chart","title":"Creating a Statistical Correlation Chart","text":"<p>Statistical correlation charts are used to identify measurements that have high correlation with a specified leading measurement, and are therefore suspect causes for the behavior of the leading measurement.</p> <p>There are four predefined statistical correlation templates. They differ in the leading measurement (Response Time, Throughput), and in the graphical representation (over time or over the leading measurement). However, you can specify any measurement in any script to be the leading measurement, and you can view its correlation to all other measurements either over time or over the leading measurement.  </p> <p>The below image shows a sample statistical correlation chart. </p> <p></p> <p>Note that you can specify which measurements to display in the graph, by selecting or deselecting them in the in the table at the bottom of the Chart view tab.  </p> <p>The table in the statistical correlation chart displays correlation information in two columns \u2013 Correlation and Direction.  </p> <ul> <li>Correlation is the linear correlation coefficient. It is a number between 0 and 1, with 1 being the highest possible correlation.  </li> </ul> <p>The measurements are listed in order of correlation, with the highest first. </p> <ul> <li>Direction indicates whether correlation is positive (the measurement goes up when the leading measurement goes up, or down when the leading measurement goes down) or negative (the measurement goes up when the leading measurement goes down, or down when the leading measurement goes up). </li> </ul> <p>Example </p> <p>Suppose you notice a time frame in which throughput suddenly decreases. Generate a Throughput Correlation chart, use the Time Filter to view the relevant time period, and look for measurements with a high correlation  </p> <ul> <li>If HTTP Response 200 has also decreased correspondingly (positive Direction), which means the server is sending less OK results with requested data, while HTTP Response 500 has increased correspondingly, meaning the server is sending more short \u2018internal error\u2019 responses, then the increased inability to fill requests for data is probably what is causing decreased throughput. </li> </ul>"},{"location":"analytics-user-guide/generating_charts/#specifying-the-leading-measurement-in-a-statistical-correlation-chart","title":"Specifying the Leading Measurement in a Statistical Correlation Chart","text":"<p>To change the leading measurement in a statistical correlation chart: </p> <ol> <li>Generate a statistical correlation chart. </li> <li>Click the Settings tab. </li> <li>Click . The Custom X Axis Correlation window appears. </li> <li>Select a measurement in a script. </li> <li>Click OK.  </li> <li>Select a value for the X Axis. For example, select Time, or select Other and then specify the leading measurement. </li> <li>Click . A correlation chart is generated for the measurement you selected. </li> </ol> <p>Note:   You may wish to apply a Time Filter that restricts the correlation calculation to a specific time frame, to better focus on a certain behavior of the leading measurement (refer toFiltering by Time on page 39). However, note that filtering a time period which is too short may harm accuracy. </p>"},{"location":"analytics-user-guide/generating_charts/#printing-a-chart","title":"Printing a Chart","text":"<p>You can print an open WebLOAD Analytics chart. </p> <p>To print a chart: </p> <ol> <li> <p>In the Charts area, click the Chart View tab or Preview tab of an open chart. </p> </li> <li> <p>Click . The Print window opens.  </p> </li> <li> <p>Specify the options you require, and click OK. The report is printed. </p> </li> </ol>"},{"location":"analytics-user-guide/generating_charts/#creating-an-interactive-chart-from-the-blank-template","title":"Creating an Interactive Chart from the Blank Template","text":"<p>You can create a new interactive chart based on the Blank Template. This template can be modified or you can use it to create additional custom interactive templates, as described inCreating an Interactive Template from the Blank Template on page 56. </p> <p>Although you can modify any template to create your own custom chart, the Blank Template is unique in that its Measurement Selection area is empty. </p> <p>To generate a chart based on the Blank Template: </p> <ol> <li>In the Navigation area, click the Gallery tab. The Templates Gallery appears. </li> </ol> <p></p> <ol> <li>Select User Defined \u0086 Blank Template. The Settings tab of the Blank Template opens in the Charts area. </li> <li>Edit the Settings of the template as desired. SeeChanging Chart Settings on page 35. Note that you must specify at least one measurement (see Figure 14) in order to generate a chart. </li> <li>Click . A progress window appears while the chart is generated. The chart is displayed in the Preview tab.  </li> </ol> <p>You can now analyze, print, or publish the chart.</p> <ul> <li> <p>For information about analyzing the chart, seeCustomizing Interactive Charts on page 31. </p> </li> <li> <p>For information about printing your chart, seePrinting a Chart on page 27. </p> </li> <li> <p>For information about publishing your chart, seePublishing Charts on page 34. </p> </li> </ul>"},{"location":"analytics-user-guide/generating_charts/#creating-a-regression-chart-from-the-blank-regression-template","title":"Creating a Regression Chart from the Blank Regression Template","text":"<p>You can create a new interactive regression chart based on the Blank Regression Template. An interactive regression chart is both interactive, which means it enables you to analyze and customize the graph; and it is also a regression chart which means that it compares one selected session to all other specified session. </p> <p>The Blank Regression Template can be modified or you can use it to create additional custom interactive regression templates, as described inCreating an Interactive Regression Template from the Blank Regression Template on page 57. Although you can modify any regression template to create your own custom regression template, the Blank Regression Template is unique in that it is interactive. </p> <p>To generate a regression chart based on the Blank Regression Template: </p> <ol> <li>In the Navigation area, click the Gallery tab. The Templates Gallery appears. </li> </ol> <p></p> <ol> <li>Select User Defined \u0086 Blank Regression Template. The Select Sessions window appears. </li> <li>Optionally browse to the location of a Load Session file in the From File area, and click Open. </li> </ol> <p>The Load Session file appears in the From Repository area.  </p> <ol> <li>Optionally search for Load Sessions (seeSearching for Load Sessions on page 52). </li> <li>In the From Repository area, select a Load Session you wish to use, and click . </li> </ol> <p>The Load Session moves to the Selected Sessions area. Repeat this step to include all the Load Sessions you wish to compare. </p> <p>The first session you select is set as the main Load Session. The main session appears in red. The main session is the session to which all other Load Sessions are compared.  </p> <ol> <li>To specify a different session as the main session, select the Load Session in the Selected Sessions area and click. </li> <li>Edit the Settings of the template as desired. SeeChanging Chart Settings on page 35. Note that you must specify at least one measurement in order to create a template. </li> <li>Click . A progress window appears while the chart is generated. The chart is displayed in the Preview tab.  </li> </ol> <p>You can now analyze, print, or publish the chart.  </p> <ul> <li>For information about analyzing the chart, seeCustomizing Interactive Charts on page 31. </li> <li>For information about printing your chart, seePrinting a Chart on page 27. </li> <li>For information about publishing your chart, seePublishing Charts on page 34. </li> </ul>"},{"location":"analytics-user-guide/generating_charts/#navigating-through-a-chart","title":"Navigating through a Chart","text":"<p>You can view and navigate through a chart in the Preview tab.  </p> <p>To view and navigate through a chart: </p> <ol> <li>Click the Preview tab. </li> </ol> <p>Note: If the chart is an interactive chart and a preview has not yet been generated, click the Chart View tab, then click  . A Preview tab appears.</p> <ol> <li>Click the appropriate navigation button to navigate through your report, according to the information in the following tables.</li> </ol> Button Description Scroll to the beginning of your report. Scroll back one page. Scroll forward one page. Scroll to the end of your report. Show the actual page size. Fit the page width to the window. Zoom in. Zoom out."},{"location":"analytics-user-guide/generating_charts/#customizing-interactive-charts","title":"Customizing Interactive Charts","text":"<p>The  icon displayed adjacent to a template in the gallery indicates that a chart created with this template is an interactive chart. An interactive chart contains a toolbar, which provides a variety of tools for analyzing and presenting the data in the chart.  </p> <p>To use the tools of an interactive chart: </p> <ol> <li> <p>Click the Chart View tab. </p> </li> <li> <p>Note: If the chart has not yet been generated, double-click the template. The chart is generated and displayed in the Chart View tab.</p> </li> <li> <p></p> </li> <li> <p>Click the appropriate button in the interactive toolbar, according to the information in Table 4. </p> </li> <li> <p>To preserve the modifications you made to the chart display, click . The modified chart appears in the Preview tab. </p> </li> </ol> Button Function Description Copy To Clipboard Copy the chart or data to the clipboard. It can then be pasted (using Ctrl+V) into another application in any of the following formats:. Bitmap \u2013 A raster graphic, which can be pasted into applications such as Microsoft Paint.. Metafile \u2013 A vector graphic which can be pasted into applications such as Microsoft Word. . Text \u2013 Data only, which can be pasted into applications such as Microsoft Excel. Gallery Change the line type to any type found in the gallery, such as bar-chart, area, etc. Anti Aliasing Smooth jagged edges. Palette Change all colors to a predefined palette from the list of palettes. 2D/3D Switch between 2D mode and 3D mode with depth. Rotated View Rotate the chart. Only applicable in 3D mode. Rotate X Axis Rotate the chart around the X axis. Only applicable in Rotated View mode. Rotate Y Axis Rotate the chart around the Y axis. Only applicable in Rotated View mode. Clustered If there are several series, place them behind each other, instead of next to each other. Only applicable in 3D mode. Axes Settings Control aspects of the X Axis and Y Axis.Note: In WebLOAD Analytics there is often more than one Y Axis, so the Y Axis setting has no effect. Instead, right- click the Y Axis you wish to change. Point Label Add labels with the numeric value of each point. Data Editor Show the data as a list. Legend Box Display a legend listing the series names, their color, and their marker shape. Zoom Enlarge image. Click Zoom again to zoom out. Properties Set the various chart settings."},{"location":"analytics-user-guide/generating_charts/#publishing-charts","title":"Publishing Charts","text":"<p>WebLOAD Analytics enables you to publish a chart in the following formats: </p> <ul> <li>Doc (Microsoft Word). </li> <li>PDF (Adobe Reader). </li> <li>XLSX (Excel). Please note the following: </li> <li>The summary table (below the graph) is exported if it is displayed. To ensure that the summary table is displayed, set the SHOW_TABLES parameter to True (as described inDefining Your Parameter Preferences on page 71). </li> <li>To work with the data more conveniently, change the Chart Preview master template to Raw (as described inDefining Your Analytics Preferences on page 67). </li> <li>XSL (Excel 97-2003). Note that it is preferable to use XSLX format whenever possible. </li> <li>HTML (Browser, Internet Explorer). </li> <li>RTF (Rich Text Format). Note that it is preferable to use Doc format whenever possible. </li> <li>ODT (Open Office). </li> </ul> <p>To publish a chart: </p> <ol> <li>In the Charts area, click the Preview tab.  </li> </ol> <p>Note: If the chart is an interactive chart and a preview has not yet been generated, click the Chart View tab, then click  . A Preview tab appears. </p> <ol> <li>Click  to publish your chart as the default format specified in the Preferences window, </li> </ol> <p>-Or- </p> <p>Click the adjacent arrow to select a different format.  </p> <p>The Save As window opens to the location specified in the Preferences window. </p> <ol> <li>Select a location and name for your chart and click Save. The chart is published in the chosen format and saved to the location you specified.</li> </ol>"},{"location":"analytics-user-guide/generating_reports/","title":"Generating Reports","text":"<p>WebLOAD Analytics enables you to quickly and easily generate reports in various formats. A report is a concatenation of all open charts, or of a subset of your choice. You can then publish the report in various formats. </p> <p>Note: Whether or not a title page is displayed depends on the master template in use. For more information about modifying the master template, see Defining Your Analytics Preferences.</p>"},{"location":"analytics-user-guide/generating_reports/#creating-new-reports","title":"Creating New Reports","text":"<p>A report is a compilation of all or some of the charts open in the Charts area. A prerequisite to generating a report is to create the charts you wish to include in the report. </p> <p>To generate a WebLOAD Analytics report: </p> <ol> <li>Select File &gt; Generate Report or click </li> </ol> <p>The Generate Report: Report Settings window appears, listing all open charts.</p> <p></p> <ol> <li> <p>Specify a name for the report. </p> </li> <li> <p>Select the charts to include in the generated report. </p> </li> <li> <p>Optionally, change the order in which the charts will be displayed by selecting a chart and clicking Up or Down. </p> </li> <li> <p>Click . </p> </li> </ol> <p>A Preview of the report appears. You can: </p> <ul> <li>Navigate the report using the navigation bar, described in Table 3. </li> <li>Print the report (seePrinting a Report on page 47). </li> <li>Publish the report to various formats (seePublishing Reports on page 47). </li> <li>Save the report to file (seeSaving Reports on page 48).  </li> <li>Modify global report parameters (seeDefining Your Preferences on page 67). </li> </ul>"},{"location":"analytics-user-guide/generating_reports/#printing-a-report","title":"Printing a Report","text":"<p>To print a WebLOAD Analytics report: </p> <ol> <li>Open the report you wish to publish. For more information seeOpening Saved Reports on page 49. </li> <li>Click  to generate a report preview. </li> <li>In the report preview, click . The Print window opens.  </li> <li>Select the print options you require and click OK. The report is printed. </li> </ol>"},{"location":"analytics-user-guide/generating_reports/#publishing-reports","title":"Publishing Reports","text":"<p>WebLOAD Analytics enables you to publish a report in the following formats: </p> <ul> <li>Doc (Microsoft Word). </li> <li>PDF (Adobe Reader). </li> <li>XLS (Excel). Note the following: </li> <li>Summary tables (below the graph) are exported if they are displayed. To ensure that summary tables are displayed, set the SHOW_TABLES parameter to True in the charts you want displayed (as described inModifying Chart Parameters on page 43). </li> <li>To work with the data more conveniently, change the Reports master template to Raw (as described inDefining Your Analytics Preferences on page 67). </li> <li>XSL (Excel 97-2003). Note that it is preferable to use XSLX format whenever possible. </li> <li>HTML (Browser, Internet Explorer). </li> <li>RTF (Rich Text Format). Note that it is preferable to use Doc format whenever possible. </li> </ul> <p>To publish a report: </p> <ol> <li> <p>Open the report you wish to publish. For more information seeOpening Saved Reports on page 49. </p> </li> <li> <p>Click  to generate a report preview. </p> </li> <li> <p>Click  in the report preview toolbar to publish your report as the default format specified in the Preferences window, </p> </li> </ol> <p>-Or- </p> <p>Click the adjacent arrow to select a different report format.  </p> <p>The Save As window opens to the location specified in the Preferences window. </p> <ol> <li>Select a location and name for your report and click Save. The report is published in the format chosen and saved to the location you specified. </li> </ol>"},{"location":"analytics-user-guide/generating_reports/#saving-reports","title":"Saving Reports","text":"<p>When you save your report, it is saved to a default location, unless you specify a different location in the Save to field. To change the default location, seeDefining Your Analytics Preferences on page 67. </p> <p>To save your report: </p> <ol> <li>Select File \u0086 Save or click . </li> </ol> <p>If this is the first time you are saving your report, the Save As window opens. If you have already specified a location in the Save As window, your file is saved to the default save location. </p> <p></p> <ol> <li> <p>Enter the path to which you wish to save the report, or click Browse to navigate to the location. </p> </li> <li> <p>Click OK. The report is saved to the specified location.</p> </li> </ol>"},{"location":"analytics-user-guide/generating_reports/#opening-saved-reports","title":"Opening Saved Reports","text":"<p>WebLOAD Analytics reports are by default saved to the location specified in the Analytics tab of the Preferences window. You can open a previously saved report from the Recent Reports tab, or you can retrieve your report directly from your file system. For information about changing the default location for saved reports, seeDefining Your Analytics Preferences on page 67. </p>"},{"location":"analytics-user-guide/generating_reports/#opening-reports-from-the-recent-reports-tab","title":"Opening Reports from the Recent Reports Tab","text":"<p>To open a report from the Recent Reports window: </p> <ol> <li>Click the Recent Reports tab. The Recent Reports window opens. </li> </ol> <p></p> <p>Note: The number of reports listed in this window is defined in the Preferences  window (seeDefining Your Preferences on page 67). By default, the 20 most recent reports are listed chronologically, with the most recent listed first. </p> <ol> <li> <p>Click the Name column header to toggle between the following sorting options: </p> </li> <li> <p>Sort alphabetically (A-Z). </p> </li> <li>Sort alphabetically (Z-A). </li> <li> <p>Display the most recently used reports first. </p> </li> <li> <p>Double-click the report you wish to open. You can simultaneously open multiple reports by holding down Ctrl or Shift, clicking the reports, and pressing Enter. </p> </li> </ol> <p>The charts comprising the report are displayed in the Charts area. All previously opened charts are closed.  </p> <p>Note: To publish or print the report, you must first click   to generate a report preview, and then use the publish and print options in the report preview toolbar. </p>"},{"location":"analytics-user-guide/generating_reports/#opening-a-report-from-the-file-system","title":"Opening a Report From the File System","text":"<p>To open a report from the file system: </p> <ol> <li>Select File &gt; Open Report or click . The Select Report File window appears.  </li> <li>Browse to the report you wish to open and click Open. Note that WebLOAD Analytics reports have a .report extension. </li> </ol> <p>The charts comprising the report are displayed in the Charts area. All previously opened charts are closed.  </p> <p>Note: To publish or print the report, you must first click   to generate a report preview, and then use the publish and print options in the report preview toolbar.</p>"},{"location":"analytics-user-guide/generating_reports/#modifying-report-appearance","title":"Modifying Report Appearance","text":"<p>The general appearance of the report is determined by the reports master template being used. You can influence the report appearance in the following ways: </p> <ul> <li>You can specify a different report master template, as described inDefining Your Analytics Preferences on page 67. </li> <li>You can change the default values of some master template parameters, as described inDefining Your Parameter Preferences on page 71. </li> </ul> <p>Note: The appearance of each chart in the report is determined by the reports master template, not the chart master template.</p>"},{"location":"analytics-user-guide/getting_started/","title":"Getting Started","text":"<p>WebLOAD Analytics provides a user friendly interface for creating your charts and reports, based on Load Session data. This section provides you with the information you need to start working with WebLOAD Analytics. </p>"},{"location":"analytics-user-guide/getting_started/#launching-webload-analytics","title":"Launching WebLOAD Analytics","text":"<p>You can launch WebLOAD Analytics quickly and easily from WebLOAD Console. </p> <p>Note: WebLOAD Analytics is installed as part of the WebLOAD installation. For information about how to install WebLOAD, see the WebLOAD Installation Guide.</p> <p>To launch WebLOAD Analytics from WebLOAD Console: </p> <ol> <li>Select Tools &gt; Open WebLOAD Analytics,  </li> </ol> <p>-Or- </p> <p>Click the WebLOAD Analytics  icon. </p> <p>WebLOAD Analytics opens. The Session Load you were working on in the WebLOAD Console is automatically loaded into WebLOAD Analytics, and some charts analyzing the Load Session are displayed. </p> <p></p>"},{"location":"analytics-user-guide/getting_started/#understanding-the-user-interface","title":"Understanding the User Interface","text":"<p>WebLOAD Analytics is designed to enable you to quickly and easily create, edit, print, publish, and manage charts and reports.  </p> <p></p> <p>The user interface consists of the following elements: </p> <ul> <li>Menu Bar \u2013 Enables you to perform WebLOAD Analytics functions through the File, Edit, Window, and Help menus. </li> <li>Main Toolbar \u2013 This toolbar provides you with shortcuts to the main WebLOAD Analytics functions, including creating new charts, opening existing charts, and saving the reports on which you are working.  </li> <li>Navigation Area \u2013 This area contains the Gallery, Current Report, and Recent Reports tabs. It displays the templates, current reports, and recently used reports available for use, depending on which tab you select.  </li> <li>Gallery Tab \u2013 This tab displays all the templates and portfolios, organized in a hierarchical tree structure. </li> <li>Current Report Tab \u2013 This tab lists all the open charts in the Charts area. They are all grouped under a Report node.  </li> <li>Recent Reports Tab \u2013 This tab lists all the previously saved Reports, each of which consists of a group of charts. </li> <li>Charts Area \u2013 This area displays all open charts. Each chart has its own tab, so you can easily switch between the different charts with which you are working. For information about creating, opening, saving, and viewing charts, see*Generating Charts on page 21. </li> <li>Chart Tab \u2013 A tab is displayed for each open chart, showing the chart title. When a chart is selected, its settings are displayed in the Settings tab (Figure 12) and the generated chart is displayed in the Preview tab (Figure 3) and/or Chart View tab (Figure 4). The Preview tab shows the chart in its ready-to-print form. The Chart View tab, available only for interactive charts, enables manipulating the chart display in various ways. </li> </ul> <p>You can easily resize or move the Charts area and Navigation area by dragging each component. </p>"},{"location":"analytics-user-guide/getting_started/#accessing-help","title":"Accessing Help","text":"<p>WebLOAD Analytics provides various help-related functions that enable you to access or display the following: </p> <ul> <li>Help \u2013 WebLOAD provides a comprehensive online help system with step-by-step instructions for common tasks. </li> </ul> <p>You can press F1 from any open window for an explanation of the options, or select Help &gt; Help Contents to open the online help contents and index.  </p> <ul> <li>Version Information \u2013 Information about the version of WebLOAD Analytics that you are using, including copyright and licensing information, plugins, and configuration details. Select Help &gt; About to access this information. </li> <li>WebLOAD Community Website \u2013 Select Help &gt; RadView.com to access the website. </li> <li>Professional Support \u2013 Enables you to zip log files created by WebLOAD Analytics, for analysis by RadView support.  </li> <li>To create a zip of the WebLOAD Analytics log files, select Help &gt; Create Log Zip. A confirmation message specifying the location of the zip file appears. </li> </ul> <p>WebLOAD Analytics creates three types of log files: </p> <ul> <li>Analytics log. </li> <li>Import Process Trace File (TRC) log. </li> <li>Eclipse Environment log. </li> </ul> <p>WebLOAD Analytics provides a fast and easy way to move relevant log files to a zip file. The zip file can then be emailed to RadView Support, when required. </p> <ul> <li>To automatically send a zip file of the WebLOAD Analytics log files to RadView support, select Help &gt; Send Logs. An automatic e-mail message is composed in your default e-mail program, with the zip file attached. </li> </ul>"},{"location":"analytics-user-guide/glossary/","title":"Glossary","text":"Glossary  Term Description AAT An  older, obsolete WebLOAD utility that was used for recording web session  activities as a JavaScript file. (Replaced by WebLOAD Recorder.) Aborted  Rounds The  number of times the Virtual Clients started to run a script but did not  complete the script, during the last reporting interval. This might be due to  session being stopped either automatically or manually by the user. script Specification  of the sequence of HTTP protocol calls sent by Virtual Clients to the SUT  (System Under Test).  Scripts  are written in JavaScript. You can either write scripts as a text file or  generate them automatically using the WebLOAD Recorder. Application  Being Tested (ABT) See SUT. Attempted  Connections The  total number of times the Virtual Clients attempted to connect to the SUT  during the last reporting interval. Automatic  Transaction counters If you have Automatic  Transactions enabled, WebLOAD  creates three counters for each GET and POST statement in the script:  \u009f The total number of times it occurred  \u009f The number of times it succeeded  \u009f The number of times it failed during the last reporting interval Average For  timers, average is the total amount of time counted by the timer (not the  elapsed time) divided by the Count (that is, the total number of readings).  For example, the average for Transaction Time is the amount of time it took  to complete all the successful transactions divided by the number of  successful transactions (the Count). Built-in  Timer A timer  measures the time required to perform a given task. WebLOAD supports both  programmed timers and built-in timers. ROUND TIME is a built-in timer. The  ROUND TIME is the time needed for one complete execution of a script. Connect  Time The time  it takes for a Virtual Client to connect to the System Under Test (the SUT),  in seconds. In other words, the time it takes from the beginning of the HTTP  request to the TCP/IP connection.  The value posted in the Current  Value column is the average time it took a Virtual Client to connect to the  SUT during the last reporting interval.  If the  Persistent Connection option is enabled, there may not be a value for Connect  Time because the HTTP connection remains open between successive HTTP  requests. Connection  Speed (Bits Per Second) The  number of bits transmitted back and forth between the Virtual Clients and the  System Under Test (SUT) divided by the time it took to transmit those bits,  in seconds.  You can  set the Virtual Clients to emulate a particular connection speed during the  test, either by using the Variable Connection Speed settings, or by coding  the connection speed in the script.  If a  connection speed is specified for the test, WebLOAD reports it in the  Statistics Report.  The  value posted in the Current Value column is the number (sum) of bits passed  per second during the last reporting interval. It should match, very closely,  the connection speed you specified for the test. Console The WebLOAD component that manages  the test session. The Console performs the following:  \u009f Configures Load Session hosts and scripts  \u009f Schedules Load Session scripts  \u009f Configures Goal\u2013Oriented test sessions  \u009f Monitors the application's performance  under the generated load  \u009f Manages the Load Session as it is  running, allowing you to pause, stop, and continue Load Session components as needed  \u009f Displays the current performance of the SUT  \u009f Provides a final performance reports for Probing Clients and Virtual Clients  Manages exporting of performance reports Count (For timers only.) The total number of readings (the number  of times the item being timed has occurred) for the timed statistic since the  beginning of the test. For example, for Transaction Time, Count shows the  number of transactions that have been completed. Current  Slice The value posted for this reporting interval in the  Statistics Report main window. Current  Slice Average For per  time unit statistics and counters, average is the total of all of the current  values for the last reporting interval, divided by the number of readings.  For timers, average is the total amount of time counted by  the timer (not the elapsed time) divided by the Count (that is, the total  number of readings for the last reporting interval). For example, the average  for Transaction Time is the amount of time it took to complete all the  successful transactions in the last reporting interval, divided by the number  of successful transactions (the Current Slice Count). Current  Slice Count (For  timers only.) The total number of readings (the number of times the item  being timed has occurred) for the timed statistic for the last reporting  interval. For example, for Transaction Time, Current Slice Count shows the  number of transactions that have been completed over the last reporting  interval. Current  Slice Max The  highest value reported for this statistic over the last reporting interval. Current  Slice Min The  lowest value reported for this statistic over the last reporting interval. Current  Slice Standard Deviation The  average amount the measurement for this statistic varies from the average  over the last reporting interval. Current  Slice Sum The  aggregate or total value for this statistic in this script over the last  reporting interval. DNS  Lookup Time The time  it takes to resolve the host name and convert it to an IP address by calling  the DNS server. Failed  Connections The total number of times the  Virtual Clients tried to connect to the SUT but were unsuccessful, during the  last reporting interval.  This  number is always less than or equal to the number of failed hits because hits  can fail for reasons other than a failed connection. Failed  Hits The total number of times the  Virtual Clients made an HTTP request but did not receive the correct HTTP response  from the SUT during the last reporting interval. Note that each request for  each gif, jpeg, html file, etc., is a single hit. Failed  Hits Per Second The  number of times the Virtual Clients did not obtain the correct HTTP response  divided by the elapsed time, in seconds.  The value posted in the Current  Value column is the number (sum) of unsuccessful HTTP requests per second  during the last reporting interval. Failed  Pages Per Second The  number of times the Virtual Clients did not obtain the correct response to an  upper level request, divided by the elapsed time, in seconds.  The  value posted in the Current Value column is the number (sum) of unsuccessful  requests per second during the last reporting interval. Failed  Rounds The  total number of times the Virtual Clients started but did not complete the  script during the last reporting interval. Failed  Rounds Per Second The  number of times the Virtual Clients started but did not complete an iteration  of the script, divided by the elapsed time, in seconds. The value posted in  the Current Value column is the number (sum) of failed iterations of the  script per second during the last reporting interval. First  Byte The time  it takes a Virtual Client to receive the first byte of data. Gallery See Templates Gallery. Goal\u2013Oriented  Test A  WebLOAD component enabling you to define the performance goals required, and  view the status of your application when it is operating under this  performance goal. WebLOAD provides a Goal\u2013Oriented Test Wizard for  configuring these performance goals. WebLOAD automatically accelerates the  number of Virtual Clients accessing your website until you meet your  performance goal.  Note:  The Goal-Oriented Test Wizard was  previously called the Cruise Control Wizard. Goal\u2013Oriented  Test Wizard See Goal\u2013Oriented   Test. Hit  Time The time  it takes to complete a successful HTTP request, in seconds. Each request for  each gif, jpeg, html file, etc., is a single hit. The time of a hit is  the sum of the Connect Time, Send Time, Response Time, and Process Time.  The value posted in the Current  Value column is the average time it took to make an HTTP request and process  its response during the last reporting interval. Hits The total number of times the  Virtual Clients made HTTP  requests to the System Under Test (SUT) during the last reporting interval.  For  example, a Get statement for a URL retrieves a page. The page can include any  number of graphics and contents files. Each request for each gif, jpeg, html file,  etc., is a single hit. Hits  Per Second The number of times the Virtual  Clients made an HTTP request divided by the elapsed time, in seconds. Each  request for each gif, jpeg, html file,  etc., is a single hit.  The value posted in the Current  Value column is the number (sum) of HTTP requests per second during the last  reporting interval. Host A computer connected via a  network, participating in a test session. Each Host in a test session has  assigned tasks. A host can act as either a Load Machine or a Probing Client  Machine. All hosts participating in a test session must be accessible to the  Console over a network. Therefore they must run TestTalk, the network agent. HTTP  Response Status WebLOAD  creates a row in the Statistics Report for each kind of HTTP status code it  receives as an HTTP response from the SUT (redirection codes, success codes,  server error codes, or client error codes).  The value posted is the number  of times the Virtual Clients received that status code during the last  reporting interval. Integrated  Reports A single configurable report  that can integrate both standard performance data, and data from the NT  Performance Monitor. This report gives you a more complete picture of the  performance of your application. The data to be monitored and the data to be  displayed in the report are both configurable in the Console. Internet  Productivity Pack (IPP) Provides a set of protocol  implementations enabling you to load-test your application using these  protocols. Java  and ActiveX counters You can  add function calls to your scripts that enable you to instantiate and call  methods and properties in Java and ActiveX components (see the WebLOAD  Scripting Guide). If there are ActiveX or Java function calls in the  script that you are running, WebLOAD reports three counters for them in the  Statistics Report:  \u009f The total number of times it occurred  \u009f The number of times it succeeded  \u009f The number of times it failed during the last reporting interval  The row heading in the  Statistics Report is the name of the function call. Java  and ActiveX timers You  can add function calls to your scripts that enable you to instantiate and  call methods and properties in Java and ActiveX components (see the WebLOAD  Scripting Guide). If there are ActiveX or Java function calls in the  script you are running, WebLOAD reports timers for them in the Statistics Report.  The  timer value is the average amount of time it took to complete the function  call, in seconds, during the last reporting interval.  The row  heading in the Statistics Report is the name of the function call. Load  Generator The  component of the Load Machine that generates Virtual Clients. Load Generators  have the task of bombarding the System Under Test with HTTP protocol call  requests as defined in the script. WebLOAD assesses the application's  performance by measuring the response  time experienced by the Virtual Clients. The number of Virtual Clients at any  given moment is determined by the user. Load  Generator Machine See  Load Machine. Load  Machine A  host that runs Load Generators. Load Generators bombard the application under  test with a large load, to enable complete scalability and integrity testing. Load  Session A Load  Session includes both the complete Load Template and the results obtained  while running that Load Session. A Load Template consists of information  about the hosts and scripts participating in the current Load Session. The  Load Template will also include scheduling information. The complete Load  Template is illustrated in the Session Tree. Storing a Load Template saves  you time when repeatedly running WebLOAD with the same, or even a similar  network configuration, since you don't have to recreate your Load Template  from scratch each time you want to start working.  Storing  Load Session results can be useful when you want to examine results from  multiple test sessions or for analyzing test session results. Load  Size The  number of Virtual Clients running during the last reporting interval. Load  Template A Load  Template contains the complete Load Session definition, without the test  results. A Load Template includes information about the participating hosts  and the scripts used in the current Load Session. The definition also  includes scheduling information and the configuration of the Server Monitor  and Integrated Reports. The complete Load Template is illustrated in the  Session Tree. Storing a Load Template saves you time when repeatedly running  WebLOAD with the same, or even a similar network configuration, since you do  not have to recreate your Load Template from scratch each time you rerun a  test. Page  Time The time  it takes to complete a successful upper level request, in seconds. The Page  Time is the sum of the Connect Time, Send Time, Response Time, and Process  Time for all the hits on a page.  The  value posted in the Current Value column is the average time it took the  Virtual Clients to make an upper level request and process its response  during the last reporting interval. Pages The  total number of times the Virtual Client made upper level requests, both successful  and unsuccessful, during the last reporting interval. Pages  Per Second The number of times the Virtual  Clients made upper level requests divided by the elapsed time, in seconds.  The  value posted in the Current Value column is  the number (sum) of requests per second during the last reporting interval. Per  Time Unit statistics Ratios that calculate an average  value for an action or process. For example: Transactions Per Second, Rounds  Per Second. Portfolio A Portfolio enables you to  generate a single, inclusive report that contains all the charts generated by  the templates included in the portfolio. Probing  Client A software program which  \"bombards\" the SUT as a single Virtual Client, to further measure  the performance of the SUT. WebLOAD generates exact values for Probing Client  performance. Probing  Client Machine Hosts running Probing Client  software simulating one Virtual Client, and run at the same time as Load  Machines. Probing  Client software See Probing   Client. Process  Time The time it takes WebLOAD to  parse an HTTP response from the SUT and then populate the document-object  model (DOM), in seconds.  The value posted in the Current  Value column is the average time it took WebLOAD to parse an HTTP response  during the last reporting interval. Receive  Time The elapsed time between  receiving the first byte and the last byte. Report  Portfolio See Portfolio. Resource  Manager Distributes  and circulates WebLOAD testing resources (Virtual Clients and Probing  Clients) amongst users on a \u201cneed to use\u201d basis. The Resource Manager is  packaged with a maximum number of Virtual Clients, Probing Clients and  Connected Workstation ports, as defined by the WebLOAD package.  With the Resource Manager, every  WebLOAD Console can operate in Standalone Workstation mode or Connected  Workstation mode. Response  Data Size The size, in bytes, of all the  HTTP responses sent by the SUT during the last reporting interval.  WebLOAD  uses this value to calculate Throughput (bytes per second). Response  Time The time  it takes the SUT to send the object of an HTTP request back to a Virtual  Client, in seconds. In other words, the time from the end of the HTTP request  until the Virtual Client has received the complete item it requested.  The value posted in the Current  Value column is the average time  it took the SUT to respond to an HTTP request during the last reporting interval. Responses The  number of times the SUT responded to an HTTP request during the last  reporting interval.  This  number should match the number of successful hits. Round  Time The time  it takes one Virtual Client to finish one complete iteration of a script, in  seconds.  The  value posted in the Current Value column is the average time it took the  Virtual Clients to finish one complete iteration of the script during the  last reporting interval. Rounds The  total number of times the Virtual Clients attempted to run the script during  the last reporting interval. Rounds  Per Second The number of times the Virtual  Clients attempted to run the script, divided by the elapsed time, in seconds.  The  value posted in the Current Value column is the number (sum) of attempts  (both successful and unsuccessful) per second during the last reporting  interval. Send  Time The time  it takes the Virtual Client to write an HTTP request to the SUT, in seconds.  The value posted in the Current  Value column is the average time it took the Virtual Clients to write a  request to the SUT during the last reporting interval. Server  Performance Measurements If you selected Performance  Monitor statistics for the report, WebLOAD creates a row for them and reports their values in the Statistics Report.  For definitions of the  statistics, see the Server Monitor  Definition dialog box.  Be  selective when choosing server performance measurements, otherwise the system  resources required to manage the data might affect the Console. Session  Tree A graphic representation of a  Load Template and status. It illustrates the different components of a test  session, including Load Machines and Probing Clients, the scripts that they  execute, and their status. Single  Client See Probing   Client. Standard  Deviation The average amount the  measurement varies from the average since the beginning of the test. Successful  Connections The  total number of times the Virtual Clients were able to successfully connect to the SUT during the last reporting  interval.  This number is always less than  or equal to the number of successful hits because several hits might use the same HTTP connection if the Persistent  Connection option is enabled. Successful  Hits The  total number of times the Virtual Clients made an HTTP request and received  the correct HTTP response from the SUT during the last reporting interval.  Each request for each gif, jpeg, html file,  etc., is a single hit. Successful  Hits Per Second The  number of times the Virtual Clients obtained the correct HTTP response to  their HTTP requests divided by the elapsed time, in seconds.  The  value posted in the Current Value column is the number (sum) of successful  HTTP requests per second during the last reporting interval. Successful  Pages Per Second The  value posted in the Current Value column is the number (sum) of successful  requests per second during the last reporting interval. Successful  Rounds The  total number of times the Virtual Clients completed one iteration of the  script during the last reporting interval. Successful  Rounds Per Second The  number of times the Virtual Clients completed an entire iteration of the  script, divided by the elapsed time, in seconds.  The  value posted in the Current Value column is the number (sum) of successful  iterations of the script per second during the last reporting interval. SUT The  system running the Web application currently under test. The SUT (System  Under Test) is accessed by clients through its URL address. The SUT can  reside on any machine or on multiple machines, anywhere on the global  Internet or your local intranet. Template See Load Template. Templates  Gallery The  Templates Gallery is a single entity that contains predefined templates,  user-defined templates, and portfolios. Test  Program See Test Script. Test  Script The  script. This defines the test scenario used in your Load Session. Scripts are  written in JavaScript. Test  Template See Load Template. TestTalk The  network agent. This program enables communication between the Console and the  host computers participating in the test. Throttle  Control A  WebLOAD component that enables you to dynamically change the Load Size while  a test session is in progress. Throughput  (Bytes Per Second) The  average number of bytes per second transmitted from the SUT to the Virtual  Clients running the script during the last reporting interval. In other  words, this is the amount of the Response Data Size, divided by the number of  seconds in the reporting interval. Time  to First Byte The time  it takes from when a request is sent until the Virtual Client receives the  first byte of data. User-defined  Automatic Data Collection If  you have Automatic Data Collection enabled, WebLOAD creates three counters  for each GET and POST statement in  the script.  \u009f The total number of times the Get and Post statements occurred  \u009f The number of times the statements succeeded  The number of times the statements failed during the last reporting interval User-defined  counters Your own  counters that you can add to scripts using the SendCounter() and the SendMeasurement() functions (see the WebLOAD Scripting Guide). If there is a  user-defined counter in the script that you are running, WebLOAD reports the  counter\u2019s values in the Statistics Report.  The row heading is the name  (argument) of the counter, that  is, the string in parenthesis in the SendCounter() or  SendMeasurement() function  call.  The value reported is the number  of times the counter was  incremented during the last reporting interval. User-defined  timer Timers  that you can add to scripts to keep track of the amount of time it takes to  complete specific actions (see the WebLOAD Scripting Guide). If there  are any timers in the scripts that you are running, WebLOAD reports their  values in the Statistics Report.  The  row heading is the name (argument) of the timer. That is, the row heading is  the string in parenthesis in the SetTimer() function call. The timer represents the time it  takes to complete all the actions between the SetTimer() call and its corresponding SendTimer() call,  in seconds.  The  value posted is the average time it took a Virtual Client to complete the  actions between the pair of timer calls, in seconds, during the last  reporting interval. User-defined  Transaction counters Transaction  functions that you can add to scripts for functional tests (see the WebLOAD  Scripting Guide). If there is a user-defined transaction function in the  script that you are running, WebLOAD reports three counters for it in the  Statistics Report.  \u009f The total number of times the  transaction occurred  \u009f The number of times a transaction succeeded  \u009f The number of times a transaction failed  during the last reporting interval  The  row heading is the name (argument) of the transaction. That is, the row  heading is the string in parenthesis in the BeginTransaction() function call User-defined  Transactions timers A timer for user-defined transaction functions. If  there is a user-defined transaction function in the script that you are  running, WebLOAD reports a timer for it in the Statistics Report.  The  row heading is the name (argument) of the user- defined transaction. That is,  the row heading is the string in parenthesis in the BeginTransaction() function call.  The timer represents the average  time it took to complete all the actions between the BeginTransaction() call and its corresponding EndTransaction() call, in seconds, during the last reporting  interval. Virtual  Client Artificial  entities run by Load Generators. Each such entity is a perfect simulation of  a real client accessing the System Under Test (SUT) through a Web browser.  Virtual Clients generate HTTP  calls that access the SUT. The  Load Generators that run Virtual Clients can reside anywhere on the Internet  or on your local intranet.  Scripts  are executed by all the Virtual Clients in parallel, achieving simultaneous  access to the SUT. The size of the load on your SUT is determined by the  number of Virtual Clients being  generated. You may define as many Virtual Clients as needed, up to the  maximum supported by your WebLOAD \u201cpackage\u201d. WebLOAD  Analytics WebLOAD  Analytics enables you to analyze data and create custom, informative reports  after running a WebLOAD test session. WebLOAD  Console See Console. WebLOAD  Recorder An  easy-to-use tool for recording, creating, and authoring protocol scripts for  the WebLOAD environment. WebLOAD  Load Template See Load Template. WebLOAD  Session See Load Session. WebLOAD  Wizard A  WebLOAD Wizard that steps you through the configuration process. Each screen  of the WebLOAD Wizard contains text explaining the configuration process. The  WebLOAD Wizard enables you to create a basic Load Template. After using the  demo, you can use the Console menus to add functionality not available  through the WebLOAD Wizard. WebRM See Resource Manager."},{"location":"analytics-user-guide/introduction/","title":"Introduction","text":"<p>Welcome to WebLOAD Professional, the premier performance, scalability, reliability testing solution for internet applications.  </p> <p>WebLOAD is easy to use and delivers maximum testing performance and value. WebLOAD verifies the scalability and integrity of internet applications by generating a load composed of Virtual Clients that simulate real-world traffic. Probing Clients let you refine the testing process by acting as a single user that measures the performance of targeted activities, and provides individual performance statistics of the internet application under load. </p> <p>This section provides a brief introduction to WebLOAD technical support, including both documentation and online support. </p> <p>IMPORTANT NOTE: In previous WebLOAD versions, a WebLOAD script was called an \u201cAgenda\u201d. From version 12.0, it is referred to simply as a script. Wherever \u201cAgenda\u201d is still displayed, we are referring to the WebLOAD script. </p> <p>WebLOAD Recorder was formerly referred to as WebLOAD IDE. </p>"},{"location":"analytics-user-guide/introduction/#webload-documentation","title":"WebLOAD Documentation","text":"<p>WebLOAD is supplied with the following documentation: </p> <ul> <li>WebLOAD\u2122 Installation Guide: Instructions for installing WebLOAD and its add-ons. </li> <li> <p>WebLOAD\u2122 Recorder User Guide: Instructions for recording, editing, and debugging load test scripts to be executed by WebLOAD to test your Web-based applications. </p> </li> <li> <p>WebLOAD\u2122 Console User Guide: A guide to using WebLOAD console, RadView\u2019s load/scalability testing tool to easily and efficiently test your Web-based applications. This guide also includes a quick start section containing instructions for getting started quickly with WebLOAD using the RadView Software test site. </p> </li> <li>WebLOAD\u2122 Analytics User Guide: Instructions on how to use WebLOAD Analytics to analyze data and create custom, informative reports after running a WebLOAD test session. </li> <li>WebRM\u2122 User Guide: Instructions for managing testing resources with the WebLOAD Resource Manager. </li> <li>WebLOAD\u2122 Scripting Guide: Complete information on scripting and editing JavaScript scripts for use in WebLOAD and WebLOAD Recorder. </li> <li>WebLOAD\u2122 JavaScript Reference Guide: Complete reference information on all JavaScript objects, variables, and functions used in WebLOAD and WebLOAD Recorder test scripts. </li> <li>WebLOAD\u2122 Extensibility SDK: Instructions on how to develop extensions to tailor WebLOAD to specific working environments. </li> <li>WebLOAD\u2122 Automation Guide: Instructions for automatically running WebLOAD tests and reports from the command line, or by using the WebLOAD plugin for Jenkins.  </li> <li>WebLOAD\u2122 Cloud User Guide: Instructions for using RadView\u2019s WebLOAD Cloud to view, analyze and compare load sessions in a web browser, with full control and customization of the display. </li> </ul> <p>The guides are distributed with the WebLOAD software in online help format. The guides are also supplied as Adobe Acrobat files. View and print these files using the Adobe Acrobat Reader. Install the Reader from the Adobe Web site http://www.adobe.com.</p>"},{"location":"analytics-user-guide/load_sessions/","title":"Working with Load Sessions","text":"<p>WebLOAD Console generates the Load Session files (.ls, .sdb, .mdb, .isd, and .dat) that contain all the results collected during the execution of a Load Test. When you import a Load Session file (.ls) for use in WebLOAD Analytics, all the other files are also imported with it. All the imported Load Session files are stored in a separate WebLOAD Analytics Load Session Repository.  </p> <p>WebLOAD Analytics enables you to import Load Sessions you wish to use to generate your reports, search the database for the Load Sessions you require, and delete redundant Load Sessions.  </p>"},{"location":"analytics-user-guide/load_sessions/#importing-load-sessions","title":"Importing Load Sessions","text":"<p>You can import a single or multiple Load Sessions into the WebLOAD Analytics Load Session Repository. The Load Session\u2019s name is automatically derived from the selected .ls file\u2019s name. </p> <p>To import a Load Session: </p> <ol> <li>Select File &gt; Import Sessions, or click. The Open window appears. </li> <li>Browse to the Load Session (<code>.ls</code> file) you wish to import and click Open. The Load Session is imported and saved in the WebLOAD Analytics Load Session Repository, as defined in your Preferences. The Load Session is listed in the From Repository area of the Select Session window.</li> </ol> <p>Notes: When you import a Load Session from WebLOAD Console into the WebLOAD  Analytics Load Session Repository, the Summary Portfolio is automatically generated for the Load Session. For information about changing this default behavior, see Defining Your Analytics Preferences on page 67. </p> <p>A Load Session that is currently open in WebLOAD Console cannot be imported. Unless you launch WebLOAD Analytics from within WebLOAD Console, close the Load Session before importing it. For more information about launching WebLOAD Analytics from WebLOAD Console, see<code></code>Launching WebLOAD Analytics on page 16. </p>"},{"location":"analytics-user-guide/load_sessions/#searching-for-load-sessions","title":"Searching for Load Sessions","text":"<p>You can search the WebLOAD Analytics Repository for Load Sessions by date, or using keywords. </p>"},{"location":"analytics-user-guide/load_sessions/#searching-by-date","title":"Searching by Date","text":"<p>You can narrow your search for the Load Session you require by displaying Load Sessions that fall within a certain date range only. </p> <p>To search for a range of the most recent Load Sessions: </p> <ol> <li>Select File &gt; Select Sessions, or click . The Select Session window appears (Figure 5). </li> <li>In the From Repository area, click and drag the slider to the right to display more recent Load Sessions. Click and drag to the left to display progressively older Load Sessions. </li> </ol> <p>By default, the slider is set to display all sessions that appear in the WebLOAD Analytics Repository. As you move the slider to the left, it displays sessions from the last year, last three months, last month, last week, last three days, and last day, respectively. </p> <p></p> <p>Note: You can also open the Select Session window by clicking  in the Settings tab.</p>"},{"location":"analytics-user-guide/load_sessions/#searching-by-session-name","title":"Searching by Session Name","text":"<p>You can search for the Load Session you require by specifying part of the name, or the full name, of the Load Session you require. </p> <p>To search for a Load Session by session name: </p> <ol> <li>Select File &gt; Select Sessions, or click  . The Select Session window appears (Figure 5). </li> <li>In the Session name field, enter the Load Session name, or part of the name that you wish to find. Load Sessions matching the search name or part of the name, are displayed in the From Repository area, as you type. \\</li> </ol>"},{"location":"analytics-user-guide/load_sessions/#deleting-load-sessions","title":"Deleting Load Sessions","text":"<p>You can delete Load Sessions that you no longer require from the WebLOAD Analytics Load Session Repository. Deleting Load Sessions removes them from the repository. Any references to them in WebLOAD Analytics are also removed.  </p> <p>Note: When a Load Session is imported from WebLOAD Console, a copy of the Load  Session is saved in the WebLOAD Analytics Load Session Repository. Deleting a Load Session from the WebLOAD Analytics Load Session Repository does not delete it from WebLOAD Console. </p> <p>To delete a Load Session from WebLOAD Analytics: </p> <ol> <li>Select File &gt; Delete Sessions, or click . The Select Sessions to Delete window appears. </li> <li>Select the Load Session or Sessions you wish to delete in the From Repository area, and click . The Load Session or Sessions are moved to the Selected Sessions area. </li> <li>Select the Load Session(s) from the Selected Sessions area and click . A warning message appears, asking if you are sure you wish to delete the selected Load Session(s). </li> <li>Click Yes. The selected Load Session(s) are deleted from the WebLOAD Analytics Load Session Repository.</li> </ol>"},{"location":"analytics-user-guide/overview/","title":"WebLOAD Analytics System Overview","text":"<p>WebLOAD accurately simulates Internet users\u2019 behavior and models real-life demands on your Web application to predict capacity requirements, report bottlenecks, and detect weak links in your application before deployment. An important phase of the performance testing process is the analysis and reporting of test results. WebLOAD Analytics provides you with a simple yet comprehensive method of producing and publishing reports to fulfill all your analysis and reporting requirements. </p> <p>Using WebLOAD Analytics, you can create clear, accurate, and meaningful reports that enable you to analyze Load Session results and identify peaks, trends, and anomalies in your data. WebLOAD Analytics provides you with a variety of predefined chart templates that enable you to produce focused reports on specific topics. You can edit these templates, and create new templates. </p>"},{"location":"analytics-user-guide/overview/#the-webload-analytics-workflow","title":"The WebLOAD Analytics Workflow","text":"<p>WebLOAD Analytics provides an easy to use, task oriented interface for the production and publication of Load Session reports. In a typical workflow, you create several charts of interest. Each is created simply by double-clicking a template. You then generate a Report, which is a compilation of the open charts.  </p> <p>The building blocks of the charts are:</p> <ul> <li>Load Sessions \u2013 WebLOAD Analytics uses Load Session data as the raw material for producing WebLOAD reports. Using WebLOAD Analytics, you can present Load Session results, compare various statistics, and highlight important results and conclusions, based on your load test results. For more information about Load Sessions, seeWorking with Load Sessions on page 51 . </li> <li>Templates \u2013 A template specifies the design of a chart, including the visual layout, chart elements, and the way the data is structured. WebLOAD Analytics provides a wide range of predefined templates, based on RadView\u2019s extensive knowledge and experience in the load testing and performance analysis fields. Predefined templates enable you to produce charts that focus on specific aspects of the Load Session data.</li> </ul> <p>A basic chart consists of the following elements: </p> <ul> <li>Tabular Data \u2013 Provides a tabular representation of the Load Session data. </li> <li>Graphs \u2013 Provides a graphical representation of the Load Session data. </li> </ul> <p></p> <p>Each chart is either static or interactive.  </p> <ul> <li>A static chart, indicated by, is a regular chart.  </li> <li>An interactive chart is indicated by . It has the additional capability of enabling you to analyze and present the chart data in various ways using tools provided in its interactive toolbar. </li> </ul> <p>Once you create all the charts necessary for your report, you can generate the report simply by clicking . You then specify which of the open charts will be included in the report. </p> <p>Reports can be saved for later use, with the defined Load Session data, template, and any optional settings you choose (seeSaving Reports on page 48). </p> <p>In addition, you can: </p> <ul> <li>Apply filters to the Load Session data \u2013 You can apply time and statistics-based filters to the Load Session data before the chart is produced. Time filters focus the chart on a specific part of the Load Session. Statistics-based time filters enable you to focus on time segments which meet defined criteria. For information about filtering your chart, seeChanging Chart Settings on page 35. </li> <li>Customize your graphs \u2013 You can customize the graphs of interactive charts (denoted by the  icon): change colors, line type, hide/show measurement, zoom and more. You can even add any other measurement from the session to the graphs. </li> <li>Change the chart\u2019s parameters \u2013 each chart has different parameters that can be changed to control its behavior. Depending on the chart, you may add threshold values, control whether to show detailed data table or not, change titles and logos. For more information, seeModifying Chart Parameters on page 43. </li> <li>Reuse your customizations \u2013 You can change the settings of a template and then save it as a new template. </li> <li>Create regression charts \u2013 Adding multiple Load Sessions to a chart compares one selected session to all additional sessions included in the regression chart. This option is very useful for comparing two sessions that were run on the same Load Template. The purpose is to gauge whether a small change in the System Under Test has degraded the performance. For more information, seeGenerating Charts on page 21. </li> <li>Create statistical correlation charts \u2013 You can use these charts to identify measurements that have a high correlation with a certain measurement that is behaving in an unusual fashion, and are therefore possibly causing the unusual behavior of that measurement. </li> <li>Print or Publish the chart or report \u2013 Both charts and reports can be printed or published in a variety of formats, including DOC, ODT, PDF, HTML, RTF and XLSX. For information about printing charts and reports, seePrinting a Chart on page 27 andPrinting a Report on page 47. For information about publishing charts and Reports, seePublishing Charts on page 34 andPublishing Reports on page 47. </li> <li>Group frequently used templates in a portfolio \u2013 You can create a portfolio of templates that you use frequently. Opening the portfolio will open all its included templates. For information about how to set up a portfolio, seeWorking with Portfolios on page 64. </li> <li> <p>Manage your charts \u2013 You can group your templates into different categories by creating your own folders and moving the templates you wish to use into those folders. You can also rename folders to create logical categories in which to group your templates. For information about managing your templates, seeManaging Template Categories on page 59. </p> </li> <li> <p>Assign and modify master templates \u2013 WebLOAD Analytics contains three master templates: Raw, WebLOAD, and WebLOAD with background. Any one of these can be assigned as the master template for reports, and any one of these can be assigned as the master template for charts. By default, the reports master template is the WebLOAD master template, and the default charts master template is the Raw master template. The appearance of a report is determined only by the reports master template. The appearance of each chart is determined both by the chart master template and the settings of the specific template. You can specify which master template to assign to charts and which master template to assign to reports (seeDefining Your Analytics Preferences on page 67). You can also change the values of some master template parameters (seeDefining Your Parameter Preferences on page 71). </p> </li> <li>Create and edit static reports \u2013 Although it is possible to dynamically define an interactive report from any measurement set, you can even create and edit the static templates. You can use the freely available iReport tool to edit the supplied templates and create new ones. For more information about JasperSoft iReport, see Using JasperSoft iReport on page 61. </li> </ul>"},{"location":"analytics-user-guide/overview/#the-analytics-repositories","title":"The Analytics Repositories","text":"<p>All Load Sessions used with WebLOAD Analytics are stored in a database (PostgreSQL). These Load Sessions are the fundamental data for all reports generated by WebLOAD Analytics. Load Sessions are imported to the database through WebLOAD Analytics. A list of the Load Sessions stored in the database can be viewed from WebLOAD Analytics. For information about importing Load Sessions and selecting the Load Sessions you wish to work with, seeWorking with Load Sessions on page 51 . </p> <p>Note:  You need to import Load Sessions to the database (also called the Load Session Repository) before they can be used by WebLOAD Analytics. </p> <p>All chart templates are stored in the following directory, by default: </p> <p><code>&lt;WebLOAD data&gt;Documents and Settings\\All Users\\Application Data\\RadView\\WebLOAD\\Gallery</code>. This directory determines the appearance of the Templates Gallery. When you launch WebLOAD Analytics, the <code>Gallery</code> directory is scanned and all the templates therein are presented in the Templates Gallery. For information about modifying the default chart template location, see Defining Your Analytics Preferences on page 67 . For more information about the <code>Gallery</code> directory, see<code></code>WebLOAD Analytics File System Structure on page 78 . </p> <p>Note: The <code>Gallery</code> directory is not monitored while WebLOAD Analytics is running. RadView recommends not modifying this directory while WebLOAD Analytics is </p>"},{"location":"analytics-user-guide/portfolios/","title":"Working with Portfolios","text":"<p>WebLOAD Analytics enables you to create a portfolio of templates that you can open in a single action. Use portfolios to group together commonly used templates to speed up your work.  </p> <p>Note: Generating, printing, and publishing individual charts within a portfolio or entire portfolios is identical to generating, printing, and publishing charts. For more information, seeGenerating Charts on page 21. </p>"},{"location":"analytics-user-guide/portfolios/#creating-a-portfolio","title":"Creating a Portfolio","text":"<p>When you create a new portfolio, you assign the templates you wish to include by dragging them into your portfolio in the Templates Gallery tree. The assigned templates appear as links within the portfolio. </p> <p>Note: If a template is deleted from the Templates Gallery and the portfolio links associated with it are not deleted, unresolved template links appear in the tree marked with a red x. When publishing the portfolio, templates with unresolved links are not published. </p> <p>To create a portfolio: </p> <ol> <li> <p>In the Navigation area, click the Gallery tab. The Templates Gallery opens (Figure 9). </p> </li> <li> <p>In the Templates Gallery Right-click in the Templates Gallery and select New Portfolio.  </p> </li> </ol> <p>The New Portfolio window opens. </p> <p></p> <ol> <li> <p>Enter a name for the portfolio and click OK. The new portfolio appears under the Portfolios folder in the Templates Gallery tree. </p> </li> <li> <p>In the Templates Galley, drag-and-drop the templates you want to include in your portfolio. </p> </li> <li> <p>Your portfolio is created. </p> </li> </ol> <p>Note: To remove a template from your portfolio, select the template link from the  Templates Gallery tree and click . Removing a template link from your portfolio does not delete it from the Templates Gallery. </p>"},{"location":"analytics-user-guide/portfolios/#opening-a-portfolio","title":"Opening a Portfolio","text":"<p>To open a portfolio: </p> <ol> <li>In the Templates Gallery, open the Portfolios node. </li> <li>Double-click the portfolio you wish to open.  </li> </ol> <p>The charts created by the portfolio open in the Charts area (Figure 32). </p> <p>Note: Any charts that were already open in the Charts area remain open. </p> <p>You can now generate, print, or publish a report based on the open charts. For more information, see </p> <ul> <li>Creating New Reports on page 45. </li> <li>Printing a Report on page 47. </li> <li>Publishing Reports on page 47. </li> </ul> <p></p> <p>To rename a portfolio: </p> <ol> <li>In the Navigation area, click the Gallery tab. The Templates Gallery opens (Figure 9). </li> <li>Right-click a portfolio and select Rename. The Rename window appears. Enter the new portfolio name and click OK. The portfolio is renamed.</li> </ol>"},{"location":"analytics-user-guide/templates/","title":"Working with Templates","text":"<p>The Templates Gallery contains predefined templates, user-defined templates, and portfolios. WebLOAD Analytics enables you to modify and manage your templates, edit existing templates, and import new templates. </p>"},{"location":"analytics-user-guide/templates/#template-overview","title":"Template Overview","text":"<p>Chart master templates are used together with individual templates to create a chart. A chart master template contains global parameters that affect all the templates that are generated using it. You can select a default master template for charts as described in Defining Your Analytics Preferences on page 67. </p> <p>Templates specify the design of a chart, including the visual layout, chart elements, and the way the data is structured. For example, depending on the master template, a template produces a chart with or without tables. </p> <p>Templates can include the following elements: </p> <ul> <li>Images \u2013 These include the logos, images, and icons that create the chart template\u2019s look and feel. WebLOAD Analytics provides WebLOAD logos and images by default. You can customize your templates to display your own logos and images. </li> <li>Tables \u2013 The Load Session data can be represented in tabular format in a chart. At least one table exists in all charts, by default. You can exclude tables from your chart by setting the SHOW_TABLES parameter to False. For more information about modifying parameters, seeDefining Your Parameter Preferences on page 71. </li> <li>Graphs \u2013 The Load Session data can be represented in graphical format in a chart. At least one graph exists in almost all charts, by default. You can include only graphs in your chart (excluding tables) by setting the SHOW_TABLES parameter to False. For more information about modifying parameters, seeDefining Your Parameter Preferences on page 71. </li> </ul> <p>For more information about the WebLOAD Analytics template file structure, including storage of templates, images, and files, seeWebLOAD Analytics File System Structure on page 78. </p> <p>You can define a variety of additional characteristics within the chart, using local and global parameters (in the chart and in the chart master template). For example, you can specify the number of results listed in a chart, customize the look and feel of your chart, and define a threshold value for selected templates.  </p> <p>For more information about template preferences, seeDefining Your Preferences on page 67. </p>"},{"location":"analytics-user-guide/templates/#creating-user-defined-templates","title":"Creating User-defined Templates","text":"<p>You can change the settings of a template and then save it as a new template. This enables you to customize both static and interactive templates. </p> <p>Only changes to the following settings enable you to create a new template: </p> <ul> <li>Measurements settings in the Measurement Selection area of an interactive chart. </li> </ul> <p>Note: Changes in the Script Selection area of a static chart do not enable you to save the template as a new one. </p> <ul> <li>Filtering settings in the Statistics-based Time Filter area. </li> <li>Parameter settings in the Parameters area. </li> </ul> <p>To create a user-defined template: </p> <ol> <li> <p>In the Charts area, select a chart. </p> </li> <li> <p>Select the Settings tab. </p> </li> <li> <p>Modify the settings of the chart. </p> </li> <li> <p>Select File &gt; Save Chart As Template. The Save As Template window appears. </p> </li> </ol> <p></p> <ol> <li>Select a name and category for your template, or overwrite the existing template and click OK. </li> </ol> <p>Your user-defined template is created and appears in the Templates Gallery in the location you specified.</p>"},{"location":"analytics-user-guide/templates/#creating-an-interactive-template-from-the-blank-template","title":"Creating an Interactive Template from the Blank Template","text":"<p>You can create a custom interactive template based on the Blank Template. Although you can modify any template to create your own custom template (as described in Creating User-defined Templates on page 55), the Blank Template is unique in that its Measurement Selection area is empty. </p> <p>To create an interactive template based on the Blank Template: </p> <ol> <li>In the Navigation area, click the Gallery tab. The Templates Gallery appears. </li> </ol> <p></p> <ol> <li> <p>Select User Defined &gt; Blank Template. The Settings tab of the Blank Template opens in the Charts area, with the Measurement Selection section displayed (Figure 14). </p> </li> <li> <p>Edit the Settings of the template as desired. SeeChanging Chart Settings on page 35. Note that you must specify at least one measurement (see Figure 14) in order to create a template. </p> </li> <li> <p>Select a value for the X-Axis of the graph and continue defining the chart template options as described inCreating User-defined Templates on page 55.</p> </li> <li> <p>Select File &gt;  Save Chart As Template. The Save As Template window opens. </p> </li> </ol> <p></p> <ol> <li>Select a name and category for your template or overwrite the existing template and click OK. </li> </ol> <p>Your custom interactive template is created and appears in the Templates Gallery. </p>"},{"location":"analytics-user-guide/templates/#creating-an-interactive-regression-template-from-the-blank-regression-template","title":"Creating an Interactive Regression Template from the Blank Regression Template","text":"<p>You can create a custom interactive regression template based on the Blank Regression Template. Although you can modify any regression template to create your own custom regression template, the Blank Regression Template is unique in that it is interactive. </p> <p>To create a regression template based on the Blank Regression Template: </p> <ol> <li>In the Navigation area, click the Gallery tab. The Templates Gallery appears. </li> </ol> <p></p> <ol> <li> <p>Select User Defined &gt; Blank Regression Template. The Select Sessions window appears (Figure 6). </p> </li> <li> <p>Optionally browse to the location of a Load Session file in the From File area, and click Open. </p> </li> </ol> <p>The Load Session file appears in the From Repository area.  </p> <ol> <li> <p>Optionally search for Load Sessions (seeSearching for Load Sessions on page 52). </p> </li> <li> <p>In the From Repository area, select a Load Session you wish to use, and click . </p> </li> </ol> <p>The Load Session moves to the Selected Sessions area. Repeat this step to include all the Load Sessions you wish to compare. </p> <p>The first session you select is set as the main Load Session. The main session appears in red. The main session is the session to which all other Load Sessions are compared.  </p> <ol> <li> <p>To specify a different session as the main session, select the Load Session in the Selected Sessions area and click . </p> </li> <li> <p>Edit the Settings of the template as desired (seeChanging Chart Settings on page 35). Note that you must specify at least one measurement (see Figure 14) in order to create a template. </p> </li> <li> <p>Select a value for the X-Axis of the graph and continue defining the chart template options as described inCreating User-defined Templates on page 55.</p> </li> <li> <p>Select File &gt; Save Chart As Template. The Save As Template window opens. </p> </li> </ol> <p></p> <ol> <li>Select a name and category for your template or overwrite the existing template and click OK. </li> </ol> <p>Your custom interactive regression template is created and appears in the Templates Gallery.</p>"},{"location":"analytics-user-guide/templates/#managing-template-categories","title":"Managing Template Categories","text":"<p>You can manage template categories in various ways: </p> <ul> <li> <p>Group your templates into different categories by creating your own categories and moving templates into them.  </p> </li> <li> <p>Rename the categories to create logical groups for your templates.  </p> </li> <li> <p>Copy or move templates from one category to another, and rename templates. </p> </li> </ul>"},{"location":"analytics-user-guide/templates/#creating-new-template-categories","title":"Creating New Template Categories","text":"<p>You can create new categories, to enable easy categorization of your templates. To create a new template category: </p> <ol> <li>In the Navigation area, click the Gallery tab. The Templates Gallery opens (Figure 9). </li> <li>Right-click in the Templates Gallery and select New Category from the menu. The New Category window opens. </li> </ol> <p></p> <ol> <li>Enter a name for your new category, and click OK. The new category is listed in the Templates Gallery, which is ordered alphabetically. You can now move the templates you require into the new category. </li> </ol>"},{"location":"analytics-user-guide/templates/#copying-templates","title":"Copying Templates","text":"<p>WebLOAD Analytics enables you to copy templates from one template category to another.  </p> <p>To copy a template to a new location: </p> <ol> <li>In the Navigation area, click the Gallery tab. The Templates Gallery appears (Figure 9). </li> <li>Select the template you wish to copy. Right-click in the Templates Gallery and select Copy from the menu.  </li> <li>Click the destination category. </li> <li>Right-click in the Templates Gallery and select Paste from the menu. A copy of the template appears under the selected category. </li> </ol> <p>Note: To move a template, drag-and-drop the template from one category to another. </p>"},{"location":"analytics-user-guide/templates/#renaming-templates-and-template-categories","title":"Renaming Templates and Template Categories","text":"<p>You can easily rename a template or template category. This enables you to create logical groups to categorize and group your templates. </p> <p>To rename a template or template category: </p> <ol> <li>In the Navigation area, click the Gallery tab. The Templates Gallery appears (Figure 9). </li> <li>Select the template or template category you wish to rename. </li> <li>Right-click the template or template category, and select Rename from the menu. </li> </ol> <p></p> <ol> <li>Enter the new name in the Enter a new name field, and click OK. The template or template category is renamed.</li> </ol>"},{"location":"analytics-user-guide/templates/#deleting-templates-and-template-categories","title":"Deleting Templates and Template Categories","text":"<p>To delete a template or template category: </p> <ol> <li>In the Navigation area, click the Gallery tab. The Templates Gallery appears (Figure 9). </li> <li>Select the template or template category that you wish to delete. Right-click in the Templates Gallery and select Delete from the menu.  </li> </ol> <p>A confirmation message appears. </p> <ol> <li>Click Yes to delete the template or template category. </li> </ol> <p>Note: When deleting a template category, all the templates contained within the category are also deleted. </p>"},{"location":"analytics-user-guide/templates/#using-jaspersoft-ireport","title":"Using JasperSoft iReport","text":"<p>Since you can use interactive reports to create your own reports on any measurement set, you would typically not need to change the supplied static templates. However, you can change a static template if you wish. JasperSoft iReport enables you to create new templates or modify existing templates for use with WebLOAD Analytics. JasperSoft iReport provides a range of functions for the creation and customization of templates. WebLOAD Analytics supports version 2.0.4 of JasperSoft iReport. </p> <p>Note: If the path to JasperSoft iReport has been defined in your WebLOAD Preferences, you can launch JasperSoft iReport directly from WebLOAD Analytics.</p> <p>To launch JasperSoft iReport from WebLOAD Analytics: </p> <ol> <li>In the Navigation area, click the Gallery tab. The Templates Gallery opens (Figure 9). </li> <li>Select the template that you wish to edit. Right-click in the Templates Gallery and select Edit with iReport. The JasperSoft iReport application opens. </li> </ol> <p>Note: You can use any JRXML-compatible tool to create or modify templates. RadView  does not provide support for JasperSoft iReport, or other third party tools used to create or modify templates. </p> <p>For further information about the use of JasperSoft iReport, see the following Web pages: </p> <ul> <li> <p>http://www.jaspersoft.com/JasperSoft_iReport.html  </p> </li> <li> <p>http://jasperforge.org/jaspersoft/opensource/business_intelligence/ireport/ </p> </li> <li> <p>http://sourceforge.net/projects/ireport/ </p> </li> </ul>"},{"location":"analytics-user-guide/templates/#importing-new-templates","title":"Importing New Templates","text":"<p>WebLOAD Analytics enables you to import templates created or edited in JasperSoft iReport, or any JRXML-compatible tool. WebLOAD Analytics supports version 2.0.4 of JasperSoft iReport. </p> <p>Note: RadView does not provide support for JasperSoft iReport, or other third party tools used to create or modify templates. </p> <p>To import a new template: </p> <ol> <li>In the Navigation area, click the Gallery tab. The Templates Gallery appears (Figure 9). </li> </ol> <p>Right-click in the Templates Gallery and select Import Template. The Import Template window opens. </p> <p></p> <ol> <li>Enter the template parameters, according to the information in Table 6: </li> </ol> Template Field Description Source template folder The path to the template JRXML file that you wish to import. Enter the path to the template, or click Browse to navigate to the JRXML file location. Template name The name of the template. Destination Category A drop-down list of the template categories available in WebLOAD Analytics. <ol> <li>Click OK. The template is listed in the Gallery tab, under the selected folder. </li> </ol> <p>Note: If no template categories are defined when importing a template, the Source  Template Folder field is replaced with the Create Folder field. Define a folder name before importing your template. </p>"},{"location":"dashboard-user-guide/appendix_a/","title":"Appendix A: Editing WebLOAD Dashboard Configuration","text":""},{"location":"dashboard-user-guide/appendix_a/#webload-dashboard-components","title":"WebLOAD Dashboard Components","text":"<p>The WebLOAD Dashboard includes the following main components: </p> <ul> <li>Back-end server, which listens on port 3000 by default.  </li> <li>Datasource server, which listens on port 8080 by default </li> <li>Database server </li> </ul>"},{"location":"dashboard-user-guide/appendix_a/#editing-back-end-configuration","title":"Editing Back-end Configuration","text":""},{"location":"dashboard-user-guide/appendix_a/#changing-back-end-configuration","title":"Changing Back-end configuration","text":"<p>You can change the back-end configuration by creating a file called custom.ini in <code>C:\\Program Files (x86)\\RadView\\WebLOAD\\dashboard\\grafana\\conf</code>. </p> <p>Use the default.ini, located in the same location, to see the available configuration options. The following lists some common options. For a full description of all options, refer to the Grafana documentation at[ http://docs.grafana.org/installation/configuration/</p> <pre><code>[server] \n\n#Protocol (http or https) \n\nprotocol = http \n\n#The ip address to bind to, empty will bind to all interfaces \n\nhttp\\_addr = \n\n#The http port to use \n\nhttp\\_port = 3000 \n\n#The public facing domain name used to access from a browser \n\ndomain = localhost \n\n[security] \n\n#default admin user, created on startup\n\nadmin\\_user = admin \n\n#default admin password, can be changed before first start of grafana, or in profile settings \n\nadmin\\_password = admin \n\n[users] \n\n#disable user signup / registration \n\nallow\\_sign\\_up = true \n</code></pre>"},{"location":"dashboard-user-guide/appendix_a/#changing-the-back-end-servers-listening-port","title":"Changing the Back-End Server\u2019s Listening Port","text":"<p>You can change the port that the back-end server listens on, which is 8080 by default. To change the back-end server\u2019s listening port: </p> <ol> <li> <p>Change the listening port value in the datasource configuration file, located in: <code>C:\\Program Files (x86)\\RadView\\WebLOAD\\dashboard\\webdashboard\\dashboard.settings.bat.</code> </p> </li> <li> <p>If you change the listening port in the datasource configuration file, you must reflect that change in the datasource configuration, as follows: </p> </li> <li> <p>Select Admin &gt; Data Sources in the WebLOAD Dashboard menu bar. </p> </li> <li> <p>Click the WebLOAD data source, </p> </li> <li> <p>In the Edit Data Source window that appears, change the URL to reflect the new address. </p> </li> </ol> <p></p>"},{"location":"dashboard-user-guide/appendix_a/#changing-the-webload-dashboard-database","title":"Changing the WebLOAD Dashboard Database","text":"<p>You can set which database the WebLOAD Dashboard is using, by specifying the database in the datasource configuration file, located in </p> <p><code>C:\\Program Files (x86)\\RadView\\WebLOAD\\dashboard\\webdashboard\\dashboar d.settings.bat</code></p> <p>Note that also the remote database itself must be configured for remote connections. Refer to Configuring PostgreSQL to Allow Remote Database Connections in the WebLOAD Installation Guide. </p> <p>In addition, if you wish to import remote database sessions from the WebLOAD Console to the WebLOAD Dashboard while the sessions are running, do the following in the WebLOAD Console:  </p> <ol> <li>Select Tools &gt; Global Options &gt; Database.</li> <li>In the Database configuration section, enter the details of the remote database.</li> </ol> <p><code></code></p>"},{"location":"dashboard-user-guide/creating_playlist/","title":"Creating and Playing a Playlist","text":"<p>You can play a playlist of specific dashboards.  </p>"},{"location":"dashboard-user-guide/creating_playlist/#creating-a-dashboards-playlist","title":"Creating a Dashboards Playlist","text":"<p>To create a dashboard playlist: </p> <ol> <li>In the menu bar, select Dashboards &gt; Playlists. The Saved Playlists window appears.  </li> </ol> <p></p> <ol> <li>Click + New Playlist. </li> </ol> <p>A New Playlist window appears.  </p> <p></p> <ol> <li> <p>Give the new playlist a Name and configure the time Interval to wait while displaying each dashboard before advancing to the next one on the Playlist. </p> </li> <li> <p>Add dashboards to the playlist as follows: </p> </li> <li> <p>Optionally search for dashboards by name (or use a regular expression) or you could add tags which will include all the dashboards that belongs to a tag when the playlist start playing. By default, your starred dashboards will appear as candidates for the Playlist. </p> </li> <li>In the Available column, add a dashboard to the Playlist by clicking Add to playlist adjacent to the dashboard name.  </li> </ol> <p>The dashboard you added appears in the Selected column. </p> <p></p> <ol> <li>Optionally rearrange the order in which the dashboards will be played, using the arrows in the Selected columns  </li> </ol> <p>To remove a dashboard from the playlist, click the x button. </p> <ol> <li>Click Create new playlist. </li> </ol>"},{"location":"dashboard-user-guide/creating_playlist/#playing-a-dashboards-playlist","title":"Playing a Dashboards Playlist","text":"<p>To play a dashboard playlist: </p> <ol> <li> <p>In the menu bar, select Dashboards &gt; Playlists. The Saved Playlists window appears.  </p> </li> <li> <p></p> </li> <li> <p>In the row displaying the desired playlist, click Play. </p> </li> <li> <p>The playlist start running. Note that most menu buttons and dashboard controls are hidden while the playlist is running. </p> </li> <li> <p>Optionally control the playlist manually using the playlist  controls appearing at the top of screen when in Playlist mode:   </p> </li> <li> <p>Click the stop button to stop the playlist, and exit to the current dashboard. A playlist continues running indefinitely until stopped. </p> </li> <li> <p>Click the next button to advance to the next dashboard in the playlist.   </p> </li> <li> <p>Click the back button to rewind to the previous dashboard in the playlist. </p> </li> </ol>"},{"location":"dashboard-user-guide/creating_playlist/#editing-or-deleting-a-dashboards-playlist","title":"Editing or Deleting a Dashboards Playlist","text":"<p>To edit or delete a dashboard playlist: </p> <ol> <li>In the menu bar, select Dashboards &gt; Playlists. The Saved Playlists window appears. </li> </ol> <p></p> <ol> <li> <p>To edit the playlist, click Edit in the row displaying the playlist. An Edit Playlist window appears, similar to the New Playlist window (Figure 83). You can edit the playlist name, interval, list of dashboards or the order in which they will be played.  </p> </li> <li> <p>To delete a playlist, click the x in the row displaying the playlist. Confirm the deletion operation.</p> </li> </ol>"},{"location":"dashboard-user-guide/customizing_dashboard/","title":"Customizing a Dashboard","text":"<p>You can customize a dashboard as desired, and then save the customized dashboard if you wish. Note however that two types of changes are not considered customizations and are not saved: the selected sessions and the selected time filter. </p> <p>To save your customizations, refer toSaving your Customized Dashboard (on page 63). </p>"},{"location":"dashboard-user-guide/customizing_dashboard/#customizing-rows","title":"Customizing Rows","text":""},{"location":"dashboard-user-guide/customizing_dashboard/#adding-a-row","title":"Adding a row","text":"<p>To add a new row, click + ADD ROW at the bottom of a dashboard page </p>"},{"location":"dashboard-user-guide/customizing_dashboard/#editing-a-row","title":"Editing a Row","text":"<p>To edit a row, click the three grey dots to the left of the row and select the desired option. </p> <p></p> <p>The available options include: </p> Item Description Collapse Hides the row. To show the row again, press  the  button. Add  Panel Adds a panel to the row,  of the type you specify: Graph, Singlestat, Table, Text, Alert List,  Dashboard List, or Plugin List. Row  Options Enables  editing a row\u2019s settings. For information, refer to Editing a Row\u2019s options (on page 47). Move  Up Moves  the row up. Move  Down Moves  the row down. Remove Deletes  the row, following your confirmation."},{"location":"dashboard-user-guide/customizing_dashboard/#editing-a-rows-options","title":"Editing a Row\u2019s options","text":"<p>To edit a row\u2019s options, click the three grey dots to the left of the row and select Row Options (Figure 46). </p> <p>A pane appears, for setting the row\u2019s options. Edit the row as desired. </p> <p></p>"},{"location":"dashboard-user-guide/customizing_dashboard/#deleting-a-row","title":"Deleting a Row","text":"<p>To delete a row, click the three grey dots to the left of the row and select Remove (Figure 46). Confirm the operation.  </p>"},{"location":"dashboard-user-guide/customizing_dashboard/#customizing-panels","title":"Customizing Panels","text":"<p>To edit a panel, click the panel title and click edit in the box that appears.  </p> <p></p> <p>An editing pane appears, with various editing options that depend on the panel type (text, graph, table or singlestat), as described below. ![ref8]</p>"},{"location":"dashboard-user-guide/customizing_dashboard/#editing-a-panels-general-options","title":"Editing a Panel\u2019s General Options","text":"<p>Select the General tab to edit the panel\u2019s general options.  </p> <p></p>"},{"location":"dashboard-user-guide/customizing_dashboard/#editing-a-graph-panel","title":"Editing a Graph Panel","text":"<p>A graph panel can be customized in various ways, as described below. </p>"},{"location":"dashboard-user-guide/customizing_dashboard/#specifying-the-metrics","title":"Specifying the Metrics","text":"<p>You can specify which metrics to display for which sessions. </p> <p>To specify the metrics: </p> <ol> <li> <p>Click the panel\u2019s title and select edit. </p> </li> <li> <p>Select the Metrics tab. The metrics currently displayed in the graph are displayed in the table. </p> </li> </ol> <p></p> <ol> <li>To add a measurement, click Add Measurement. A new line appears in the table. </li> </ol> <p></p> <ol> <li>Edit the new line:  </li> </ol> <p>Select metrics for the new line you added (columns \u2460, \u2461, \u2462, \u2463, \u2464 in Figure 51*). </p> <ol> <li>Optionally edit the selection of a metric in an existing line.  </li> </ol> <p>The following table describes some of the operations available in the Metrics tab. ![ref8]</p> Item Description 1 Enables selecting a  category of statistics:  &gt;  Total \u2012 Sums the values for each statistic across  all the Scripts running during the test.  &gt; ScriptName::Total \u2012 Sums the values for each  statistic across all  instances  of the specified script running during the test. &gt; ScriptName@LoadGenerator \u2012 Sums the values for each  statistic across all instances of the specified script running under the specified Load Generator during the test. 2 Depending on your choice  in \u2460,  enables  selecting a sub-category of statistics. 3 Depending on your choice  in \u2461,  enables  selecting a sub-category of statistics. 4 Depending on your choice  in \u2462,  enables  selecting a sub-category of statistics. 5 Depending on your choice in \u2463, enables selecting a statistic. 6 Enables:  \u009f Toggling between  Edit mode and Display mode  \u009f Duplicating a line  \u009f Moving a line up  \u009f Moving a line down 7 Toggles between showing  and hiding the metrics in the graph 8 Deletes the line. 9 Adds a new line in the  table for defining a new metric in the graph."},{"location":"dashboard-user-guide/customizing_dashboard/#defining-the-axes-display","title":"Defining the Axes Display","text":"<p>To edit a panel\u2019s axes display: </p> <ol> <li>Click the panel\u2019s title and select edit. </li> <li>Select the Axes tab. </li> </ol> <p>A pane appears, displaying the current axes definitions. You can change any of the definitions, and the graph display changes accordingly.  ![ref10]</p> <p></p>"},{"location":"dashboard-user-guide/customizing_dashboard/#defining-the-legend","title":"Defining the Legend","text":"<p>To edit a panel\u2019s legend: </p> <ol> <li>Click the panel\u2019s title and select edit. </li> <li>Select the Legend tab. </li> </ol> <p>A pane appears, displaying the legend definitions. You can change any of the definitions, and the graph display changes accordingly.  </p> <p></p>"},{"location":"dashboard-user-guide/customizing_dashboard/#defining-the-display","title":"Defining the Display","text":"<p>To edit a panel\u2019s display: </p> <ol> <li>Click the panel\u2019s title and select edit. </li> <li>Select the Display tab. </li> </ol> <p>A pane appears, displaying the display definitions. You can change any of the definitions, and the graph display changes accordingly.  </p> <p></p>"},{"location":"dashboard-user-guide/customizing_dashboard/#defining-the-time-range","title":"Defining the Time Range","text":"<p>To edit a panel\u2019s time range: </p> <ol> <li>Click the panel\u2019s title and select edit. </li> <li>Select the Time range tab. </li> </ol> <p>A pane appears, displaying the time range definitions. You can change any of the definitions, and the graph display changes accordingly.  </p> <p></p>"},{"location":"dashboard-user-guide/customizing_dashboard/#editing-a-singlestat-panel","title":"Editing a Singlestat Panel","text":"<p>Working with a singlestat panel is similar to working with a graph panel. A measurement is selected in same way (refer toSpecifying the Metrics), but you can only select a single measurement for a singlestat panel. Note that this makes singlestat panels unsuitable when working with multiple sessions. ![ref10]</p> <p>Defining the Singlestat Display Options </p> <p>To edit a singlestat panel\u2019s display: </p> <ol> <li>Click the panel\u2019s title and select edit. </li> <li>Select the Options tab. </li> </ol> <p>A pane appears, displaying the display definitions. You can change any of the definitions, and the graph display changes accordingly.  </p> <p></p>"},{"location":"dashboard-user-guide/customizing_dashboard/#editing-a-table-panel","title":"Editing a Table Panel","text":"<p>You can customize a table panel\u2019s display directly in the dashboard.  </p> <p></p> <p>The header of the table panel provides the following options: </p> <ul> <li>Sorting the table display \u2013 Clicking any column head sorts the table by that column in ascending or descending order. </li> <li>Filtering by severity \u2013 By clicking the down arrow in the Severity column head, you can select whether to view messages of all severity types, or of a certain type.</li> </ul>"},{"location":"dashboard-user-guide/customizing_dashboard/#editing-a-text","title":"Editing a Text","text":"<p>To edit the text in a Text panel, click the panel\u2019s title and select edit (Figure 48), and then select the Panel tab. </p> <p></p> <p>You can: </p> <ul> <li>Select the mode: </li> <li>Text \u2013 Plain text </li> <li>Html \u2013 HTML </li> <li>Markdown - Markdown markup syntax  </li> <li>Edit the text as desired.  </li> </ul>"},{"location":"dashboard-user-guide/customizing_dashboard/#adding-panels","title":"Adding Panels","text":"<p>To add a panel in a row, click the three grey dots to the left of the row and select Add Panel (Figure 46). Select the panel type: Graph, Singlestat, Table, Text, Alert List, Dashboard List, or Plugin List.. </p> <p>A new empty panel of the selected type appears in the row.  </p> <p>Define the display in the panel by editing the panel, as described above.</p>"},{"location":"dashboard-user-guide/customizing_dashboard/#duplicating-a-panel","title":"Duplicating a Panel","text":"<p>The duplication feature is useful if you wish to create a panel that is very similar to an existing one, or that is based on an existing panel. </p> <p>To duplicate a panel: </p> <p>1.  Click the panel\u2019s title and select Duplicate. </p> <p>A new panel \u2013 a duplicate of the original \u2013 is created in the dashboard. You can now edit it as desired. </p>"},{"location":"dashboard-user-guide/customizing_dashboard/#deleting-a-panel","title":"Deleting a Panel","text":"<p>To delete a panel: </p> <ol> <li>Click the panel\u2019s title and select the Delete icon the top right corner.</li> </ol> <p></p> <ol> <li>Confirm the deletion. </li> </ol>"},{"location":"dashboard-user-guide/customizing_dashboard/#customizing-general-dashboard-settings","title":"Customizing General Dashboard Settings","text":"<p>You can customize various general dashboard settings. </p> <p>To configure general dashboard settings: </p> <ol> <li>Click the Manage Dashboard Settings icon in the middle of the dashboard header, and select Settings. </li> </ol> <p></p> <p>A Dashboard Settings pane appears, with multiple tabs. </p> <ol> <li>Set the General settings as desired.  </li> </ol> <p></p> <p>For example, if you select Shared Crosshair, then hovering over one the graphs causes a corresponding crosshairs to appear in all the graphs. </p> <p></p> <ol> <li>Set the Rows settings as desired. For example, use the up and down arrows to switch between the locations of rows in the dashboard.  </li> </ol> <p></p> <ol> <li>Set the Links settings as desired. This enables adding links that appear under the Dashboard header. You can add a link to any site, or to a dashboard.  </li> </ol> <p></p> <ol> <li>Set the Time picker settings as desired. For example, you can set the Auto- refresh options that appear in the Refreshing every dropdown. </li> </ol> <p></p> <ol> <li>Click Metadata to view the dashboard\u2019s metadata. This includes information about dashboard creation and updating. </li> </ol> <p></p>"},{"location":"dashboard-user-guide/customizing_dashboard/#templating-a-dashboard","title":"Templating a Dashboard","text":"<p>Templating enables the creation of highly interactive and dynamic dashboards. Instead of hard-coding things like server, application and sensor name in you metric queries you can use variables in their place. Variables are shown as dropdown select boxes at the top of the dashboard. These dropdowns make it easy to change the data being displayed in your dashboard. </p> <p>For more information, refer to http://docs.grafana.org/reference/templating/. </p>"},{"location":"dashboard-user-guide/customizing_dashboard/#annotating-a-dashboard","title":"Annotating a Dashboard","text":"<p>Annotations provide a way to mark points on the graph with rich events. When you hover over an annotation you can get title, tags, and text information for the event. </p> <p>For more information, refer to http://docs.grafana.org/reference/annotations/.</p> <p></p>"},{"location":"dashboard-user-guide/getting_started/","title":"Getting Started","text":""},{"location":"dashboard-user-guide/getting_started/#launching-webload-dashboard","title":"Launching WebLOAD Dashboard","text":"<p>To launch WebLOAD Dashboard: </p> <ol> <li>Select Start &gt; Programs &gt; RadView &gt; WebLOAD &gt; Utilities-&gt; Start WebLOAD Dashboard. </li> </ol> <p>This launches the WebLOAD Dashboard server. </p> <ol> <li>Navigate to http://localhost:3000/ </li> </ol> <p>The WebLOAD Dashboard login window appears. The default user is \u2018admin\u2019 with password \u2018admin\u2019. </p> <p>Note that the default user is a Super Admin, as explained inSuper Administrators (on page 81). </p> <p></p> <p>After login, the homepage appears, showing the latest sessions and tests with links to those sessions and tests, as well as links to creating new load tests in WebLOAD Dashboard.  </p> <p></p>"},{"location":"dashboard-user-guide/getting_started/#using-the-menu-bar","title":"Using the menu bar","text":"<p>The menu bar provides access to the various WebLOAD Dashboard functions. Note that the Admin menu is available only forSuper Administrators. </p> <p></p>"},{"location":"dashboard-user-guide/getting_started/#menu-bar","title":"Menu bar","text":"<p>The main components of the WebLOAD Dashboard menu bar include: </p> Item Description For more information, see Tests Search View the list of Load  Tests and their definitions, and perform operations on a selected Load Test:  \u009f Run test  \u009f Pause test  \u009f Edit test  \u009f View this test\u2019s sessions  \u009f Show this test\u2019s  last session  Delete test Viewing Tests (on page 12) New Create a new Load Test Creating a new load test (on page 13) Sessions Search Select a session for  viewing and analysis Viewing Load Sessions (on page 28) Upload Import a session into the  database Uploading a session (on page 30) Dashboards Home The  Home dashboard, as configured in  the  user\u2019s Profile Setting the Default (Home) Dashboard (on page 64) Playlists Create and play a  dashboard that rotates through a list of dashboards Creating and Playing a Playlist (on page 72) + New Create a new dashboard Creating a New Dashboard (on page 62) + Import Import a dashboard that  was saved in JSON file format Importing a Dashboard (on page 60) Resources Search View the list of resources Viewing Resources (on page 31) Upload Upload resources into the database Uploading Resources (on page 33) <p>Admin \u2013 this tab is available only for Super Admin users </p> Global Users Manage users User Management by a Super Admin (on page 82) Global Orgs Manage organizations Adding an Organization (on page 88) Load Generators Define the available load generators Managing Load Generators ( on page 76) Data Sources A data source is a statistics data source. There are two types:  \u009f WebLOAD Data  source \u2013 get information from a WebLOAD session. By default, this is the  local installation, but it can be changed  to point to a different one. Note \u2013 only one WebLOAD data source can  be used at a time per organization (the default one) \u2013 to use more than one,  create another organization and switch to  it.  Other \u2013WebLOAD Dashboard can access other  time based data sources and show  them alongside the WebLOAD data. Changing   the Back-End Server\u2019s Listening Port (on page 95) Plugins List the installed plugins Server Settings Show the current configuration Server Stats Show the usage stats Logged in user You Profile Change your user name, password, and UI preferences See EULA View the End User License Agreement Sign out Sign out Logged in user\u2019s Org Preferences Change preferences at the Organizational level Managing Organizations (on page 88) Users Manage the organization\u2019s users,  including their roles (permissions) Managing Users (on page 82) API Keys Manage  API access Switch to Switch  between organizations in which you are a member. Note that when you switch to  an organization, your permissions are the ones dictated by your role in that  particular organization. User Editing by a Super Admin \u2013 Editing   User\u2019s Permissions, Organizations, Roles and Details + New Organization Add  an organization Adding an Organization (on page 88)"},{"location":"dashboard-user-guide/installation/","title":"Installing WebLOAD Dashboard","text":"<p>This section describes the standard WebLOAD Dashboard installation process.  </p>"},{"location":"dashboard-user-guide/installation/#installation-instructions","title":"Installation Instructions","text":"<p>The WebLOAD Dashboard is part of the regular WebLOAD installation.  To install the WebLOAD Dashboard: </p> <ol> <li> <p>In the Select Components window of the WebLOAD installation wizard, select either of the following options: </p> </li> <li> <p>Select Full Installation and check the WebLOAD Dashboard checkbox to have the WebLOAD Dashboard installed locally as part of a full installation. You can also optionally check the WebLOAD Dashboard as Service checkbox to register the installed WebLOAD Dashboard as a Windows service.  </p> </li> <li> <p>Select Cloud Server to only install the WebLOAD Dashboard. ![ref10]</p> <p></p> </li> </ol>"},{"location":"dashboard-user-guide/installation/#enabling-webload-dashboard","title":"Enabling WebLOAD Dashboard","text":"<p>As a prerequisite to using WebLOAD Dashboard, you must first, in the WebLOAD Console (version 10.2 and up), enable the importing of sessions to the desired database as follows. </p> <ol> <li>Select Tools &gt; Global Options &gt; Database. </li> </ol> <p></p> <ol> <li> <p>Make sure the Insert statistics into Postgres database during the session checkbox is selected. </p> </li> <li> <p>Select the Insert PMM data into database checkbox.</p> </li> </ol>"},{"location":"dashboard-user-guide/introduction/","title":"Introduction","text":"<p>RadView\u2019s WebLOAD Dashboard provides a single unified command and control interface for creating, executing, scheduling, and analyzing tests \u2013 all directly from your web browser, either on-premises or in the Cloud. </p> <p>Some of the tasks you can accomplish using WebLOAD Dashboard include: </p> <ul> <li>Create and edit load tests \u2013 based on a WebLOAD script, a WebLOAD template, or using a single URL/API </li> <li>Upload, add and manage tests, resources, and sessions </li> <li>Execute and schedule test runs </li> <li>Analyze results using ready-made and self-configured dashboards </li> <li>Share tests and results with peers </li> <li>Manage access permissions for users and groups  </li> <li>Download test results to your local machine for further analysis with WebLOAD Analytics </li> </ul> <p>IMPORTANT NOTE: In previous WebLOAD versions, a WebLOAD script was called an \u201cAgenda\u201d. From version 12.0, it is referred to simply as a script. Wherever \u201cAgenda\u201d is still displayed, we are referring to the WebLOAD script. WebLOAD Recorder was formerly referred to as WebLOAD IDE. </p>"},{"location":"dashboard-user-guide/manage_sessions/","title":"Managing Sessions","text":"<p>In WebLOAD Dashboard you can manage the following types of sessions: </p> <ul> <li>The sessions of load tests created and run in the WebLOAD Dashboard </li> <li>Sessions that were created in the WebLOAD Console, and uploaded to the WebLOAD Dashboard. For instructions how to upload sessions to the WebLOAD Dashboard, seeUploading a session (on page 30). </li> </ul>"},{"location":"dashboard-user-guide/manage_sessions/#viewing-load-sessions","title":"Viewing Load Sessions","text":"<p>To view the load sessions: </p> <ul> <li>In the menu bar, select Sessions &gt; Search. The Load Sessions table appears. </li> </ul> <p></p> <p>The Load Sessions table provides the following information and available actions, for each Load Session: ![ref10]</p> Item Description Name The name of the load  session.  Clicking the name opens the Dashboard page  for this session. enabling you to view the results of this session. Test The name of the corresponding load test. From The date and time when the  load session started running. To The date and time when the  load session finished running. Status Whether the test passed or failed test  execution. Failed  Reason If the test failed, displays the reason for  failure. Instructs WebLOAD to  delete this load session. Instructs WebLOAD  to download the session results to the local  computer. The results are downloaded as a zip file that contains the  following files: .ls, .mdb, .sdb, .isd, .dat.  You can then open  the session in WebLOAD Console or  WebLOAD Analytics. Enables manually running a  test created in WebLOAD Dashboard,  now or at a specified time. Refer to Scheduling a one-time test run (on page 25). Instructs WebLOAD to stop  running the test. Show  in Dashboard Enables specifying which  sessions to display in the dashboard. This is very useful for comparing the  statistics from multiple sessions."},{"location":"dashboard-user-guide/manage_sessions/#filtering-the-load-sessions-display","title":"Filtering the Load Sessions display","text":"<p>The Filter bar, above the Load Sessions table, provides various options for filtering the display. </p> <p></p> <p>You can filter the Load Sessions table display by: </p> <ul> <li>Session name, using the Find by Session Name box. </li> <li>Test name, using the Find by Test Name box. </li> <li>Test status, using the All Statuses drop-down box </li> <li>Test date, using the All Dates drop down box </li> </ul>"},{"location":"dashboard-user-guide/manage_sessions/#uploading-a-session","title":"Uploading a session","text":"<p>You can upload to WebLOAD Dashboard, sessions that were created in the WebLOAD Console. Each session created in the WebLOAD Console consists of the following four types of files; to upload the session, you need to upload all four files: </p> <ul> <li>.ls - Load Session files </li> <li>.dat - Load Session data files </li> <li>.sdb - Statistics database files </li> <li>.isd - Index statistics database files </li> </ul> <p>To upload a session: </p> <ol> <li> <p>Do one of the following: </p> </li> <li> <p>In the menu bar, select Session &gt; Upload </p> <p>Or </p> </li> <li> <p>In the Load Sessions table, click Upload Session </p> </li> </ol> <p>The Session Upload page is displayed. </p> <p></p> <ol> <li> <p>Click Select session files. </p> </li> <li> <p>In the file explorer dialog that appears, navigate to the load session\u2019s files, select them, and click Open.</p> </li> </ol>"},{"location":"dashboard-user-guide/manage_tests/","title":"Managing Tests","text":""},{"location":"dashboard-user-guide/manage_tests/#viewing-tests","title":"Viewing Tests","text":"<p>You can view all the load tests you created in WebLOAD Dashboard. To view the load tests: </p> <ul> <li>In the menu bar, select Tests &gt; Search. </li> </ul> <p>The Load Tests page appears, listing the load tests in a table format. </p> <p></p> <p>The Load Tests table provides the following information and actions, for each Load Test: </p> Item Description Name The name of the Load test.  Clicking the name opens the test\u2019s  definitions page, enabling you  to edit them. Refer to Editing a load test (on page 26). Test  Type The type of test: Either URL/API, Script,  or Template. Last  Update The date and time when the  test definitions were last updated, or the test was run manually. This field  shows no indication of whether the test is being executed in recurrence mode. Next  Execution The date and time when the  test is next scheduled to run. Refer to Setting recurring test runs (on page 24) and Scheduling a one-time test run (on page 25). Last  Execution The date and time when the test last  started running. Last Session State Whether the test passed or failed the last  test execution. Enables viewing the last  session of this test. Selecting this option opens a Dashboard page displaying  the last session of the test. Refer to Using Dashboards (on page 36) Enables manually running  this test now or at a specified time. Refer to Scheduling a one-time test run (on page 25). Instructs WebLOAD to stop  the running test. Enables viewing all this  test\u2019s sessions. Selecting this option opens a Load Sessions page (Figure 23) that displays  all of this test\u2019s sessions. Instructs WebLOAD to  delete the load test. Refer to Deleting a   load test (on page 27)."},{"location":"dashboard-user-guide/manage_tests/#creating-a-new-load-test","title":"Creating a new load test","text":"<p>You can create a new load test anytime. To create a new load test: </p> <ol> <li> <p>Perform one of the following: </p> </li> <li> <p>Select Tests &gt; New and click Add Load Test. The Create a new Load Test page appears. </p> </li> <li>Select Tests &gt; Search, and click + Add a new load test. The Create a new Load Test page appears. </li> <li>In the homepage, see the Create a new Load Test pane. </li> </ol> <p></p> <ol> <li> <p>Select the type of test to create. Refer to the following for detailed explanations: </p> </li> <li> <p>Creating a URL/API Load Test (on page 14) </p> </li> <li> <p>Creating a Script Load Test (on page  17) </p> </li> <li> <p>Creating a Template Load Test (on page  21) </p> </li> </ol>"},{"location":"dashboard-user-guide/manage_tests/#creating-a-urlapi-load-test","title":"Creating a URL/API Load Test","text":"<p>Use this option to instantly create a load test for testing a load on a URL and/or API. </p> <p>After entering the load test specifications, WebLOAD automatically creates a test according to the specifications. </p> <p>To create a URL/API load test: </p> <ol> <li> <p>Perform one of the following: </p> </li> <li> <p>Select Tests &gt; New and click Add Load Test. The Create a new Load Test page appears. </p> </li> <li>Select Tests &gt; Search, and click + Add a new load test. The Create a new Load Test page appears. </li> <li>In the homepage, see the Create a new Load Test pane. </li> </ol> <p></p> <ol> <li>Select URL/API Test.</li> </ol> <p>A Create Load Test page appears. </p> <p></p> <ol> <li>Specify the test settings. </li> </ol> <p>The following table describes the information you need to provide for defining the URL/API Load Test:</p> Item Description General Test  Name The name of the Load test. Request  parameters In this section, specify  the URL of the site to be tested. You can in addition create an HTTP web  service call. Request  URL Specify the URL of the  site to be tested. *Method* Optionally, specify a  method for an HTTP web service call, from the drop-down list: Get, Post, Put, or Delete. Request  Body Optionally, specify the  web service body for the HTTP web service call. HTTP  Headers Optionally, specify the web service header(s):  Click Add for  every header you wish to specify, and select the  header from the dropdown list, or enter a  custom header; then enter a value for the header. Sleep Specify the sleep time between each URL/API call. Load  Configuration For each of the following, enter a number, or use the slider tool to  specify the number. Max  Virtual Users The maximum number of  Virtual Users to generate. Ramp up time in minutes The time interval over  which to increase the load from 0 Virtual Users to the number of virtual  users specified in Max Virtual Users. Time to run Max Virtual Users in minutes The time interval during  which to run the load at the max number of Virtual Users Ramp down time in minutes The time interval over  which to decrease the load in order to return to 0 Virtual User Load  Generators Select the load generator  machines that will participate in the load test, as described in Specifying Load Generators for a   load test (on page 23). Recurrence Select this option if you  wish to schedule automatic periodic execution of the load test. Refer to Setting recurring test runs (on page 24). <p>The URL/API load test generates an increasing load over a set time frame until reaching a defined maximum load size. The maximum load size is then run for a set period after which the load is reduced back to the base load again over a time frame defined by the user. The load increments are calculated automatically by WebLOAD based on the parameters defined. ![ref10]</p> <p>Thus, the load will start with 0 Virtual Users and increase over the time frame defined in the Ramp up time field to reach the number of Virtual Users defined in the Max Virtual Users field. The test will then continue running with the maximum number of Virtual Clients for the period of time defined in the Time to run Max Virtual Users field, after which load will return to 0 Virtual Users value over the time frame set in the Ramp down time field. </p> <ol> <li> <p>Select one of the following: </p> </li> <li> <p>Create Test \u2013 The test definitions are saved. </p> </li> <li> <p>Create and Run Test \u2013 The test definitions are saved, and the test starts running immediately. </p> </li> <li> <p>Run in Sandbox Mode \u2013 The system saves all the test definitions, but runs a limited test on the settings specified in the Request Parameters section while ignoring all the settings in the Load Configuration, Load Generators, and Recurrence sections. </p> <p>This option is intended for SaaS users wishing to run a limited test prior to running the full test specified in the test definitions.  </p> </li> </ol>"},{"location":"dashboard-user-guide/manage_tests/#creating-a-script-load-test","title":"Creating a Script Load Test","text":"<p>Use this option to create a load test based on a WebLOAD script that was created in WebLOAD Recorder. </p> <p>To create a script load test: </p> <ol> <li> <p>Perform one of the following: </p> </li> <li> <p>Select Tests &gt; New and click Add Load Test. The Create a new Load Test page appears. </p> </li> <li>Select Tests &gt; Search, and click + Add a new load test. The Create a new Load Test page appears. </li> <li>In the homepage, see the Create a new Load Test pane. </li> </ol> <p></p> <ol> <li>Select Script Test. </li> </ol> <p>A Create Load Test page appears. </p> <p></p> <ol> <li>Specify the test settings. The following table describes the information you need to provide for defining the Script Load Test.</li> </ol> Item Description General The name of the Load test. Scripts Specify the scripts that will participate in the test, as well as  their relative weights, as described in Specifying Scripts for a load test (on page 20). Load  Configuration For each of the following,  enter a number, or use the slider tool to specify the number. Max Virtual Users The maximum number of Virtual Users to generate. Ramp up time in minutes The time interval over  which to increase the load from 0 Virtual Users to the number of virtual  users specified in Max Virtual Users. Time to run Max Virtual Users in minutes The time interval during  which to run the load at the max number of Virtual Users Ramp down time in minutes The time interval over  which to decrease the load in order to return to 0 Virtual Users Load  Generators Select the load generator  machines as described in Specifying   Load Generators for a load test (on page 23). Recurrence Select this option if you  wish to schedule automatic periodic execution of the load test. Refer to Setting recurring test runs (on page 24). <p>The Script load test generates an increasing load over a set time frame until reaching a defined maximum load size. The maximum load size is then run for a set period after which the load is reduced back to the base load again over a time frame defined by the user. The load increments are calculated automatically by WebLOAD based on the parameters defined. </p> <p>Thus, the load will start with 0 Virtual Users and increase over the time frame defined in the Ramp up time field to reach the number of Virtual Users defined in the Max Virtual Users field. The test will then continue running with the maximum number of Virtual Clients for the period of time defined in the Time to run Max Virtual Users field, after which load will return to 0 Virtual Users value over the time frame set in the Ramp down time field. </p> <ol> <li> <p>Select one of the following: </p> </li> <li> <p>Create Test \u2013 The test definitions are saved. </p> </li> <li> <p>Create and Run Test \u2013 The test definitions are saved, and the test starts running immediately.</p> </li> <li> <p>Run in Sandbox Mode \u2013 The system saves all the test definitions, but runs a limited test on the settings specified in the Scripts section while ignoring all the settings in the Load Configuration, Load Generators, and Recurrence sections. </p> <p>This option is intended for SaaS users wishing to run a limited test prior to running the full test specified in the test definitions.  </p> </li> </ol>"},{"location":"dashboard-user-guide/manage_tests/#specifying-scripts-for-a-load-test","title":"Specifying Scripts for a load test","text":"<p>To specify the script participating in aScript Load Test: </p> <ol> <li>For every script you want to include in the Script Load test, click Add Script. </li> </ol> <p></p> <p>The Scripts page appears. </p> <p></p> <p>The Scripts page lists the scripts uploaded to the WebLOAD Dashboard. For details how to upload a script, refer toUploading Resources (on page 33). If a script was uploaded with the folder in which it is located, the folder name appears; in that case, click the folder name to navigate to the script itself. </p> <ol> <li>Select a script by clicking Select Script in the corresponding line.  </li> </ol> <p>You are returned to the Script Load Test page, with the selected script appearing in its Scripts list. </p> <p></p> <ol> <li>In the % column, specify the relative weight of each script. Make sure that the percentages all add up to 100%. If you wish to give the scripts identical weights, click Make Equal. </li> </ol>"},{"location":"dashboard-user-guide/manage_tests/#creating-a-template-load-test","title":"Creating a Template Load Test","text":"<p>Use this option to create a load test based on a WebLOAD template file that was created in WebLOAD Console. </p> <p>To create a template load test: </p> <ol> <li> <p>Perform one of the following: </p> </li> <li> <p>Select Tests &gt; New and click Add Load Test. The Create a new Load Test page appears. </p> </li> <li>Select Tests &gt; Search, and click + Add a new load test. The Create a new Load Test page appears. </li> <li>In the homepage, see the Create a new Load Test pane. </li> </ol> <p></p> <ol> <li>Select Template Test. </li> </ol> <p>A Create Load Test page appears. </p> <p></p> <ol> <li>Specify the test settings. The following table describes the information you need to provide for defining the Template Load Test: </li> </ol> Item Description General Name The name of the Load test. Path Click Select Template to  select a template from the list appearing in the Resources &gt; Templates page  that appears. WebRM Virtual Clients allocation This is relevant  for a WebRM configuration. Specify the number of virtual users to allocate  for this test from the floating WebRM license. Recurrence Select this option  if you wish to schedule automatic periodic execution of the load test. Refer  to Setting recurring   test runs (on page 24). <ol> <li> <p>Select one of the following: </p> </li> <li> <p>Create Test \u2013 The test definitions are saved. </p> </li> <li>Create and Run Test \u2013 The test definitions are saved, and the test starts running immediately. </li> </ol>"},{"location":"dashboard-user-guide/manage_tests/#specifying-load-generators-for-a-load-test","title":"Specifying Load Generators for a load test","text":"<p>Load generators are machines that bombard tested site with transactions to test site scalability and integrity.  Both aURL/API Load Test and aScript Load Test require you to specify the load generators that will participate in the test.  Note that the list of available load generators is defined by a Super Admin, as described inAdding Load Generators (on page 76). </p> <p>To specify the load generators participating in a load test: </p> <ol> <li> <p>Keep in mind that each Location in the list defines a group of one or more load generators having the same \u201cLocation\u201d tag. For a detailed explanation, refer to Setting Load Generators\u2019 Location Tag (on page 78). </p> </li> <li> <p>Select a group of load generators with an identical Location, by entering a non- zero percentage in the corresponding % column. The percentage specifies the relative weight of this group of load generators. </p> </li> </ol> <p></p> <ol> <li>Make sure the sum of all the percentages is 100%. ![ref8]</li> </ol> <p></p>"},{"location":"dashboard-user-guide/manage_tests/#setting-recurring-test-runs","title":"Setting recurring test runs","text":"<p>For each load test you create \u2013 seeCreating a new load test (on page 13) \u2013 you can schedule automatic periodic execution of the test. </p> <p>Note that you can also, at any time, manually run or schedule a one-time test run. Refer toScheduling a one-time test run (on page 25). </p> <p>To set automatic periodic execution of a load test: </p> <ol> <li> <p>In the Create Load Test page, accessed as described inCreating a new load test (on page 13), select the Recurrence checkbox. </p> </li> <li> <p></p> </li> <li> <p>Set the frequency: Every Day or Every Week. </p> </li> <li> <p>For a weekly recurrence, specify the day of the week on which to run the test. </p> </li> <li> <p>Define the exact time of day when to run the test. </p> </li> <li> <p>Specify the Time Zone according to which the time is determined.</p> </li> </ol>"},{"location":"dashboard-user-guide/manage_tests/#scheduling-a-one-time-test-run","title":"Scheduling a one-time test run","text":"<p>You can, at any time, manually run or schedule a one-time test run, as explained in this section. </p> <p>Note that you can also schedule automatic periodic execution of a test, as part of test definition. Refer toCreating a new load test (on page 13). </p> <p>To manually run a load test: </p> <ol> <li>In the menu bar, select Tests &gt; Search. The Load Tests table appears (Figure 6). </li> </ol> <p></p> <ol> <li> <p>In the line corresponding to the test you wish to run, click ![ref15]. A Run Test query is displayed. </p> </li> <li> <p></p> </li> <li> <p>Do one of the following: </p> </li> <li> <p>To run the test now, click Run Now. </p> </li> <li>To run the test at a specific later time, click Run Later, and specify the date and time for running the test. ![ref8]</li> </ol> <p></p> <ol> <li>Click Run. </li> </ol>"},{"location":"dashboard-user-guide/manage_tests/#editing-a-load-test","title":"Editing a load test","text":"<p>To edit a load test: </p> <ol> <li>In the menu bar, select Tests &gt; Search. </li> </ol> <p>The Load Tests table appears. </p> <ol> <li>In the Name column, click the name of the test you wish to edit. </li> </ol> <p>The test definition page appears. The following figure shows an example of the page that appears when selecting to edit a template load test. </p> <p></p> <ol> <li> <p>Edit the test definitions as desired. For an explanation of the various fields, refer to the relevant explanation inCreating a new load test (on page 13). </p> </li> <li> <p>Click Update.  </p> </li> </ol>"},{"location":"dashboard-user-guide/manage_tests/#deleting-a-load-test","title":"Deleting a load test","text":"<p>To delete a load test: </p> <ol> <li>In the menu bar, select Tests &gt; Search. The Load Tests table appears (Figure 6). </li> <li>In the line corresponding to the test you wish to edit, click ![ref17]. A Delete Test page appears. </li> <li></li> <li>In the Delete Test page that appears, you can select between: </li> <li>Deleting the load test and all its session. </li> <li>Deleting only the load test, but keeping the test sessions. </li> </ol>"},{"location":"dashboard-user-guide/managing_dashboards/","title":"Managing Dashboards","text":"<p>In WebLOAD Dashboard you can manage any dashboard saved in the database, as well as create new dashboards, delete dashboards, import and export dashboards in JSON format, and save your customized dashboards.</p>"},{"location":"dashboard-user-guide/managing_dashboards/#loading-a-dashboard","title":"Loading a Dashboard","text":"<p>When you access WebLOAD Dashboard, the default Home dashboard is displayed. You can however select to display any other dashboard from the database, as described in this section.  </p> <p>Note that you can also import a dashboard that was saved as a JSON file, as described inImporting a Dashboard (on page 60). </p> <p>To load a dashboard: </p> <ol> <li> <p>In the menu bar, select Dashboards &gt; Main Dashboard. </p> </li> <li> <p>Click the dashboard drop-down in the dashboard header. A list of all the dashboards in the database is displayed.</p> </li> </ol> <p></p> <ol> <li> <p>Optionally enter a text string in the Search box to filter the display by dashboards whose name contains that text string. </p> </li> <li> <p>Optionally, click starred in the right side of the Search box to filter the display by your favorite dashboards (= dashboards you had starred). </p> </li> <li> <p>Select a dashboard from the list. WebLOAD Dashboard displays the selected dashboard. </p> </li> </ol>"},{"location":"dashboard-user-guide/managing_dashboards/#exporting-importing-a-dashboard-in-json-format","title":"Exporting &amp; Importing a Dashboard in JSON Format","text":"<p>You can export a dashboard as a JSON file, and import dashboards that were saved in JSON file format. </p> <p>For instructions how to import a dashboard that was saved as a JSON file, refer to Exporting a Dashboard as a JSON File. </p>"},{"location":"dashboard-user-guide/managing_dashboards/#importing-a-dashboard","title":"Importing a Dashboard","text":"<p>To import a dashboard that was saaved in JSON file format: </p> <ol> <li> <p>Do either of the following: </p> </li> <li> <p>In the menu bar, select Dashboards &gt; Import.**  ![ref10]</p> </li> </ol> <p></p> <ul> <li>In the Dashboard header, click the dashboard drop-down and select Import. </li> </ul> <p></p> <ol> <li>In the Import Dashboard window that appears, select Upload .json File, and specify the desired JSON file. </li> </ol> <p>Alternatively, paste JSON content into the Import Dashboard window and click Load. </p> <p></p> <p>WebLOAD Dashboard displays the selected dashboard.</p>"},{"location":"dashboard-user-guide/managing_dashboards/#creating-a-new-dashboard","title":"Creating a New Dashboard","text":"<p>You can create a new empty dashboard and define it as desired. To create a new dashboard: </p> <ol> <li> <p>Do either of the following: </p> </li> <li> <p>In the menu bar, select Dashboards &gt; + New. </p> </li> </ol> <p></p> <ul> <li>In the Dashboard header, click the dashboard drop-down and click + Create New.  ![ref10]</li> </ul> <p></p> <p>A new empty dashboard appears.  </p> <ol> <li>Configure the dashboard as desired.</li> </ol>"},{"location":"dashboard-user-guide/managing_dashboards/#saving-your-customized-dashboard","title":"Saving your Customized Dashboard","text":"<p>After changing a dashboard as desired, you can save the customized dashboard to keep all the changes. Note that two changes are not saved: the selected sessions and the selected time filter. </p> <p>To save a customized dashboard: </p> <ol> <li>Click the Manage Dashboard Settings icon ![ref26] in the middle of the dashboard header, and select Save As. </li> </ol> <p></p> <ol> <li>Give your dashboard a unique name by editing the current name, which appears in the New name field.  </li> </ol>"},{"location":"dashboard-user-guide/managing_dashboards/#setting-the-default-home-dashboard","title":"Setting the Default (Home) Dashboard","text":"<p>You can set any desired dashboard as your Home (default) dashboard, and you can also revert to the global WebLOAD Dashboard default any time. </p> <p>To set the Home dashboard: </p> <ol> <li>In the right side of the menu bar, click the down arrow adjacent to your user name.</li> </ol> <p></p> <ol> <li> <p>In the dropdown list that appears:</p> </li> <li> <p>To set the default dashboard at the user level, select Profile and then in the Profile window, set the Home Dashboard in Preferences. </p> </li> <li> <p>To set the default dashboard at the organization level, select Preferences and then in the Org Preferences window, set the Home Dashboard in Preferences. </p> <p>Note that your personal default takes precedence over the Org default, which takes precedence over the global default. </p> </li> <li> <p>To revert to the global default, select Preferences and then in the Org Preferences window, set the Home Dashboard to Default. </p> </li> </ol>"},{"location":"dashboard-user-guide/managing_dashboards/#deleting-a-dashboard-from-the-database","title":"Deleting a Dashboard from the Database","text":"<p>To delete a dashboard from the database: </p> <ol> <li>Click the Manage Dashboard Settings icon ![ref26] in the middle of the dashboard header, and select Delete dashboard. </li> </ol> <p></p> <ol> <li>Confirm the operation.</li> </ol>"},{"location":"dashboard-user-guide/managing_load_generators/","title":"Managing Load Generators","text":"<p>Both aURL/API Load Test andScript Load Test require you to specify, from among the available load generators, which load generators to include in the test. However, the list of available load generators can only be defined by a Super Admin.  ![ref27]</p>"},{"location":"dashboard-user-guide/managing_load_generators/#adding-load-generators","title":"Adding Load Generators","text":"<p>To add a new load generator: </p> <ol> <li>In the menu bar, select Admin &gt; Load Generators. The Load Generators window appears.  </li> </ol> <p></p> <ol> <li> <p>Click +Add a new load generator. </p> </li> <li> <p>An Add New Load Generator window appears.</p> </li> </ol> <p></p> <ol> <li> <p>In the Name field, specify the load generator\u2019s IP address or host name.  </p> </li> <li> <p>In Generator Type, select whether the generator is a Local Machine or a Cloud Machine.  </p> </li> <li> <p>If you want to specify a Cloud Machine, first make sure it was specified as a Cloud Host in the WebLOAD Console. Refer to*Specifying a Cloud Host as a Load Generator (on page 79).  </p> </li> <li> <p>In Location, enter a human-readable field. This value does not have to be unique per load generator machine, and has an important role, as described inSetting Load Generators\u2019 Location Tag (on page 78). </p> </li> <li> <p>Note that if you leave the Location field empty, the system will automatically give this field the value entered in the Name field. </p> </li> </ol>"},{"location":"dashboard-user-guide/managing_load_generators/#setting-load-generators-location-tag","title":"Setting Load Generators\u2019 Location Tag","text":"<p>Load Generators are defined by Name and Location. However, in the test-creation pages, the load generators are listed by Location only (and not by Name).  </p> <p></p> <p>This is helpful when defining a load test, because of the relationship between Name and Location, as follows: </p> <ul> <li> <p>Multiple separate machines can have the same Location (by defining multiple load generators whose Locations are identical but whose Names are not). For example: </p> </li> <li> <p>If: You want all load generators in Test Lab 1 to participate in certain tests. </p> </li> <li>Then Give the same \u201cTest Lab 1\u201d Location to all the load generator machines located in Test Lab 1.  </li> <li> <p>Finally: You need only to select \u201cTest Lab 1\u201d in the Load Generators section of the Create Load Test page, and all the load generators whose Location is \u201cTest Lab 1\u201d will be included. </p> </li> <li> <p>Likewise, any one machine can be given multiple different Locations (by defining multiple load generators whose Names are identical but whose Locations are not). For example: </p> </li> <li> <p>If: You sometimes want to choose load generators based on their operating system, and other times based on their geographical location. </p> </li> <li> <p>Then: Define each load generator twice, once with Location describing its OS (Windows or Linux), and once with Location describing its geographical location (New York or London).  </p> </li> <li> <p>Finally: </p> <p>You need only to select \u201cWindows\u201d, \u201cLinux\u201d, \u201cNew York\u201d or \u201cLondon\u201d in the Load Generator section of the Create Load Test page, and only the load generators fitting that description will be included. ![ref10]</p> </li> </ul>"},{"location":"dashboard-user-guide/managing_load_generators/#specifying-a-cloud-host-as-a-load-generator","title":"Specifying a Cloud Host as a Load Generator","text":"<p>If you want to specify a cloud machine as a load generator, you need to first define the cloud host machine in the WebLOAD Console. </p> <p>To define a cloud host in WebLOAD Console: </p> <ol> <li>In WebLOAD Console, set up a WebLOAD Dashboard Account as follows: </li> <li>Create an Amazon EC2 account. </li> <li>Click Cloud Options in the Tools tab of the ribbon to create a WebLOAD Dashboard account in which you specify your Amazon security credentials, the specific Amazon region where the machines should be located, and the WebLOAD image to install on the Amazon machines.  </li> </ol> <p>For a full description , refer to Setting Up Cloud Computers in the WebLOAD Console User Guide. </p> <ol> <li>In WebLOAD Console, define cloud host computers as follows: </li> <li>Click Add in the Host Selection window of the WebLOAD wizard.  </li> <li>In the Add Host Computer window that appears, select Add Cloud host . </li> </ol> <p>For a full description , refer to Adding Host Computers in the WebLOAD Console User Guide. </p> <p></p> <p>`                             </p>"},{"location":"dashboard-user-guide/managing_organizations/","title":"Managing Organizations, Users and Admins","text":""},{"location":"dashboard-user-guide/managing_organizations/#understanding-organizations-and-admins","title":"Understanding Organizations and Admins","text":""},{"location":"dashboard-user-guide/managing_organizations/#organizations-and-admins","title":"Organizations and Admins","text":"<p>Organizations are a method of compartmentalizing dashboards, data source and users. You do not need to create multiple organizations if you want all your users to have access to the same set of dashboards and data. If however you do not want all users to access the same dashboards and data sources, define organizations as described in Adding an Organization. </p> <p>If you will be defining organizations, you can have two levels of administrators: </p> <ul> <li>Organizational administrators: These admins can manage users within specific organizations in a particular WebLOAD Dashboard installation. </li> <li>Super administrators: These super admins can manage users across all organizations in a WebLOAD Dashboard installation. They can also change and access system-wide settings. </li> </ul>"},{"location":"dashboard-user-guide/managing_organizations/#organizational-administrators","title":"Organizational Administrators","text":"<p>As an Organizational administrator, you can add Data Sources, add Users to your Organization and modify Organization details and options. </p> <p>Super Administrators</p> <p>As a Super Administrator, you have complete access to any Organization or User in a specific WebLOAD Dashboard installation. When logged in as super admin, the menu bar contains an additional Admin option to enable you to perform global administration actions. ![ref28]</p> <p></p>"},{"location":"dashboard-user-guide/managing_organizations/#managing-users","title":"Managing Users","text":"<p>Organizational admins can manage users within the specific organization, while super admins can manage all users, across all organizations. </p>"},{"location":"dashboard-user-guide/managing_organizations/#user-types","title":"User Types","text":"<p>There are two main types of users: </p> <ul> <li>Super admin user \u2013 has full permissions to all of the WebLOAD Dashboard\u2019s options and settings. </li> <li>Organizational user. Within the organization, a user can have any of the following roles: </li> <li>Viewer \u2013 Can only view the Dashboard </li> <li>Read-Only Editor \u2013 Can edit dashboards, but cannot save the changes </li> <li>Editor \u2013 Can manage, create and execute tests and sessions, create and update dashboards, upload resources, and save the changes. This is the typical WebLOAD Dashboard user. </li> <li>Organizational Admin \u2013 has full permissions to all of the organization\u2019s options and settings: can edit, save, and make changes at the organizational level, including creating organizational users and editing organizational users. </li> </ul>"},{"location":"dashboard-user-guide/managing_organizations/#user-management-by-a-super-admin","title":"User Management by a Super Admin","text":"<p>Super admins can add users of any type, to any organization. User Creation by a Super Admin </p> <p>To add a user of any type: </p> <ol> <li> <p>In the Menu bar, select your user name and then select Admin &gt; Global Users.  </p> </li> <li> <p>In the User window that appears, click + Add new user. </p> </li> </ol> <p></p> <ol> <li>In the Add New User window that appears, enter the new user  name, email, username and password. Then click Create. </li> </ol> <p></p> <ol> <li> <p>The new user is created, and appears in the table in the Users window (Figure 90). </p> </li> <li> <p>The new user\u2019s settings can now be defined/edited. </p> </li> <li> <p>A super admin can set the new user\u2019s permissions and other settings, by clicking Edit in the respective row in the Users window (Figure 90). For instructions, refer toUser Editing by a Super Admin \u2013 Editing User\u2019s Permissions, Organizations, Roles and Details. </p> </li> <li>An organizational admin can set the new user\u2019s role in the organization. For instructions, refer to*User Editing by an Organizational Admin \u2013 Editing User\u2019s Role. ![ref28]</li> </ol>"},{"location":"dashboard-user-guide/managing_organizations/#user-editing-by-a-super-admin-editing-users-permissions-organizations-roles-and-details","title":"User Editing by a Super Admin \u2013 Editing User\u2019s Permissions, Organizations, Roles and Details","text":"<p>A super admin can set a user\u2019s permissions, organizational roles, and other settings. To edit a user: </p> <ol> <li> <p>In the Menu bar, select your user name and then select Global Users.  </p> </li> <li> <p>In the Users window that appears, click Edit in the row of the user you wish to edit. </p> </li> </ol> <p></p> <ol> <li>The Edit User window appears, enabling you to edit various user settings. </li> </ol> <p></p> <ol> <li> <p>You can make the user a super administrator by selecting the Admin checkbox in the Permissions section. </p> </li> <li> <p>In the Organizations section you can specify in which Organizations the user is a member, and specify the user\u2019s Role in each. The available organizational roles and their permissions are described inOrganizational user (on page 82). </p> </li> <li> <p>You can edit the user\u2019s name, email, username, and change his password.  ![ref28]</p> </li> </ol>"},{"location":"dashboard-user-guide/managing_organizations/#user-management-by-an-organizational-admin","title":"User Management by an Organizational Admin","text":"<p>An organizational admin can add existing users to the organization, and edit the roles of the organizational users. </p>"},{"location":"dashboard-user-guide/managing_organizations/#user-addition-by-an-organizational-admin","title":"User Addition by an Organizational Admin","text":"<p>To add a user to the organization: </p> <ol> <li>In the Menu bar, select your user name and then select Users.  </li> </ol> <p></p> <ol> <li>In the Organization Users window that appears, click + Add or Invite. </li> </ol> <p></p> <ol> <li>Enter the Email or Username, and optionally the Name, of the user you wish to invite. For each additional user you wish to add, click Invite another and enter that user\u2019s details. Then click Invite Users. </li> </ol> <p></p>"},{"location":"dashboard-user-guide/managing_organizations/#user-editing-by-an-organizational-admin-editing-users-role","title":"User Editing by an Organizational Admin \u2013 Editing User\u2019s Role","text":"<p>An organizational admin can set a user\u2019s role in the organization. </p> <p>To edit a user\u2019s role: </p> <ol> <li>In the Menu bar, select your user name and then select Users.  </li> </ol> <p></p> <ol> <li>In the Organization Users window that appears, you can set the Role of each organizational user. </li> </ol> <p></p>"},{"location":"dashboard-user-guide/managing_organizations/#managing-organizations","title":"Managing Organizations","text":"<p>Super admin users can add organizations (for an explanation of Organizations, refer to Organizations and Admins).  </p>"},{"location":"dashboard-user-guide/managing_organizations/#adding-an-organization","title":"Adding an Organization","text":"<p>To add an organization: </p> <ol> <li>In the Menu bar, select your user name, and then select New Organization.  </li> </ol> <p></p> <ol> <li>In the New Organization window that appears, enter an Org. name, and click Create.</li> </ol> <p></p> <p>The Org Preferences window appears, populated with the new organization\u2019s name, enabling you to edit various organization\u2019s settings.</p> <p></p> <p>To set the new organization\u2019s settings, refer to the instructions inEditing an Organization\u2019s Settings. ![ref10]</p>"},{"location":"dashboard-user-guide/managing_organizations/#editing-an-organizations-settings","title":"Editing an Organization\u2019s Settings","text":"<p>To edit an organization\u2019s settings: </p> <ol> <li>In the Menu bar, select your user name and make sure the organization name appearing below the user name, is the name of the organizations whose settings you wish to edit. If it is not, select Switch to in order to switch to that organization. </li> </ol> <p></p> <ol> <li>In the Menu bar, select your user name and then select Preferences.  </li> </ol> <p>The Org Preferences window appears, enabling you to edit various organization\u2019s settings </p> <p></p> <ol> <li> <p>You can edit the organization\u2019s name and address. </p> </li> <li> <p>You can edit the organization\u2019s preferences: UI theme, Home dashboard, and Timezone.  </p> </li> <li> <p>You can change mange the organization\u2019s users by clicking Users &amp; Roles under Admin Pages. In the Organization Users window that appears, you can: </p> </li> <li> <p>Add users </p> </li> <li> <p>Delete users </p> </li> <li> <p>Set the Role of each organizational user.         </p> <p></p> </li> <li> <p>You can use API keys to access some functionality in a REST API, by clicking API Keys under Admin Pages. </p> </li> </ol> <p></p>"},{"location":"dashboard-user-guide/managing_resources/","title":"Managing Resources","text":"<p>The Resources tab enables loading any file type, to the WebLOAD Dashboard\u2019s Resources folder. You can use this functionality to upload the files of tests you created in WebLOAD Console, such as templates, scripts, sessions, etc. and any file used to test your system.</p> <p>The Resources tab also offers the option of creating sub-folders. If you want the uploaded templates or script to continue working once they are uploaded to WebLOAD Dashboard, you will need to create the same hierarchy as the original hierarchy of the files you are uploading.  </p>"},{"location":"dashboard-user-guide/managing_resources/#viewing-resources","title":"Viewing Resources","text":"<p>To view the resources uploaded to WebLOAD Dashboard: </p> <p>1.  In the menu bar, select Resources &gt; Search. ![ref8]</p> <p></p> <p>The resources can be organized hierarchically in subfolders, or some or all of them can be located in the root of the Resources folder. To view the contents of a subfolder, click the subfolder name.  </p> <p>The Resources table provides the following information and available actions, for each resource or resource subfolder: </p> Item Description Name The name of the resource or folder  containing resources. Instructs  WebLOAD to delete the resource or folder. Refer to  Deleting a Resource or Resources   folder (on page 34). Instructs WebLOAD to  download the resource to the local computer. Enables creating a load test based on the  resource. Refer to  Creating a Load Test Based on a   Resource (on page 34)."},{"location":"dashboard-user-guide/managing_resources/#uploading-resources","title":"Uploading Resources","text":"<p>To upload a resource into WebLOAD Dashboard: </p> <ol> <li> <p>In the menu bar, select Resources &gt; Search. The Resources page appears (Figure 26). </p> </li> <li> <p>If you wish to add a resource into the root folder of the WebLOAD Console Resources folder, click Upload Resources in the Resources page. </p> </li> <li> <p>If you wish to add a resource into a subfolder of the WebLOAD Console Resources folder: </p> </li> <li> <p>Navigate to the subfolder in the folders tree displayed in the Resources page. If the sub folder does not yet exist, create it as described inCreating a Resources subfolder (on page 33) </p> </li> <li>Click Upload Resource.  </li> </ol> <p>The Upload Resources page appears. </p> <p></p> <ol> <li> <p>In the Upload Resources page, click Select resource files. </p> </li> <li> <p>In the file explorer window that appears, navigate to the files and select them, and then click Open.  </p> </li> <li> <p>The files are uploaded to the folder you were in when you clicked Upload Resource. </p> </li> </ol>"},{"location":"dashboard-user-guide/managing_resources/#creating-a-resources-subfolder","title":"Creating a Resources subfolder","text":"<p>To create a subfolder in the Resources folder: </p> <ol> <li> <p>In the menu bar, select Resources &gt; Search. The Resources page appears (Figure 26). </p> </li> <li> <p>If you wish to add a subfolder under the root folder of the WebLOAD Console Resources folder, click Create Folder in the Resources page. </p> </li> <li> <p>If you wish to add a subfolder under a specific subfolder of the WebLOAD Console Resources folder, navigate to the specific subfolder in the folders tree displayed in the Resources page. Then click Create Folder. ![ref8]</p> </li> </ol> <p>The New Resource Folder page appears. </p> <p></p> <ol> <li>Specify the subfolder\u2019s name, and click Create.  </li> </ol>"},{"location":"dashboard-user-guide/managing_resources/#creating-a-load-test-based-on-a-resource","title":"Creating a Load Test Based on a Resource","text":"<p>You can create a load test based on either of the following types of resources: </p> <ul> <li>.wlp \u2013 a script as well as resources related to the script </li> <li>.tpl \u2013 a template file </li> </ul> <p>To create a load test based on a resource: </p> <ol> <li>In the menu bar, select Resources &gt; Search. </li> <li>In the Resources table, click  adjacent to a resource of type .wlp or .tpl. </li> <li>If the resource was a .wlp file, the Create Load Test for a Script-type test appears, with the .wlp already appearing in the Script field. SeeCreating a Script Load Test (on page  17). Set or edit any of the fields, and click Create Test. </li> <li>If the resource was a .tpl file, the Create Load Test for a template-type test appears, with the .tpl already appearing in the Template field. SeeCreating a Template Load Test (on page  21). Set or edit any of the fields, and click Create Test. </li> </ol>"},{"location":"dashboard-user-guide/managing_resources/#deleting-a-resource-or-resources-folder","title":"Deleting a Resource or Resources folder","text":"<ol> <li> <p>In the menu bar, click Resources &gt; Search. </p> </li> <li> <p>Optionally navigate to a specific subfolder in the folders tree displayed in the Resources page. </p> </li> <li> <p>Click  adjacent to a resource or subfolder. </p> </li> <li> <p>You are requested to confirm the delete operation. </p> </li> </ol> <p></p> <ol> <li> <p>If the resource is a template, you can select between: </p> </li> <li> <p>Deleting the template as well as its associated test and sessions </p> </li> <li> <p>Deleting only the template, but keeping the associated test and sessions. </p> </li> </ol> <p></p> <ol> <li>If you specified to delete a resources folder, keep in mind that although the templates located in this folder will be deleted, the tests and sessions from those folders will be kept for review and will be displayed in the Load Tests page and Load Sessions page (but without the ability to run them).  </li> </ol>"},{"location":"dashboard-user-guide/sharing_dashboards/","title":"Sharing a Dashboard or Panel","text":"<p>The WebLOAD Dashboard provides several options for sharing a dashboard or a panel. </p>"},{"location":"dashboard-user-guide/sharing_dashboards/#sharing-a-dashboard","title":"Sharing a Dashboard","text":"<p>There are several options for sharing a dashboard: </p> <ul> <li>Link to Dashboard \u2013 Produce a link for sharing a dashboard with other WebLOAD Dashboard users. </li> <li>Export \u2013 Export the dashboard as a JSON file. </li> </ul>"},{"location":"dashboard-user-guide/sharing_dashboards/#accessing-the-share-dashboard-options","title":"Accessing the Share Dashboard Options","text":"<p>To access the dashboard sharing options:</p> <ol> <li>Select the Share Dashboard icon  in the dashboard header. A Share window appears, displaying a link to the dashboard. </li> </ol> <p></p> <ol> <li>Click any of the options: Link to Dashboard, or Export A Share Dashboard window appears. </li> </ol> <p></p>"},{"location":"dashboard-user-guide/sharing_dashboards/#sharing-a-link-to-a-dashboard","title":"Sharing a Link to a Dashboard","text":"<p>You can easily share an entire dashboard, by providing the appropriate URL. To share a link to a dashboard: </p> <ol> <li> <p>Access the Share Dashboard window (Figure 77), as described inAccessing the Share Dashboard Options. </p> </li> <li> <p>Select the Link tab (Figure 77). </p> </li> <li> <p>Using the options in the Share Link window, you can produce a link to various variants of the dashboard, as described in the following table.</p> </li> </ol> Item Description Current time range Determines whether the linked page will display data for the selected  time range or for the entire session time range. Selected Sessions Determines whether the  linked page will displays the data for the currently selected session(s), or  for the sessions appearing when the dashboard was last saved. Template variables Determines whether the  linked page will include template variables. Theme Determines whether the linked page will display the current theme,  the default light theme, or the default dark theme. <ol> <li>Click Copy to copy the URL displayed in the window, and send it to those with whom you want to share the dashboard.  </li> </ol>"},{"location":"dashboard-user-guide/sharing_dashboards/#exporting-a-dashboard-as-a-json-file","title":"Exporting a Dashboard as a JSON File","text":"<p>You can export a dashboard as a JSON file, and import dashboards that were saved in JSON file format. For instructions how to import a dashboard that was saved as a JSON file, refer toImporting a Dashboard. </p> <p>To export a dashboard as a JSON file: </p> <ol> <li> <p>Access the Share Dashboard window (Figure 77), as described inAccessing the Share Dashboard Options. </p> </li> <li> <p>Select the Export tab.</p> </li> </ol> <p>An Export dashboard window appears. </p> <p></p> <ol> <li> <p>Optionally click View JSON to view the file. </p> </li> <li> <p>Click Save to file to save in a desired location. </p> </li> </ol> <p>A JSON file of the dashboard is created in your Downloads directory. Its name is the dashboard name followed by the current timestamp. </p> <p>Note that you can view the contents of the JSON file in the dashboard. To do so, click the Manage Dashboard Settings icon ![ref26] in the middle of the dashboard header, and select View JSON. </p>"},{"location":"dashboard-user-guide/sharing_dashboards/#sharing-a-panel","title":"Sharing a Panel","text":"<p>Sharing a panel is similar to sharing a dashboard. Panel sharing is often useful when you want to share a specific segment (time range) of a panel. The following panel sharing options are available: </p> <ul> <li>Link - Produces a link for sharing, with other WebLOAD Dashboard users, this panel with the current time range and selected template variables. </li> <li>Embed - Produces the HTML code that you need to use if you wish to embed a panel using an iframe on another web site. ![ref10]</li> </ul>"},{"location":"dashboard-user-guide/sharing_dashboards/#accessing-the-share-panel-options","title":"Accessing the Share Panel Options","text":"<p>When you share a specific panel, you are actually sharing the dashboard, with the specific panel enlarged. </p> <p>To access the panel sharing options: </p> <ol> <li>Optionally select a specific time range in the panel. Refer toSpecifying the Zoom (on page 42). </li> <li>Click the panel\u2019s title and select share. </li> </ol> <p>A Share Panel window appears, with the Link tab selected. </p> <p></p>"},{"location":"dashboard-user-guide/sharing_dashboards/#sharing-a-link-to-a-panel","title":"Sharing a Link to a Panel","text":"<p>The Link option produces a link that will take you to exactly this panel with the current time range and selected template variables. </p> <p>To share a link to a panel: </p> <ol> <li> <p>Access the Share Panel window as described inAccessing the Share Panel Options. </p> </li> <li> <p>Select the Link tab. </p> </li> </ol> <p>Using the options in the Share Link window, you can produce a link to various variants of the panel, as described in the following table. </p> Item Description Current time range Determines whether the  linked page will display data for the selected time range or for the entire  session time range. Selected  Sessions Determines whether the  linked page will displays the data for the currently selected session(s), or  for the sessions appearing when the dashboard was last saved. Template variables Determines whether the  linked page will include template variables. Theme Determines whether the  linked page will display the current theme, the default light theme, or the  default dark them. <ol> <li>Click Copy to copy the URL displayed in the window, and send it to those with whom you want to share the dashboard. </li> </ol>"},{"location":"dashboard-user-guide/sharing_dashboards/#sharing-a-panel-by-embedding-its-html-code","title":"Sharing a Panel by Embedding its HTML Code","text":"<p>You can embed a panel using an iframe on another web site. The Embed option produces the HTML code that you need to use. Note that unless anonymous access is enabled, the user viewing that page needs to be signed into WebLOAD Dashboard for the graph to load. </p> <p>To share a panel by embedding its HTML code: </p> <ol> <li>Optionally select a specific time range in the panel.</li> <li>Access the Share Panel window (Figure 79), as described inAccessing the Share Panel Options. </li> <li>Select the Embed tab. </li> </ol> <p></p> <p>Using the options in the Embed window, you can produce the source HTML code of various variants of the panel, as described in the following table. </p> Item Description Current time range Determines whether the  HTML code will be rendered as a page that displays data for the selected time  range or for the entire session time range. Selected Sessions Determines whether the  HTML code will be rendered as a page that displays the data for the currently  selected session(s), or for the sessions appearing when the dashboard was  last saved. Template variables Determines whether the  HTML code will be rendered as a page that will include template variables. Theme Determines whether the  HTML code will be rendered as a page that will display the current theme, the  default light theme, or the default dark them."},{"location":"dashboard-user-guide/using_dashboards/","title":"Using Dashboards","text":"<p>The Dashboards tab enables viewing, analyzing and comparing load sessions, with full control and customization of the display. </p> <ul> <li>For explanations of the various measurements in the graphs, refer to the WebLOAD Console User\u2019s Guide. </li> <li>For explanations of the log messages in the tables, refer to the WebLOAD Console User\u2019s Guide. </li> </ul>"},{"location":"dashboard-user-guide/using_dashboards/#dashboards-tab-components","title":"Dashboards tab components","text":"<p>The high level UI components of the Dashboards tab include: </p> <ul> <li>Header \u2013 Provides global settings, filters and controls </li> <li>Rows \u2013 Each row contains panels for data display </li> <li>Panels \u2013 Display data in graph, text, table, singlestat, Alert list, Dashboard list, or Plugin list format ![ref10]</li> </ul> <p></p>"},{"location":"dashboard-user-guide/using_dashboards/#dashboard-header","title":"Dashboard Header","text":"<p>The main components of the dashboard tab header include: </p> Item Description For more information, see 1 Dashboard name and selection Loading a Dashboard (on page 59) 2 Select session \u2013 Enables  selecting the session(s) to be viewed and analyzed. Specifying the Sessions to view in   the Dashboard (on page 41) 3 Star or unstar a dashboard  \u2013 Enables marking/unmarking a dashboard as a favorite for filtering purposes. Loading a Dashboard (on page 59) 4 Share dashboard \u2013 Enables  sharing the current state of the dashboard Sharing a Dashboard (on page 66) 5 Save Saving your Customized Dashboard  (on page 63) 6 Settings \u2013 Enables  configuring the  dashboard\u2019s general  settings Customizing General Dashboard Settings (on page 55) 7 Time format: Relative Time \u2013 Show the time since session start. Useful for session  comparison  Absolute Time \u2013  Show the real time of the session  when it ran. Useful for currently running sessions Selecting the Time Format (on page 43) 8 Zoom to Data \u2013 Sets the time filter to the extent of the data. This  is done automatically when selecting data or a new session. 9 Zoom out 10 Time picker Setting the Time Picker (on page 45) 11 Refresh data"},{"location":"dashboard-user-guide/using_dashboards/#rows","title":"Rows","text":"<p>A row is a horizontal container for panels. A row can be hidden (collapsed) and its height controls its panels\u2019 height. </p> <ul> <li>To add a new row, click + ADD ROW at the bottom of a dashboard page. </li> <li>To edit a row, click the three grey dots and select the desired option. For more information, refer toCustomizing Rows (on page 46). </li> </ul> <p></p>"},{"location":"dashboard-user-guide/using_dashboards/#panels","title":"Panels","text":"<p>A panel is a data display unit. There are various types of panels \u2013 such as graph, text, table, singlestat, Alert list, Dashboard list, and Plugin list. </p> <ul> <li>To add a new panel, click the three grey dots of the desired row and select Add Panel (Figure 34). </li> <li>To edit a panel, click the panel title and click edit in the box that appears. For more information, refer toCustomizing Panels (on page 47). </li> </ul>"},{"location":"dashboard-user-guide/using_dashboards/#graph-panel","title":"Graph Panel","text":"<p>A graph panel presents session measurement data in graphic format. In each graph panel you can display multiple measurements from multiple sessions. You can also set various display options, such as colors, graph style (lines, bars, points), Y-axis formats (bytes, milliseconds, etc.) and more. </p> <p></p>"},{"location":"dashboard-user-guide/using_dashboards/#table-panel","title":"Table Panel","text":"<p>A table panel presents data in table format; by default the log messages from specified sessions. You can sort the display by various parameters, and filter the display by severity. </p> <p></p>"},{"location":"dashboard-user-guide/using_dashboards/#text-panel","title":"Text Panel","text":"<p>A text panel presents text. You can edit the text. </p> <p></p>"},{"location":"dashboard-user-guide/using_dashboards/#singlestat-panel","title":"Singlestat Panel","text":"<p>A singlestat panel is similar to a graph panel, but shows only a single statistic, usually in numeric form. It may contain a \u2018sparkline\u2019, and may appear as a gauge. </p> <p>Note that because a singlestat panel displays only one measurement, it is not suitable when comparing two or more sessions. </p> <p></p>"},{"location":"dashboard-user-guide/using_dashboards/#specifying-the-sessions-to-view-in-the-dashboard","title":"Specifying the Sessions to view in the Dashboard","text":"<p>WebLOAD Dashboard dashboards are useful both for analyzing the results of a specific session, and for comparing the results of different sessions.  </p> <p>To select a session for viewing in the dashboard tab: Do any of the following: </p> <ul> <li>In the Load Sessions table (Figure 23), click the session name.  </li> </ul> <p>The session appears in the currently selected dashboard. </p> <ul> <li>In Load Tests table (Figure 6), click the Show Last Session button . That last session appears in the currently selected dashboard. </li> </ul> <p>To select multiple sessions for viewing in the dashboard tab: </p> <p>Do any of the following: </p> <ul> <li> <p>In the Load Sessions table (Figure 23), click Show in Dashboard for each session you wish to view in the Dashboard. As soon as you select a dashboard, the dashboard refreshes to show the selected sessions\u2019 data in the panels. </p> </li> <li> <p>In the dashboard page, select the session from the Sessions drop-down list (Figure 39). You can select as many sessions as you wish. You can use the search box to aid you in finding the sessions you wish to view.  </p> </li> </ul> <p>As soon as you select a session or sessions, the dashboard refreshes to show the sessions\u2019 data in the panels. </p> <p></p>"},{"location":"dashboard-user-guide/using_dashboards/#specifying-the-zoom","title":"Specifying the Zoom","text":"<p>Using a graph panel\u2019s zoom option, you can set the time period for which all panels display information. For example, if you select to zoom into the time period from 00:30 to 01:00, all panels will refresh to show information for that time period only, and the metric panels, for example, will display metrics for that time period only. </p> <p>To zoom in: </p> <ul> <li>Use the mouse to select a specific time range in the panel. </li> </ul> <p></p> <p>The dashboard refreshes to show the graph for the selected time range only. </p> <p></p> <p>To zoom out: </p> <p>Use the Zoom to Data or Zoom Out options in the dashboardHeader. </p>"},{"location":"dashboard-user-guide/using_dashboards/#selecting-the-time-format","title":"Selecting the Time Format","text":"<p>You can view dashboard data in either Relative time or Absolute time (see item \u0087 in Figure 33). This affects the graphs\u2019 display as follows: </p> <p>If you are viewing data for a single session: </p> <ul> <li>Relative time \u2013 The start time is shifted over to zero.  </li> <li>Absolute time \u2013 Shows the real time. This format is useful for viewing currently running sessions. ![ref8]</li> </ul> <p>If you are comparing sessions: </p> <ul> <li>Relative time \u2013 The graph shows the two sessions as if they occurred concurrently (within the same timeframe). </li> </ul> <p></p> <ul> <li>Absolute time \u2013 The graphs shows the real time. </li> </ul> <p></p> <p></p>"},{"location":"dashboard-user-guide/using_dashboards/#setting-the-time-picker","title":"Setting the Time Picker","text":"<p>If you selected the Time Picker, you can set various time settings. </p> <p></p> <p>You can for example set the auto-refresh frequency. </p> <p></p>"},{"location":"recorder-user-guide/appendix_a/","title":"Appendix A: The WebLOAD Recorder Toolbox Set","text":"<p>This section describes the WebLOAD Recorder toolbox set.</p>"},{"location":"recorder-user-guide/appendix_a/#the-webload-recorder-toolbox-items","title":"The WebLOAD Recorder Toolbox Items","text":"<p>The following are the WebLOAD Recorder Toolbox items:</p> Toolbox Items General - Sleep - Message - JavaScriptObject - Comment - Try - Catch Load - Begin Transaction - End Transaction - Set Timer - Send Timer - Synchronization Point - Send Measurement - URL Screening - Value Extraction - Define Concurrent - Execute Concurrent Internet Protocols - FTP-connect - FTP-upload - FTP-download - FTP-disconnect - SMTP-send message - POP-retrieve - POP-Delete - IMAP-Connect - IMAP-Retrieve - IMAP-Delete - IMAP-CreateMailbox - IMAP-ListMailboxes - IMAP-DeleteMailbox - IMAP-RenameMailbox - IMAP-SubscribeMailbox - IMAP-UnsubscribeMailbox Toolbox Items - IMAP-ListSubscribedMailbox - IMAP-Search - NNTP-Connect - NNTP-GetArticle - NNTP-GetArticleCount - NNTP-PostArticle - TCP-Connect - TCP-Send - TCP-Receive - TCP-Erase - TELNET-Connect - TELNET-Receive - TELNET-Send - TELNET-Erase - UDP-Bind - UDP-Broadcast - UDP-Receive - UDP-Send - UDP-Erase - LDAP-Bind - LDAP-Search - LDAP-UnBind IoT  Protocols - MQTT-Connect - MQTT-Subscribe - MQTT-Send - MQTT-GetMessages - AMQP-Connect - AMQP-Send - AMQP-GetMessages Database - OpenDB - Oracle OpenDB - MySQL OpenDB - Execute Command - Fetch Data - DB GetLine - Oracle DB GetLine - MySQL DB GetLine - DB Load - Oracle DB Load - MySQL DB Load Verifications - WS-SingleNode - WS-MultipleNodes - Flex:Verify-Ext - Flex:Extract-Ext Multimedia - Streaming-Create - Streaming-Play - Streaming-Play with range - Streaming-Wait for Media  and Stop - Streaming-Wait for Media  and Pause - Streaming-Close WebSocket - WebSocket Connect - WebSocket Send - WebSocket Close Web  Services - HTTP - WSDL JMS - JMS-Connect-JNDI - JMS-Connect-HornetQ - JMS-Send - JMS-Receive Real  Clients - Selenium Driver - Selenium Report Statistics - JUnit Runner - PerfectoMobile"},{"location":"recorder-user-guide/appendix_a/#the-webload-recorder-general-toolbox","title":"The WebLOAD Recorder General Toolbox","text":"<p>The following table describes the purpose of each of the WebLOAD Recorder General Toolbox items:</p> Script Item Purpose Sleep <p>Emulates the time it takes users to get from one page to the next</p><p>- includes download time and the time it takes to read the page.</p> Message Places an informational or error message in the script. This message will appear in the Log window when you play back the script. Message objects can also be used to print out the values of variables. JavaScript Object <p>Enables you to insert JavaScript code directly into the script. You can code directly in JavaScript.</p><p>To add a JavaScript Object to the script, drag the JavaScript Object icon into the Script Tree, and then open the object to insert JavaScript code.</p> Comment Places comments in your script. The comment will appear in the JavaScript View pane when viewing the entire script. Try\u2026Catch Places Try and Catch statements in your script. You can use the Try...Catch statements for structured exception handling."},{"location":"recorder-user-guide/appendix_a/#sleep","title":"Sleep","text":"<p>Users vary their activity when accessing a Web application, sometimes pausing between transactions and occasionally only accessing the server intermittently. The time a user waits between performing consecutive actions is known as sleep time.</p> <p>When you record a script, WebLOAD Recorder automatically records the actual sleep time and inserts sleep icons into the script. You can edit the recorded sleep times manually, add more sleep statements, and control how WebLOAD is influenced by the sleep timers in the script.</p> <p>To insert sleep timers:</p> <ol> <li>Drag the Sleep  icon from the General toolbox into the Script Tree at the desired location.</li> </ol> <p>The Sleep dialog box opens.</p> <ol> <li> <p>In the Enter or select pause time field, enter or select the duration of the sleep. The default value is 1000 milliseconds.</p> </li> <li> <p>The Sleep item appears in the Script Tree and the JavaScript code is added to the script. To see the new JavaScript code, view the script in JavaScript Editing mode.</p> </li> </ol>"},{"location":"recorder-user-guide/appendix_a/#message","title":"Message","text":"<p>While running a test session, WebLOAD Recorder and WebLOAD Recorder\u2019s Log windows display information about session execution. You can include Message nodes in your script, defining points at which to send error and/or notification messages to the Log window.</p> <p>To insert a message:</p> <ol> <li> <p>Drag the Message  icon from the General toolbox into the Script Tree at the desired location.</p> </li> <li> <p>The Message dialog box opens.</p> </li> </ol> <p></p> <ol> <li>Create a text message by typing the text you want to appear in the message into the input text box.</li> </ol> <p>Note: When entering a string value to the message, the string must be enclosed in quotation marks; for example, \u201cSample Message\u201d.</p> <ol> <li> <p>To add a global variable to the message text, click the globe icon to the right of the input text box and select a global variable from the drop-down list.</p> </li> <li> <p>Select a severity level for the message from the drop-down list. The following severity levels are available:</p> </li> <li> <p>Information message (WLInfoMessage)</p> </li> <li>Minor error message (WLMinorError)</li> <li>Error message (WLError)</li> <li>Severe error message (WLSevereError)</li> <li> <p>Debug message (WLDebugMessage)</p> </li> <li> <p>Click OK.</p> </li> <li> <p>The Message item appears in the Script Tree and the JavaScript code is added to the script. To see the new JavaScript code, view the script in JavaScript Editing mode.</p> </li> </ol>"},{"location":"recorder-user-guide/appendix_a/#javascriptobject","title":"JavaScriptObject","text":"<p>JavaScript Objects enable you to insert JavaScript code directly into the script, giving you access to advanced functionality not available through the WebLOAD Recorder graphic interface. For example, working with XML or COM, or retrieving data from a database, are all tasks that require some additional programming code.</p> <p>To insert a JavaScriptObject:</p> <ol> <li>Drag the JavaScriptObject  icon from the General toolbox into the Script Tree at the desired location.</li> </ol> <p>The JavaScriptObject item appears in the Script Tree and the WebLOAD Recorder protocol block is added to the script.</p> <ol> <li>Open the object in JavaScript Editing mode to insert JavaScript code, as described in Using the JavaScript Editor (on page 75).</li> </ol>"},{"location":"recorder-user-guide/appendix_a/#comment","title":"Comment","text":"<p>WebLOAD Recorder enables you to add comments to your script to describe an activity or provide information about a specific operation.</p> <p>To insert a comment:</p> <ol> <li>Drag the Comment  icon from the General toolbox into the Script Tree at the desired location.</li> </ol> <p>The Comment dialog box opens.</p> <p></p> <ol> <li> <p>Enter the text you want to appear in the comment.</p> </li> <li> <p>Click OK.</p> </li> </ol> <p>The Comment item appears in the Script Tree and the JavaScript code is added to the script. To see the new JavaScript code, view the script in JavaScript Editing mode.</p>"},{"location":"recorder-user-guide/appendix_a/#try-catch-statements","title":"Try / Catch Statements","text":"<p>You can use the Try\u2026Catch statements for structured exception handling. This enables you to execute a particular block of statements if a specified exception occurs while your code is running.</p> <p>To insert a Try...Catch statement:</p> <ol> <li>Drag the Try  icon from the General toolbox into the Script Tree directly before the first action you want to include in the Try...Catch block.</li> <li>Drag the Catch  icon from the General toolbox into the Script Tree directly after the last action you want to include in the Try...Catch block.</li> </ol> <p>The Try and Catch items appear in the Script Tree and the JavaScript code is added to the script. To see the new JavaScript code, view the script in JavaScript Editing mode.</p>"},{"location":"recorder-user-guide/appendix_a/#the-webload-recorder-load-toolbox","title":"The WebLOAD Recorder Load Toolbox","text":"<p>The following table describes the purpose of each of the WebLOAD Recorder Load Toolbox items:</p> <p>Table 39: Load Toolbox Items</p> Script Item Purpose <p>Begin Transactions</p><p>End Transactions</p> Adds named transactions to the script to measure the performance of logical actions in your script, such as a Login process. By inserting named transactions into your script, you can take a series of simple actions, define them as a single transaction, and set success or failure criteria for the complete transaction. <p>Set Timer</p><p></p><p>Send Time</p> Timers let you time any operation or group of operations in a script and send the time statistics to the WebLOAD Console. SynchronizationPo int Create peak server loads that stress your system to the limit by deliberately forcing multiple Virtual Clients to perform key tasks and execute a given command at precisely the same moment in real time. SendMeasurement Create a new measurement name and assign a value to the measurement available in WebLOAD reports. URL Screening Specify the URLs the WebLOAD engine should ignore (not fetch). ValueExtraction Extract a value from a string using a prefix and suffix. DefineConcurrent Define a starting point after which the WebLOAD engine collects all Post and Get HTTP requests, but does not execute them, until an Execute Concurrent function is run. ExecuteConcurrent Defines a starting point after which the WebLOAD engine stops collecting and begins executing all the Post and Get HTTP requests that were defined since the last Define Concurrent function, concurrently (using multithreading)."},{"location":"recorder-user-guide/appendix_a/#begin-and-end-transaction","title":"Begin and End Transaction","text":"<p>In addition to the automatic transactions provided by WebLOAD, you can use the WebLOAD Recorder GUI to easily add named transactions to the script to measure the performance of logical actions in your script, such as a Login process. By inserting named transactions into your script, you can take a series of simple actions, define them as a transaction, and set success or failure criteria for the transaction. Each transaction can be a simple action, such as a query, or a complex action that may include several steps.</p> <p>To measure transactions, you must mark the beginning and end of the transaction in your script. During runtime, WebLOAD measures the time it takes to complete the transaction and reports the results in the WebLOAD Integrated reports, Statistics reports, and Data Drilling report.</p> <p>Note: You can add an unlimited number of transactions into your script, each with a different name.</p> <p>To mark the beginning of a transaction:</p> <ol> <li>Drag the Begin Transaction  icon from the Load toolbox into the Script Tree, directly above the first action you want to include in the transaction.</li> </ol> <p>The Begin Transaction dialog box opens.</p> <p></p> <ol> <li> <p>Enter a logical name for the transaction; for example, Login.</p> </li> <li> <p>Click OK.</p> </li> <li> <p>The Begin Transaction item appears in the Script Tree and the JavaScript code is added to the script. To see the new JavaScript code, view the script in JavaScript Editing mode.</p> </li> </ol> <p>To mark the end of a transaction:</p> <ol> <li>Drag the End Transaction  icon from the Load toolbox into the Script Tree, directly after the last action you want included in the script.</li> </ol> <p>The End Transaction dialog box opens.</p> <p></p> <ol> <li> <p>Select the transaction to end from the Select Opened Transaction drop-down list.</p> </li> <li> <p>Select a return value for the transaction from Select Return Value drop-down list.</p> </li> </ol> <p>You can select from the return values provided, or select Custom Function to create your own verification function to call when the transaction is complete.</p> <p>For information on creating custom functions, see the WebLOAD Scripting Guide.</p> <ol> <li>To set WebLOAD to save the results of all transaction instances, successes and failures, for later analysis with Data Drilling, select true in the Save transaction information for Data Drilling field. Select false (default) to save only results of failed transaction instances that triggered some sort of error flag.</li> <li>Optionally, enter a text string to specify a possible reason for a transaction failure within your transaction verification function in the Failure Reason field. This reason will also appear in the Statistics Report.</li> <li>Click OK.</li> </ol> <p>The End Transaction item appears in the Script Tree and the JavaScript code is added to the script. To see the new JavaScript code, view the script in JavaScript Editing mode.</p>"},{"location":"recorder-user-guide/appendix_a/#set-and-send-timer","title":"Set and Send Timer","text":"<p>Timers let you time any operation or group of operations in a script and send the time statistics to the WebLOAD Console. For example, you can add a timer to measure the amount of time needed to complete a series of user activities on a single Web page.</p> <p>You can add timers to a script directly through the WebLOAD Recorder.</p> <p>Note: When you set a timer, it is automatically zeroed.</p> <p>To mark the beginning of a timer:</p> <ol> <li>Drag the Set Timer  icon from the Load toolbox into the Script Tree directly before the first action you want to include in the timed task.</li> </ol> <p>The Set Timer dialog box opens.</p> <p></p> <ol> <li> <p>Type a name for the timer in the Enter a timer name field.</p> </li> <li> <p>Click OK.</p> </li> <li> <p>The Set Timer item appears in the Script Tree and the JavaScript code is added to the script. To see the new JavaScript code, view the script in JavaScript Editing mode.</p> </li> </ol> <p>To mark the end of the timer:</p> <ol> <li>Drag the Send Timer  icon from the Load toolbox into the Script Tree directly after the last action you want included in the timed task.</li> </ol> <p>The Send Timer dialog box opens.</p> <p></p> <p>Figure 144: Send Timer Dialog Box</p> <ol> <li>From the Select Timer drop-down list, to select the timer to end.</li> <li>Click OK.</li> </ol> <p>The Send Timer item appears in the Script Tree and the JavaScript code is added to the script. To see the new JavaScript code, view the script in JavaScript Editing mode.</p>"},{"location":"recorder-user-guide/appendix_a/#synchronization-point","title":"Synchronization Point","text":"<p>During a test session, WebLOAD simulates the random nature of the real world, where even with hundreds or thousands of Web site hits, users do not all necessarily execute the same commands at precisely the same instant. However, for testing purposes, you may wish to create peak server loads that stress your system to the limit by deliberately forcing multiple Virtual Clients to perform key tasks and execute a given command at precisely the same moment in real time.</p> <p>WebLOAD provides Synchronization Points to coordinate the actions of multiple Virtual Clients. A Synchronization Point is a meeting place where Virtual Clients wait before continuing with a script. When one Virtual Client arrives at a Synchronization Point, WebLOAD holds the Client at that point until all the other Virtual Clients arrive. When all the Virtual Clients have arrived, they are all released at once to perform the next action in the script simultaneously.</p> <p>For example, suppose that you want to simulate 500 users, all trying to access a form on the same Web page simultaneously. To maximize the impact of this test situation, all 500 Virtual Clients must access the form at exactly the same time. Add a Synchronization Point before the form entry node to ensure that all the Virtual Clients log in simultaneously.</p> <p>WebLOAD Recorder enables you to define the meeting place where all Virtual Clients wait. You can also optionally set the timeout value, the number of milliseconds that WebLOAD will wait for all of the Virtual Clients to arrive at the Synchronization Point. The timeout is a safety mechanism that prevents an infinite wait if any of the Virtual Clients does not arrive at the Synchronization Point for any reason. Once the timeout period expires, WebLOAD releases the rest of the Virtual Clients. Setting a timeout</p> <p>value is important to ensure that the test session will not \u2018hang\u2019 indefinitely in case of error.</p> <p>To insert a Synchronization Point:</p> <ol> <li>Drag the Synchronization Point  icon from the Load toolbox into the Script Tree directly before the action you want all Virtual Clients to perform simultaneously. The Synchronization Point dialog box opens.</li> </ol> <p></p> <ol> <li> <p>In the Timeout Value field, enter or select a timeout value for the Synchronization Point. The default value is 1000 milliseconds.</p> </li> <li> <p>The Synchronization Point item appears in the Script Tree and the JavaScript code is added to the script. To see the new JavaScript code, view the script in JavaScript Editing mode.</p> </li> </ol> <p>During a test session, the SynchronizationPoint() function returns a value to WebLOAD. This value indicates whether the function was successful or not. All failures are logged and displayed in the WebLOAD and Console Log windows, similar to any other WebLOAD test failure.</p> <p>Synchronization Point function calls may return one of the following return values:</p> <ul> <li>WLSuccess\u2014synchronization succeeded. All Virtual Clients arrived at the Synchronization Point and were released together.</li> <li>WLLoadChanged\u2014synchronization failed. A change in the load size was detected while Virtual Clients were being held at the Synchronization Point. All Virtual clients were released.</li> <li>WLTimeout\u2014synchronization failed. The timeout expired before all Virtual Clients arrived at the Synchronization Point. All Virtual Clients were released.</li> <li>WLError\u2014synchronization failed. Invalid timeout value. All Virtual Clients were released.</li> </ul> <p>For a complete explanation and example of the SynchronizationPoint function syntax, see WebLOAD Actions, Objects, and Functions, in the WebLOAD JavaScript Reference Guide.</p>"},{"location":"recorder-user-guide/appendix_a/#send-measurement","title":"Send Measurement","text":"<p>WebLOAD Recorder enables you to insert Send Measurement actions into your script to create a new measurement name and assign a value to the measurement. During runtime the measurement is displayed in the WebLOAD statistics report.</p> <p>To create and set the value for a measurement:</p> <ol> <li>Drag the Send Measurement  icon from the Load toolbox into the Script Tree at the desired location.</li> </ol> <p>The Send Measurement dialog box opens.</p> <p></p> <ol> <li> <p>Type or select a name for the measurement in the Select measurement name field.</p> </li> <li> <p>Type or select a value for the measurement in the Set measurement value field.</p> </li> <li> <p>Click OK.</p> </li> </ol> <p>The Send Measurement item appears in the Script Tree and the JavaScript code is added to the script. To see the new JavaScript code, view the script in JavaScript Editing mode.</p>"},{"location":"recorder-user-guide/appendix_a/#url-screening","title":"URL Screening","text":"<p>WebLOAD Recorder enables you to add URL screening to a script to define the URLs that the WebLOAD protocol engine should ignore during runtime. The ability to ignore links on the page being tested is a useful feature. For example, many Web sites include links to external sites. If these sites are not relevant to the testing requirements, they should be ignored. Other links may be to advertisement sites that charge a fee every time the link is accessed. Hitting these links during a typical load test that may run hundreds or thousands of iterations would be a tremendous waste, so these links should also be ignored.</p> <p>To add URL screening to a script:</p> <ol> <li>Drag the URL Screening  icon, from the Load toolbox, into the Script Tree at the desired location. </li> </ol> <p>The URL Screening Building Block parameters dialog box opens.</p> <p></p> <ol> <li> <p>Enter the URLs to ignore, separated by commas, in the Value field.</p> </li> <li> <p>Click OK.</p> </li> </ol> <p>The URL Screening Building Block is added to the Script Tree. The JavaScript code, including the InitAgenda() function, is added to the script. To see the new JavaScript code, view the script in JavaScript Editing mode.</p> <p>Note: Fields that were not assigned a value in the dialog box are left as empty fields in the script code.</p>"},{"location":"recorder-user-guide/appendix_a/#value-extraction","title":"Value Extraction","text":"<p>WebLOAD Recorder enables you to add value extraction to a script to define the parameters for the extractValue JavaScript function.</p> <p>To add value extraction to a script:</p> <ol> <li>Drag the Value Extraction  icon, from the Load toolbox, into the Script Tree at the desired location. </li> </ol> <p>The Value Extraction Building Block parameters dialog box opens.</p> <p></p> <ol> <li> <p>In the Prefix field, enter a prefix.</p> </li> <li> <p>In the Suffix field, enter a suffix.</p> </li> <li> <p>In the Str field, enter the string that will be searched.</p> </li> <li> <p>In the retVarName, enter the variable name that will be generated to the script.</p> </li> <li> <p>Click OK.</p> </li> </ol> <p>The Value Extraction Building Block is added to the Script Tree. The JavaScript code is added to the script. To see the new JavaScript code, view the script in JavaScript Editing mode.</p> <p>Note: Fields that were not assigned a value in the dialog box are left as empty fields in the script code.</p>"},{"location":"recorder-user-guide/appendix_a/#define-concurrent","title":"Define Concurrent","text":"<p>WebLOAD Recorder enables you to collect Post and Get HTTP requests and simultaneously execute them by two or more threads, as defined in the MultiThread Virtual Clients number. This is configured in the Browser Parameters tab in WebLOAD Console\u2019s Script Options dialog box.</p> <p>Note: WebLOAD Recorder does not perform the Post and Get HTTP requests concurrently.</p> <p>To simultaneously execute Post and Get HTTP requests, you must define where in the script to begin collecting the requests and where to stop collecting and begin executing them. The HTTP requests are collected until the engine encounters an Execute Concurrent function in the script. For more information about the Execute Concurrent Building Block, see Execute Concurrent (on page 246).</p> <p>These Post and Get HTTP requests are saved in a file which you can access at any time. For more information, refer to the WebLOAD JavaScript Reference.</p> <p>To start collecting HTTP requests in a script:</p> <ul> <li>Drag the Define Concurrent   icon from the Load toolbox into the Script Tree at the desired location.</li> </ul> <p>The Define Concurrent Building Block is added to the Script Tree. The JavaScript code is added to the script. To see the new JavaScript code, view the script in JavaScript Editing mode.</p>"},{"location":"recorder-user-guide/appendix_a/#execute-concurrent","title":"Execute Concurrent","text":"<p>WebLOAD Recorder enables you to simultaneously execute all the Post and Get HTTP requests that were defined since the last Define Concurrent function by two or more threads, as defined in the MultiThread Virtual Clients number. This is configured in the Browser Parameters tab in WebLOAD Console\u2019s Script Options dialog box.</p> <p>Note: This function can only be inserted in your script after a Define Concurrent function. For more information about the Define Concurrent function, see *Define Concurrent* (on page 246).</p> <p>When the engine encounters the Execute Concurrent function, it stops collecting the HTTP requests in the script and starts their execution.</p> <p>To start concurrently executing HTTP requests in a script:</p> <ul> <li>Drag the Execute Concurrent  icon from the Load toolbox into the Script Tree at the desired location.</li> </ul> <p>The Execute Concurrent Building Block is added to the Script Tree. The JavaScript code is added to the script. To see the new JavaScript code, view the script in JavaScript Editing mode.</p>"},{"location":"recorder-user-guide/appendix_a/#the-webload-recorder-internet-protocols-toolbox","title":"The WebLOAD Recorder Internet Protocols Toolbox","text":"<p>Use the WebLOAD Recorder Internet Protocols Building Blocks to simply and easily add Internet Protocols functionality to your test session script without having to write numerous lines of code.</p> <p>To add Internet Protocols Building Blocks to a test script directly through the WebLOAD Recorder GUI:</p> <ul> <li>Drag the selected Internet Protocols icon from the Internet Protocols toolbox and drop it into the Script Tree at the appropriate point.</li> </ul> <p>WebLOAD Recorder automatically adds the appropriate JavaScript code to your test session script.</p> <p>WebLOAD Recorder provides full support for secure sites that utilize the SSL security protocol. The same FTP, POP, and SMTP functionality that is available for standard- security sites is also provided for sites that utilize the SSL security protocol. WebLOAD Recorder SSL protocol support is virtually transparent for the web site tester. Simply choose the appropriate Building Block, such as FTP-Connect, for example. Activate the SSL Protocol feature by setting the Boolean SSLFlag property to true. Complete the rest of the Building Block properties as described for standard Building Block use.</p> <p>Note: The Internet Protocols Building Blocks displayed in the Internet Protocols toolbox correspond to only a small part of the WebLOAD Recorder Internet Protocols function set. These Building Blocks are provided for the most commonly used Internet Protocols activities. For a description of the complete set of Internet Protocols functions supported by WebLOAD Recorder, see the WebLOAD Internet Protocols Reference in the WebLOAD JavaScript Reference Guide.</p> <p>Each Internet Protocols icon opens a different dialog box. Enter the required values in the Value field. Explanations are provided at the bottom of the dialog box for each parameter as it is selected in the dialog box.</p> <p>Note: Values that must be enclosed within quotation marks are indicated in the Value column by sets of quotation marks. Type the field value within the quotation marks that automatically appear in the input-text box that pops-up when the value field is selected. Fields that were not assigned a value in the dialog box are left as empty fields in the script code.</p> <p>Once you have finished defining the new Internet Protocols activity, the new action is reflected in the Script Tree. An Internet Protocols icon is added to the Script Tree for each Internet Protocols activity defined. WebLOAD Recorder automatically adds the corresponding JavaScript code to your test session script.</p> <p>To see the complete sequence of JavaScript code for all the Internet Protocols Building Blocks that have been added to the Script Tree, click the Agenda root node in the Script Tree.</p> <p>Note: The JavaScript code for each of the Internet Protocols Building Blocks can be found in the Internet Protocols library files, part of the Include directory under the WebLOAD installation directory. Each protocol has its own library file. For example, the SMTP functions refer to the wlSMTP.js file. </p>"},{"location":"recorder-user-guide/appendix_a/#ftp","title":"FTP","text":"<p>Dragging an FTP icon into your Script Tree opens an FTP Building Block parameters dialog box.</p> <p>FTP toolbox items include:</p> <ul> <li>FTP-Connect: Open an FTP connection.</li> <li>FTP-Upload: Designate a file to be uploaded to a remote host.</li> <li>FTP-Download: Designate a file to be downloaded from a remote host.</li> <li>FTP-Disconnect: Disconnect from a remote host.</li> </ul>"},{"location":"recorder-user-guide/appendix_a/#ftp-connect","title":"FTP-Connect","text":"<p>Use the FTP-Connect Building Block to open an FTP connection.</p> <p>To enter a value:</p> <ol> <li>Drag the FTP-Connect icon from the Internet Protocols toolbox into the Script Tree at the desired location. The FTP-Connect Building Block parameters dialog box opens.</li> </ol> <p></p> <ol> <li>Click the name of an input field in the left-hand column to see an explanation of that field in the comment area at the bottom of the dialog box.</li> </ol> <p>For example, in the preceding figure, the comment area explains that the UserName field is used to define the user ID to be used when logging in to the specified FTP host. WebLOAD Recorder automatically sends the user-specified name and password to the FTP host when connecting.</p> <ol> <li> <p>Enter the appropriate field value into the Value column next to the field name, as described Table 41.</p> </li> <li> <p>Click OK.</p> </li> </ol> <p>The FTP-Connect Building Block is added to the Script Tree. The JavaScript code, including the InitAgenda()and InitClient() functions, is added to the script. To see the new JavaScript code, view the script in JavaScript Editing mode.</p> <p>In the script, the InitAgenda()function notes that the connection will be utilizing SSL security, and therefore includes the WebLOAD Recorder FTP/SSL library file. The InitClient() function includes a command to define a separate FTP/SSL object for each client. Within the main body of the script, an FTP connection is opened using the connection name, user name, and password specified by the user.</p> <p>The fields in the FTP-Connect Building Block parameters dialog box are described in the following table:</p> Field Name Description FTP Host <p>Specify the name of the FTP host connection.</p><p>Type the FTP Host name into the input-text window that appears when you click the small arrow to the right of the Value input area for this field.</p><p>The FTP host is identified either through a DNS number or a full name string. A host name string must be enclosed within quotation marks.</p> User Name <p>Specify a user ID for the FTP connection.</p><p>Type the user ID into the input-text window that appears when you click the small arrow to the right of the Value input area for this field.</p><p>The user name must be enclosed within quotation marks.</p> Password <p>Specify a password for authentication during the FTP connection.</p><p>Type the password into the input-text window that appears when you click the small arrow to the right of the Value input area for this field.</p><p>The password must be enclosed within quotation marks.</p> Secure FTP (FTPS) Select the appropriate Boolean value to indicate whether the site being accessed utilizes the SSL security protocol."},{"location":"recorder-user-guide/appendix_a/#ftp-upload","title":"FTP-Upload","text":"<p>Use the FTP-Upload Building Block to designate a file to be uploaded to a remote host.</p> <p>To enter a value:</p> <ol> <li>Drag the FTP-Upload icon from the Internet Protocols toolbox into the Script Tree at the desired location. </li> </ol> <p>The FTP-Upload Building Block parameters dialog box opens.</p> <p></p> <ol> <li> <p>Click the name of an input field in the left-hand column to see an explanation of that field in the comment area at the bottom of the dialog box.</p> </li> <li> <p>For example, in the preceding figure, the comment area explains that the Uploaded File field is used to define the name and location for the file to be saved on the specified FTP host.</p> </li> <li> <p>Enter the appropriate field value into the Value column next to the field name, as described Table 42. </p> </li> </ol> <p>Note: If the script will be running for multiple clients or over multiple rounds, use global variables to specify a unique file name for each client and/or round, to avoid file access conflicts and to make it easier to work with and analyze the files after the test is completed. For example:</p> <p><code>\u201ck:\\Ftp\\files\\inputFiles\\text\\_upload\\_\u201d+ ThreadNum + RoundNum + \u201c.txt\u201d</code></p> <ol> <li>Click OK.</li> </ol> <p>The FTP-Upload Building Block is added to the Script Tree and the JavaScript code is added to the script. To see the new JavaScript code, view the script in JavaScript Editing mode.</p> <p>Note: The WebLOAD Recorder global variables ThreadNum and RoundNum are used to differentiate between the files uploaded by different clients during different test iterations.</p> <p>The fields in the FTP-Upload Building Block parameters dialog box are described in the following table:</p> Field Name Description File for upload <p>Specify the name of the file to be uploaded to the specified FTP host.</p><p>Select the appropriate file from the Browser window that appears when you click the ![ref9] button to the right of the Value input area for this field.</p> Uploaded file <p>Specify a name and location to save the uploaded file.</p><p>Type the uploaded file name into the input-text window that appears when you click the small arrow to the right of the Value input area for this field.</p><p>The file name must be enclosed within quotation marks.</p>"},{"location":"recorder-user-guide/appendix_a/#ftp-download","title":"FTP-Download","text":"<p>Use the FTP-Download Building Block to designate a file to be downloaded from a remote host.</p> <p>To enter a value:</p> <ol> <li>Drag the FTP-Download icon from the Internet Protocols toolbox into the Script Tree at the desired location. </li> </ol> <p>The FTP-Download Building Block parameters dialog box opens.</p> <p></p> <ol> <li> <p>Click the name of an input field in the left-hand column to see an explanation of that field in the comment area at the bottom of the dialog box.</p> </li> <li> <p>For example, in the preceding figure, the comment area explains that the File for Download field is used to define the name of the file to be downloaded from the specified FTP host.</p> </li> <li> <p>Enter the appropriate field value into the Value column next to the field name, as described Table 43.</p> </li> </ol> <p>Note: If the script will be running for multiple clients or over multiple rounds, use global variables to specify a unique file name for each client and/or round, to avoid file access conflicts and to make it easier to work with and analyze the files after the test is completed. For example:</p> <p><code>\u201ck:\\Ftp\\files\\inputFiles\\text\\_upload\\_\u201d + ThreadNum + RoundNum + \u201c.txt\u201d</code></p> <ol> <li>Click OK.</li> </ol> <p>The FTP-Download Building Block is added to the Script Tree and the JavaScript code is added to the script. To see the new JavaScript code, view the script in JavaScript Editing mode.</p> <p>In the script, the name of the file to be downloaded is passed as a parameter to the ftp.Download() function. The file name to which the downloaded file should be saved is assigned as a value to the ftp.Outfile variable.</p> <p>The fields in the FTP-Download Building Block parameters dialog box are described in the following table:</p> Field Name Description File for download <p>Specify the name of the file to be downloaded from the specified FTP host.</p><p>Type the name of the file to be downloaded into the input-text window that appears when you click the small arrow to the right of the Value input area for this field. The file name must be enclosed within quotation marks.</p> Downloaded file <p>Specify a name and location to save the downloaded file.</p><p>Type the name and location in which to save the downloaded file into the input-text window that appears when you click the small arrow to the right of the Value input area for this field. The file name must be enclosed within quotation marks.</p>"},{"location":"recorder-user-guide/appendix_a/#ftp-disconnect","title":"FTP-Disconnect","text":"<p>Use the FTP-Disconnect Building Block to disconnect from a remote host.</p> <p>To enter a value:</p> <ul> <li>Drag the FTP-Disconnect icon from the Internet Protocols toolbox into the Script Tree at the desired location.</li> </ul> <p>The FTP-Disconnect Building Block is added to the Script Tree. The JavaScript code, including the TerminateClient() function, is added to the script. To see the new JavaScript code, view the script in JavaScript Editing mode.</p>"},{"location":"recorder-user-guide/appendix_a/#smtp-send-message","title":"SMTP-Send Message","text":"<p>Use the SMTP-Send Message Building Block to define an email to be sent.</p> <p>To enter a value:</p> <ol> <li>Drag the SMTP-Send Message icon from the Internet Protocols toolbox into the Script Tree at the desired location.</li> </ol> <p>The SMTP-Send Message Building Block parameters dialog box opens.</p> <p></p> <ol> <li> <p>Click the name of an input field in the left-hand column to see an explanation of that field in the comment area at the bottom of the dialog box.</p> </li> <li> <p>For example, in the preceding figure, the comment area explains that the Server Name Host designates the name of the host to which the email should be sent.</p> </li> <li> <p>Enter the appropriate field value into the Value column next to the field name, as described Table 44.</p> </li> <li> <p>Click OK.</p> </li> </ol> <p>The SMTP-Send Message Building Block is added to the Script Tree. The JavaScript code, including the InitAgenda(), InitClient(), and TerminateClient() functions, is added to the script. To see the new JavaScript code, view the script in JavaScript Editing mode.</p> <p>In the script, the specified SMTP connection is opened, an email message constructed from the user input is sent out, and the SMTP connection is closed.</p> <p>The fields in the SMTP-Send Message Building Block parameters dialog box are described in the following table:</p> Field Name Description Server Name Host <p>Specify the name of the host to which the email should be sent.</p><p>Type the host name into the input-text window that appears when you click the small arrow to the right of the Value input area for this field.</p><p>The file name must be enclosed within quotation marks.</p><p></p><p>![ref10]  Note: The host can be designated either with a full text name or DNS number.</p> User name <p>Specify a user name with which to login to the mail server.</p><p>Type the user ID into the input-text window that appears when you click the small arrow to the right of the Value input area for this field.</p><p>The user name must be enclosed within quotation marks.</p> Password <p>Specify a password with which to login to the mail server.</p><p>Type the password into the input-text window that appears when you click the small arrow to the right of the Value input area for this field.</p><p>The password must be enclosed within quotation marks.</p> Type <p>Select which type to use:</p><p>- SMTP</p><p>- ESMTP (SMTP extensions \u2013 supports graphics and other attachments.)</p> From <p>Specify the name of the person sending the email.</p><p>Type the sender\u2019s name into the input-text window that appears when you click the small arrow to the right of the Value input area for this field.</p><p>The name must be enclosed within quotation marks.</p> To <p>Specify the name of the person to whom the email should be sent.</p><p>Type the receiver\u2019s name into the input-text window that appears when you click the small arrow to the right of the Value input area for this field.</p><p>The name must be enclosed within quotation marks.</p> Subject <p>Enter a short text line that appears as the subject line for the email being sent.</p><p>Type the subject line into the input-text window that appears when you click the small arrow to the right of the Value input area for this field.</p><p>The subject text must be enclosed within quotation marks.</p> Message <p>Enter the message text of the email being sent.</p><p>Type the message text into the input-text window that appears when you click the small arrow to the right of the Value input area for this field.</p><p>The message text must be enclosed within quotation marks.</p> Add attachment <p>Specify the name of a file to be attached to this email.</p><p>Select the appropriate file from the Browser window that appears when you click the ![ref9] button to the right of the Value input area for this field.</p> Secure SMTP (SMTPS) Select the appropriate Boolean value to indicate whether the site being accessed utilizes the SSL security protocol."},{"location":"recorder-user-guide/appendix_a/#pop","title":"POP","text":"<p>Dragging a POP icon into your Script Tree opens a POP Building Block parameters dialog box.</p> <p>POP toolbox items include:</p> <ul> <li>POP-Retrieve: Retrieve all waiting messages.</li> <li>POP-Delete: Delete all messages from a POP mailbox.</li> </ul>"},{"location":"recorder-user-guide/appendix_a/#pop-retrieve","title":"POP-Retrieve","text":"<p>Use the POP-Retrieve Building Block to retrieve all waiting messages, optionally together with a full set of header properties for each message.</p> <p>To enter a value:</p> <ol> <li>Drag the POP-Retrieve icon from the Internet Protocols toolbox into the Script Tree at the desired location.</li> </ol> <p>The POP-Retrieve Building Block parameters dialog box opens.</p> <p></p> <ol> <li> <p>Click the name of an input field in the left-hand column to see an explanation of that field in the comment area at the bottom of the dialog box.</p> </li> <li> <p>For example, in the preceding figure, the comment area explains that the Message Properties field is a toggle that defines whether or not all the message properties should be retrieved.</p> </li> <li> <p>Enter the appropriate field value into the Value column next to the field name, as described Table 45.</p> </li> <li> <p>Click OK.</p> </li> </ol> <p>The POP-Retrieve Building Block is added to the Script Tree. The JavaScript code, including the InitAgenda(), InitClient(), and TerminateClient() functions, is added to the script. To see the new JavaScript code, view the script in JavaScript Editing mode.</p> <p>In the script, the POP connection is opened using the connection name, user name, and password specified by the user. The waiting messages are retrieved and the message property values are saved to a local structure.</p> <p>The fields in the POP-Retrieve Building Block parameters dialog box are described in the following table:</p> Field Name Description Server Name Host <p>Specify the name of the POP host connection.</p><p>Type the POP Host name into the input-text window that appears when you click the small arrow to the right of the Value input area for this field.</p><p>The host name must be enclosed within quotation marks.</p> User Name <p>Specify a user ID for the POP connection.</p><p>Type the user ID into the input-text window that appears when you click the small arrow to the right of the Value input area for this field. The user name must be enclosed within quotation marks.</p> Password <p>Specify a password for authentication during the POP connection.</p><p>Type the password into the input-text window that appears when you click the small arrow to the right of the Value input area for this field.</p><p>The password must be enclosed within quotation marks.</p> Message properties <p>A toggle that defines whether or not all the message properties should be retrieved.</p><p>Toggle Message Properties on or off depending on whether you select Yes or No from the list displayed in the drop-down list box that appears when you click the small arrow to the right of the Value input area for this field.</p> Secure POP (POPS) Select the appropriate Boolean value to indicate whether the site being accessed utilizes the SSL security protocol."},{"location":"recorder-user-guide/appendix_a/#pop-delete","title":"POP-Delete","text":"<p>Use the POP-Delete Building Block to delete all messages from a POP mailbox.</p> <p>To enter a value:</p> <ol> <li>Drag the POP-Delete icon from the Internet Protocols toolbox into the Script Tree at the desired location. </li> </ol> <p>The POP-Delete Building Block parameters dialog box opens.</p> <p></p> <ol> <li>Click the name of an input field in the left-hand column to see an explanation of that field in the comment area at the bottom of the dialog box. </li> </ol> <p>For example, in the preceding figure, the comment area explains that the Server Name Host field is used to define the name of the mail server. WebLOAD Recorder automatically sends the user-specified name and password to the server when connecting.</p> <ol> <li> <p>Enter the appropriate field value into the Value column next to the field name, as described in Table 46.</p> </li> <li> <p>Click OK.</p> </li> </ol> <p>The POP-Delete Building Block is added to the Script Tree. The JavaScript code, including the InitAgenda(), InitClient(), and TerminateClient() functions, is added to the script. To see the new JavaScript code, view the script in JavaScript Editing mode.</p> <p>In the script, a POP connection is opened using the host name, user name, and password specified by the user. The code then loops through all messages on the server, deleting each message and printing a note to the user identifying the message that was just deleted. When all messages are deleted, the connection is closed.</p> <p>The fields in the POP-Delete Building Block parameters dialog box are described in the following table:</p> Field Name Description Server Name Host <p>Specify the name of the POP server connection.</p><p>Type the POP host name into the input-text window that appears when you click the small arrow to the right of the Value input area for this field. The host name must be enclosed within quotation marks.</p> User Name <p>Specify a user ID for the POP connection.</p><p>Type the user ID into the input-text window that appears when you click the small arrow to the right of the Value input area for this field. The user name must be enclosed within quotation marks.</p> Password <p>Specify a password for authentication during the POP connection.</p><p>Type the password into the input-text window that appears when you click the small arrow to the right of the Value input area for this field. The password must be enclosed within quotation marks.</p> Secure POP (POPS) Select the appropriate Boolean value to indicate whether the site being accessed utilizes the SSL security protocol."},{"location":"recorder-user-guide/appendix_a/#imap","title":"IMAP","text":"<p>Dragging an IMAP icon into your Script Tree opens an IMAP Building Block parameters dialog box.</p> <p>IMAP toolbox items include:</p> <ul> <li>IMAP-Connect: Start an IMAP session.</li> <li>IMAP-Retrieve: Retrieve all waiting messages.</li> <li>IMAP-Delete: Delete messages from an IMAP mailbox.</li> <li>IMAP-CreateMailbox: Create a new IMAP mailbox.</li> <li>IMAP-ListMailboxes: Generate a complete list of all IMAP mailboxes accessed through the current IMAP server.</li> <li>IMAP-DeleteMailbox: Delete an IMAP mailbox.</li> <li>IMAP-RenameMailbox: Rename an IMAP mailbox.</li> <li>IMAP-SubscribeMailbox: Subscribe to an IMAP mailbox.</li> <li>IMAP-UnsubscribeMailbox: Unsubscribe from an IMAP mailbox.</li> <li> <p>IMAP-ListSubscribeMailboxes: Generate a complete list of all subscribed IMAP mailboxes accessed through the current IMAP server</p> </li> <li> <p>IMAP-Search: Search for a specific email item within an IMAP mailbox.</p> </li> </ul>"},{"location":"recorder-user-guide/appendix_a/#imap-connect","title":"IMAP-Connect","text":"<p>Use the IMAP-Connect Building Block to start an IMAP session. When you connect, you are connecting to a specific mailbox within the host, as specified by your User ID.</p> <p>To enter a value:</p> <ol> <li>Drag the IMAP-Connect icon from the Internet Protocols toolbox into the Script Tree at the desired location.</li> </ol> <p>The IMAP-Connect Building Block parameters dialog box opens.</p> <p></p> <ol> <li>Click the name of an input field in the left-hand column to see an explanation of that field in the comment area at the bottom of the dialog box.</li> </ol> <p>For example, in the preceding figure, the comment area explains that the IMAP Server field is used to define the IMAP Server Name or IP to be used when logging in to the specified IMAP server. WebLOAD Recorder automatically sends the user- specified name and password to the IMAP server when connecting.</p> <ol> <li> <p>Enter the appropriate field value into the Value column next to the field name, as described Table 47.</p> </li> <li> <p>Click OK.</p> </li> </ol> <p>The IMAP-Connect Building Block is added to the Script Tree. The JavaScript code, including the InitAgenda(), InitClient(), and TerminateClient() functions, is added to the script. To see the new JavaScript code, view the script in JavaScript Editing mode.</p> <p>In the script, an IMAP connection is opened using the connection name, local host name, user name, and password specified by the user.</p> <p>The fields in the IMAP-Connect Building Block parameters dialog box are described in the following table:</p> Field Name Description User Name <p>Specify an NT user ID for the IMAP connection.</p><p>Type the user ID into the input-text window that appears when you click the small arrow to the right of the Value input area for this field. The user name must be enclosed within quotation marks.</p> Password <p>Specify an NT password for authentication during the IMAP connection.</p><p>Type the password into the input-text window that appears when you click the small arrow to the right of the Value input area for this field. The password must be enclosed within quotation marks.</p> IMAP Server <p>Specify the IMAP server name or IP number.</p><p>Type the IMAP server name into the input-text window that appears when you click the small arrow to the right of the Value input area for this field. The IMAP host is identified either through an IP number or a full name string. A server name string must be enclosed within quotation marks.</p> LocalHost <p>Specify the name of the local host.</p><p>Type the local host name into the input-text window that appears when you click the small arrow to the right of the Value input area for this field. The local host is identified either through a DNS number or a full name string. A host name string must be enclosed within quotation marks.</p>"},{"location":"recorder-user-guide/appendix_a/#imap-retrieve","title":"IMAP-Retrieve","text":"<p>Use the IMAP-Retrieve Building Block to retrieve all waiting messages, optionally together with a full set of header properties for each message.</p> <p>To enter a value:</p> <ol> <li>Drag the IMAP-Retrieve icon from the Internet Protocols toolbox into the Script Tree at the desired location.</li> </ol> <p>The IMAP-Retrieve Building Block parameters dialog box opens.</p> <p></p> <ol> <li>Click the name of an input field in the left-hand column to see an explanation of that field in the comment area at the bottom of the dialog box.</li> </ol> <p>For example, in the preceding figure, the comment area explains that the Items List field contains a list of mailbox items to be retrieved.</p> <ol> <li> <p>Enter the appropriate field value into the Value column next to the field name, as described Table 48.</p> </li> <li> <p>Click OK.</p> </li> </ol> <p>The IMAP-Retrieve Building Block is added to the Script Tree and the JavaScript code is added to the script. To see the new JavaScript code, view the script in JavaScript Editing mode.</p> <p>In the script, the specified message is retrieved from the specified mailbox and the message property values are saved to a local structure. A comment embedded in the code describes the message attributes stored in the imap JavaScript object.</p> <p>The fields in the IMAP-Retrieve Building Block parameters dialog box are described in the following table:</p> Field Name Description MailBox <p>Specify the name of the mailbox from which messages should be retrieved.</p><p>Type the mailbox name into the input-text window that appears when you click the small arrow to the right of the Value input area for this field. The mailbox name must be enclosed within quotation marks.</p> Items List <p>Specify the messages to be retrieved.</p><p>Type the message numbers into the input-text window that appears when you click the small arrow to the right of the Value input area for this field. The message numbers must be enclosed within quotation marks. You may specify a single message number, or you may specify a range, separated by a colon. For example, 1:10 returns messages one through ten. If you do not specify a message ID, the next message is returned.</p>"},{"location":"recorder-user-guide/appendix_a/#imap-delete","title":"IMAP-Delete","text":"<p>Use the IMAP-Delete Building Block to delete messages from an IMAP mailbox.</p> <p>To enter a value:</p> <ol> <li>Drag the IMAP-Delete icon from the Internet Protocols toolbox into the Script Tree at the desired location.</li> </ol> <p>The IMAP-Delete Building Block parameters dialog box opens.</p> <p></p> <ol> <li>Click the name of an input field in the left-hand column to see an explanation of that field in the comment area at the bottom of the dialog box.</li> </ol> <p>For example, in the preceding figure, the comment area explains that the Items List field contains a list of mailbox items to be deleted.</p> <ol> <li> <p>Enter the appropriate field value into the Value column next to the field name, as described Table 49.</p> </li> <li> <p>Click OK.</p> </li> <li> <p>The IMAP-Delete Building Block is added to the Script Tree and the JavaScript code is added to the script. To see the new JavaScript code, view the script in JavaScript Editing mode.</p> </li> </ol> <p>In the script, the messages specified by the user are deleted from the mail box specified by the user.</p> <p>The fields in the IMAP-Delete Building Block parameters dialog box are described in the following table:</p> Field Name Description MailBox <p>Specify the name of the mailbox from which messages should be deleted.</p><p>Type the mailbox name into the input-text window that appears when you click the small arrow to the right of the Value input area for this field. The mailbox name must be enclosed within quotation marks.</p> Items List <p>Specify the messages to be deleted.</p><p>Type the message numbers into the input-text window that appears when you click the small arrow to the right of the Value input area for this field. The message numbers must be enclosed within quotation marks. You may specify a single message number, or you may specify a range, separated by a colon. For example, 1:10 deletes messages one through ten. If you do not specify a message ID, the current message is deleted.</p>"},{"location":"recorder-user-guide/appendix_a/#imap-createmailbox","title":"IMAP-CreateMailbox","text":"<p>Use the IMAP-CreateMailbox Building Block to create a new IMAP mailbox.</p> <p>To enter a value:</p> <ol> <li>Drag the IMAP-CreateMailbox icon from the Internet Protocols toolbox into the Script Tree at the desired location.</li> </ol> <p>The IMAP-CreateMailbox Building Block parameters dialog box opens.</p> <p></p> <ol> <li>Click the name of an input field in the left-hand column to see an explanation of that field in the comment area at the bottom of the dialog box.</li> </ol> <p>For example, in the preceding figure, the comment area explains that the MailBox field contains the name of the mail box to be created.</p> <ol> <li> <p>Enter the appropriate field value into the Value column next to the field name, as described Table 50.</p> </li> <li> <p>Click OK.</p> </li> </ol> <p>The IMAP-CreateMailbox Building Block is added to the Script Tree and the JavaScript code is added to the script. To see the new JavaScript code, view the script in JavaScript Editing mode.</p> <p>In the script, a new mailbox is created using the name specified by the user.</p> <p>The field in the IMAP-CreateMailbox Building Block parameters dialog box is described in the following table:</p> Field Name Description MailBox <p>Specify the name of the mailbox to be created.</p><p>Type the mailbox name into the input-text window that appears when you click the small arrow to the right of the Value input area for this field. The mailbox name must be enclosed within quotation marks.</p>"},{"location":"recorder-user-guide/appendix_a/#imap-listmailboxes","title":"IMAP-ListMailboxes","text":"<p>Use the IMAP-ListMailboxes Building Block to generate a complete list of all IMAP mailboxes accessed through the current IMAP server.</p> <p>To generate the list of IMAP mailboxes:</p> <ul> <li>Drag the IMAP-ListMailboxes icon from the Internet Protocols toolbox into the Script Tree at the desired location.</li> </ul> <p>The IMAP-ListMailboxes Building Block is added to the Script Tree and the JavaScript code is added to the script. To see the new JavaScript code, view the script in JavaScript Editing mode.</p>"},{"location":"recorder-user-guide/appendix_a/#imap-deletemailbox","title":"IMAP-DeleteMailbox","text":"<p>Use the IMAP-DeleteMailbox Building Block to delete an IMAP mailbox.</p> <p>To delete an IMAP mailbox:</p> <ol> <li>Drag the IMAP-DeleteMailbox icon from the Internet Protocols toolbox into the Script Tree at the desired location.</li> </ol> <p>The IMAP-DeleteMailbox Building Block parameters dialog box opens.</p> <p></p> <ol> <li>Click the name of an input field in the left-hand column to see an explanation of that field in the comment area at the bottom of the dialog box.</li> </ol> <p>For example, in the preceding figure, the comment area explains that the MailBox field contains the name of the mail box to be deleted.</p> <ol> <li> <p>Enter the appropriate field value into the Value column next to the field name, as described Table 51.</p> </li> <li> <p>Click OK.</p> </li> </ol> <p>The IMAP-DeleteMailbox Building Block is added to the Script Tree and the JavaScript code is added to the script. To see the new JavaScript code, view the script in JavaScript Editing mode.</p> <p>In the script, the mailbox specified by the user is deleted.</p> <p>The field in the IMAP-DeleteMailbox Building Block parameters dialog box is described in the following table:</p> Field Name Description MailBox <p>Specify the name of the mailbox to be deleted.</p><p>Type the mailbox name into the input-text window that appears when you click the small arrow to the right of the Value input area for this field. The mailbox name must be enclosed within quotation marks.</p>"},{"location":"recorder-user-guide/appendix_a/#imap-renamemailbox","title":"IMAP-RenameMailbox","text":"<p>Use the IMAP-RenameMailbox Building Block to rename an IMAP mailbox.</p> <p>To rename an IMAP mailbox:</p> <ol> <li>Drag the IMAP-RenameMailbox icon from the Internet Protocols toolbox into the Script Tree at the desired location.</li> </ol> <p>The IMAP-RenameMailbox Building Block parameters dialog box opens.</p> <p></p> <ol> <li> <p>Click the name of an input field in the left-hand column to see an explanation of that field in the comment area at the bottom of the dialog box.</p> </li> <li> <p>For example, in the preceding figure, the comment area contains the name of the old mail box.</p> </li> <li> <p>Enter the appropriate field value into the Value column next to the field name, as described in Table 52.</p> </li> <li> <p>Click OK.</p> </li> </ol> <p>The IMAP-RenameMailbox Building Block is added to the Script Tree and the JavaScript code is added to the script. To see the new JavaScript code, view the script in JavaScript Editing mode. In the script, the mailbox is renamed using the name specified by the user.</p> <p>The fields in the IMAP-RenameMailbox Building Block parameters dialog box are described in the following table:</p> Field Name Description Old MailBox name <p>Specify the name of the mailbox to be renamed.</p><p>Type the old mailbox name into the input-text window that appears when you click the small arrow to the right of the Value input area for this field. The mailbox name must be enclosed within quotation marks.</p> New Mailbox name <p>Specify the new name of the mailbox.</p><p>Type the new mailbox name into the input-text window that appears when you click the small arrow to the right of the Value input area for this field. The mailbox name must be enclosed within quotation marks.</p>"},{"location":"recorder-user-guide/appendix_a/#imap-subscribemailbox","title":"IMAP-SubscribeMailbox","text":"<p>Use the IMAP-SubscribeMailbox Building Block to subscribe to an IMAP mailbox.</p> <p>To subscribe to an IMAP mailbox:</p> <ol> <li>Drag the IMAP-SubscribeMailbox icon from the Internet Protocols toolbox into the Script Tree at the desired location.</li> </ol> <p>The IMAP-SubscribeMailbox Building Block parameters dialog box opens.</p> <p></p> <ol> <li>Click the name of an input field in the left-hand column to see an explanation of that field in the comment area at the bottom of the dialog box.</li> </ol> <p>For example, in the preceding figure, the comment area contains the name of the mail box.</p> <ol> <li> <p>Enter the appropriate field value into the Value column next to the field name, as described Table 53.</p> </li> <li> <p>Click OK.</p> </li> </ol> <p>The IMAP-SubscribeMailbox Building Block is added to the Script Tree and the JavaScript code is added to the script. To see the new JavaScript code, view the script in JavaScript Editing mode.</p> <p>In the script, the mailbox is renamed using the name specified by the user.</p> <p>The field in the IMAP-SubscribeMailbox Building Block parameters dialog box is described in the following table:</p> Field Name Description MailBox name <p>Specify the name of the mailbox to which to subscribe.</p><p>Type the mailbox name into the input-text window that appears when you click the small arrow to the right of the Value input area for this field. The mailbox name must be enclosed within quotation marks.</p>"},{"location":"recorder-user-guide/appendix_a/#imap-unsubscribemailbox","title":"IMAP-UnsubscribeMailbox","text":"<p>Use the IMAP-UnsubscribeMailbox Building Block to unsubscribe from an IMAP mailbox.</p> <p>To unsubscribe from an IMAP mailbox:</p> <ol> <li>Drag the IMAP-UnsubscribeMailbox icon from the Internet Protocols toolbox into the Script Tree at the desired location.</li> </ol> <p>The IMAP-UnsubscribeMailbox Building Block parameters dialog box opens.</p> <p></p> <ol> <li> <p>Click the name of an input field in the left-hand column to see an explanation of that field in the comment area at the bottom of the dialog box.</p> </li> <li> <p>For example, in the preceding figure, the comment area contains the name of the mail box.</p> </li> <li> <p>Enter the appropriate field value into the Value column next to the field name, as described Table 53.</p> </li> <li> <p>Click OK.</p> </li> <li> <p>The IMAP-UnsubscribeMailbox Building Block is added to the Script Tree and the JavaScript code is added to the script. To see the new JavaScript code, view the script in JavaScript Editing mode.</p> </li> </ol> <p>In the script, the mailbox is renamed using the name specified by the user.</p> <p>The field in the IMAP-UnsubscribeMailbox Building Block parameters dialog box is described in the following table:</p> Field Name Description MailBox name <p>Specify the name of the mailbox from which to unsubscribe.</p><p>Type the mailbox name into the input-text window that appears when you click the small arrow to the right of the Value input area for this field. The mailbox name must be enclosed within quotation marks.</p>"},{"location":"recorder-user-guide/appendix_a/#imap-listsubscribedmailboxes","title":"IMAP-ListSubscribedMailboxes","text":"<p>Use the IMAP-ListSubscribedMailboxes Building Block to generate a complete list of all subscribed IMAP mailboxes.</p> <p>To generate the list of subscribed IMAP mailboxes:</p> <ul> <li>Drag the IMAP-ListSubscribedMailboxes icon from the Internet Protocols toolbox into the Script Tree at the desired location.</li> </ul> <p>The IMAP-ListSubscribedMailboxes Building Block is added to the Script Tree and the JavaScript code is added to the script. To see the new JavaScript code, view the script in JavaScript Editing mode.</p>"},{"location":"recorder-user-guide/appendix_a/#imap-search","title":"IMAP-Search","text":"<p>Use the IMAP-Search Building Block to search for a specific email item within an IMAP mailbox.</p> <p>To search for a specific email item in an IMAP mailbox:</p> <ol> <li>Drag the IMAP-Search icon from the Internet Protocols toolbox into the Script Tree at the desired location.</li> </ol> <p>The IMAP-Search Building Block parameters dialog box opens.</p> <p></p> <ol> <li>Click the name of an input field in the left-hand column to see an explanation of that field in the comment area at the bottom of the dialog box. </li> </ol> <p>For example, in the preceding figure, the comment area explains that the MailBox field contains the name of the mail box to be searched.</p> <ol> <li> <p>Enter the appropriate field value into the Value column next to the field name, as described Table 55.</p> </li> <li> <p>Click OK.</p> </li> </ol> <p>The IMAP-Search Building Block is added to the Script Tree and the JavaScript code is added to the script. To see the new JavaScript code, view the script in JavaScript Editing mode.</p> <p>In the script, the mailbox specified by the user is searched for all mail items containing the string \u201ctimesheet\u201d.</p> <p>The fields in the IMAP-Search Building Block parameters dialog box are described in the following table:</p> Field  Name Description MailBox Specify the name of the mailbox to be searched.  Type the mailbox name into  the input-text window that appears when you click the small arrow to the  right of the Value input area for this field. The mailbox name must be  enclosed within quotation marks. Search String Specify the search criteria for the current mailbox search. Valid  search criteria include: ALL - All messages in the  mailbox - this is the default initial key for AND-ing. ANSWERED - Messages with the \\Answered flag set. BCC - Messages that  contain the specified string in the envelope structure\u2019s BCC field. BEFORE - Messages whose internal date is  earlier than the specified date. BODY - Messages that contain the specified  string in the body of the message. CC - Messages that contain  the specified string in the envelope structure\u2019s CC field. DELETED - Messages with the \\Deleted flag  set. DRAFT - Messages with the \\Draft flag set. FLAGGED - Messages with the \\Flagged flag set. FROM - Messages that  contain the specified string in the envelope structure\u2019s FROM field. HEADER - Messages that  have a header with the specified field-name and that contains the specified  string in the field-body. KEYWORD - Messages with the specified  keyword set. LARGER - Messages with a size larger than the  specified number of octets. NEW Messages that have the  \\Recent flag set but not the \\Seen flag. This is functionally equivalent to  \u201c(RECENT UNSEEN)\u201d. NOT - Messages that do not match the specified  search key. OLD - Messages that do not have the \\Recent flag  set. This is  functionally equivalent to \u201cNOT RECENT\u201d (as  opposed to \u201cNOT NEW\u201d). ON - Messages whose internal date is within  the specified date. OR - Messages that match either search key. RECENT - Messages that have the \\Recent flag set. SEEN - Messages that have the \\Seen flag  set. SENTBEFORE - Messages  whose Date: header is earlier than the specified date. SENTON - Messages whose Date: header is within the  specified date. SENTSINCE - Messages whose Date: header is  within or later than the specified date. SINCE - Messages whose internal date is  within or later than the specified date. SMALLER - Messages with an RFC822.SIZE  smaller than the specified number of octets. SUBJECT - Messages that  contain the specified string in the envelope structure\u2019s SUBJECT field. TEXT - Messages that contain the specified string  in the header or body of the message. TO - Messages that contain the specified  string in the envelope structure\u2019s TO field. UID - Messages with unique  identifiers corresponding to the specified unique identifier set. UNANSWERED - Messages that do not have the  \\Answered flag set. UNDELETED - Messages that do not have the  \\Deleted flag set. UNDRAFT - Messages that do not have the  \\Draft flag set. UNFLAGGED - Messages that do not have the  \\Flagged flag set. UNKEYWORD - Messages that do not have the  specified keyword set. UNSEEN - Messages that do not have the  \\Seen flag set. This Building Block  returns a string containing the IDs of messages that meet the search criteria  if successful, an exception if unsuccessful."},{"location":"recorder-user-guide/appendix_a/#nntp","title":"NNTP","text":"<p>Dragging an NNTP icon into your Script Tree opens an NNTP Building Block parameters dialog box.</p> <p>NNTP toolbox items include:</p> <ul> <li>NNTP-Connect: Start an NNTP session.</li> <li>NNTP-GetArticle: Retrieve articles from the specified news group from the NNTP server.</li> <li>NNTP-GetArticleCount: Retrieve the number of articles in the specified news group from the NNTP server.</li> <li>NNTP-PostArticle: Post articles to the specified news group.</li> </ul>"},{"location":"recorder-user-guide/appendix_a/#nntp-connect","title":"NNTP-Connect","text":"<p>Use the NNTP-Connect Building Block to start an NNTP session. When you connect, you are connecting to a specific.</p> <p>To enter a value:</p> <ol> <li>Drag the NNTP-Connect icon from the Internet Protocols toolbox into the Script Tree at the desired location.</li> </ol> <p>The NNTP-Connect Building Block parameters dialog box opens.</p> <p></p> <ol> <li>Click the name of an input field in the left-hand column to see an explanation of that field in the comment area at the bottom of the dialog box.</li> </ol> <p>For example, in the preceding figure, the comment area explains that the Server Host Name field is used to define the NNTP Server Name or IP to be used when logging in to the specified NNTP server. WebLOAD Recorder automatically sends the user-specified name and password to the NNTP server when connecting.</p> <ol> <li> <p>Enter the appropriate field value into the Value column next to the field name, as described Table 56.</p> </li> <li> <p>Click OK.</p> </li> </ol> <p>The NNTP-Connect Building Block is added to the Script Tree. The JavaScript code, including the InitAgenda(), InitClient(), and TerminateClient() functions, is added to the script. To see the new JavaScript code, view the script in JavaScript Editing mode.</p> <p>In the script, an NNTP connection is opened using the server name, user name, and password specified by the user.</p> <p>The fields in the NNTP-Connect Building Block parameters dialog box are described in the following table:</p> Field Name Description Server Host Name <p>Specify the NNTP server name or IP number.</p><p>Type the NNTP server name into the input-text window that appears when you click the small arrow to the right of the Value input area for this field. The NNTP host is identified either through an IP number or a full name string. A server name string must be enclosed within quotation marks.</p> User Name <p>Specify an NT user ID for the NNTP connection.</p><p>Type the user ID into the input-text window that appears when you click the small arrow to the right of the Value input area for this field. The user name must be enclosed within quotation marks.</p> Password <p>Specify an NT password for authentication during the NNTP connection.</p><p>Type the password into the input-text window that appears when you click the small arrow to the right of the Value input area for this field. The password must be enclosed within quotation marks.</p>"},{"location":"recorder-user-guide/appendix_a/#nntp-getarticle","title":"NNTP-GetArticle","text":"<p>Use the NNTP-GetArticle Building Block to retrieve articles from the specified news group from the NNTP server.</p> <p>To enter a value:</p> <ol> <li>Drag the NNTP-GetArticle icon from the Internet Protocols toolbox into the Script Tree at the desired location.</li> </ol> <p>The NNTP-GetArticle Building Block parameters dialog box opens.</p> <p></p> <ol> <li> <p>Click the name of an input field in the left-hand column to see an explanation of that field in the comment area at the bottom of the dialog box.</p> </li> <li> <p>For example, in the preceding figure, the comment area explains that the Article ID field contains the ID number of the news article to be retrieved.</p> </li> <li> <p>Enter the appropriate field value into the Value column next to the field name, as described Table 57.</p> </li> <li> <p>Click OK.</p> </li> </ol> <p>The NNTP-GetArticle Building Block is added to the Script Tree and the JavaScript code is added to the script. To see the new JavaScript code, view the script in JavaScript Editing mode.</p> <p>In the script, the specified article is retrieved from the specified news group.</p> <p>The fields in the NNTP-GetArticle Building Block parameters dialog box are described in the following table:</p> Field Name Description Group Name <p>Specify the name of the news group from which articles should be retrieved.</p><p>Type the news group name into the input-text window that appears when you click the small arrow to the right of the Value input area for this field. The news group name must be enclosed within quotation marks.</p> Article ID <p>Specify the ID number of the article to be retrieved.</p><p>Type the ID number into the input-text window that appears when you click the small arrow to the right of the Value input area for this field.</p>"},{"location":"recorder-user-guide/appendix_a/#nntp-getarticlecount","title":"NNTP-GetArticleCount","text":"<p>Use the NNTP-GetArticleCount Building Block to retrieve the number of articles in the specified news group from the NNTP server.</p> <p>To enter a value:</p> <ol> <li>Drag the NNTP-GetArticleCount icon from the Internet Protocols toolbox into the Script Tree at the desired location.</li> </ol> <p>The NNTP-GetArticleCount Building Block parameters dialog box opens.</p> <p></p> <ol> <li>Click the name of an input field in the left-hand column to see an explanation of that field in the comment area at the bottom of the dialog box.</li> </ol> <p>For example, in the preceding figure, the comment area explains that the Group Name field contains the name of the news group whose articles are to be counted.</p> <ol> <li> <p>Enter the appropriate field value into the Value column next to the field name, as described Table 58.</p> </li> <li> <p>Click OK.</p> </li> </ol> <p>The NNTP-GetArticleCount Building Block is added to the Script Tree and the JavaScript code is added to the script. To see the new JavaScript code, view the script in JavaScript Editing mode. In the script, the number of articles appearing in the specified news group is returned.</p> <p>The field in the NNTP-GetArticleCount Building Block parameters dialog box is described in the following table:</p> Field Name Description Group Name <p>Specify the name of the news group from which articles should be counted.</p><p>Type the news group name into the input-text window that appears when you click the small arrow to the right of the Value input area for this field. The news group name must be enclosed within quotation marks.</p>"},{"location":"recorder-user-guide/appendix_a/#nntp-postarticle","title":"NNTP-PostArticle","text":"<p>Use the NNTP-PostArticle Building Block to post articles to the specified news group.</p> <p>To enter a value:</p> <ol> <li>Drag the NNTP-PostArticle icon from the Internet Protocols toolbox into the Script Tree at the desired location.</li> </ol> <p>The NNTP-PostArticle Building Block parameters dialog box opens.</p> <p></p> <ol> <li>Click the name of an input field in the left-hand column to see an explanation of that field in the comment area at the bottom of the dialog box.</li> </ol> <p>For example, in the preceding figure, the comment area explains that the From field contains the name of the person sending the news article to be posted on the news group.</p> <ol> <li> <p>Enter the appropriate field value into the Value column next to the field name, as described Table 59.</p> </li> <li> <p>Click OK.</p> </li> </ol> <p>The NNTP-PostArticle Building Block is added to the Script Tree and the JavaScript code is added to the script. To see the new JavaScript code, view the script in JavaScript Editing mode.</p> <p>In the script, the article text is posted to the specified news group. The fields in the NNTP-PostArticle Building Block parameters dialog box are described in the following table:</p> Field Name Description From <p>Specify the name of the person sending the email.</p><p>Type the sender\u2019s name into the input-text window that appears when you click the small arrow to the right of the Value input area for this field.</p><p>The name must be enclosed within quotation marks.</p> Subject <p>Enter a short text line that appears as the subject line for the email being sent.</p><p>Type the subject line into the input-text window that appears when you click the small arrow to the right of the Value input area for this field.</p><p>The subject text must be enclosed within quotation marks.</p> Organization Specify the name of the organization to which the recipient belongs. To <p>Specify the name of the person to whom the email should be sent.</p><p>Type the receiver\u2019s name into the input-text window that appears when you click the small arrow to the right of the Value input area for this field.</p><p>The name must be enclosed within quotation marks.</p> ReplyTo <p>Specify the name of the person to whom the recipient should reply.</p><p>Type the name into the input-text window that appears when you click the small arrow to the right of the Value input area for this field.</p><p>The name must be enclosed within quotation marks.</p> Article Text <p>Enter the message text of the email being sent.</p><p>Type the message text into the input-text window that appears when you click the small arrow to the right of the Value input area for this field.</p><p>The message text must be enclosed within quotation marks.</p>"},{"location":"recorder-user-guide/appendix_a/#tcp","title":"TCP","text":"<p>Dragging a TCP icon into your Script Tree opens a TCP Building Block parameters dialog box.</p> <p>TCP toolbox items include:</p> <ul> <li>TCP-Connect: Open a TCP connection.</li> <li>TCP-Send: Send a TCP request.</li> <li>TCP-Receive: Return all responses from the TCP host since the last TCP-Send action.</li> <li>TCP-Erase: Clear the contents of the TCP document object.</li> </ul>"},{"location":"recorder-user-guide/appendix_a/#tcp-connect","title":"TCP-Connect","text":"<p>Use the TCP-Connect Building Block to open a TCP connection.</p> <p>To enter a value:</p> <ol> <li>Drag the TCP-Connect icon from the Internet Protocols toolbox into the Script Tree at the desired location.</li> </ol> <p>The TCP-Connect Building Block parameters dialog box opens.</p> <p></p> <ol> <li>Click the name of an input field in the left-hand column to see an explanation of that field in the comment area at the bottom of the dialog box.</li> </ol> <p>For example, in the preceding figure, the comment area explains that the Connection Timeout field is used to set the amount of time the system will wait for a TCP connection to be established before timing out. Time is defined in milliseconds.</p> <ol> <li> <p>Enter the appropriate field value into the Value column next to the field name, as described Table 60.</p> </li> <li> <p>Click OK.</p> </li> </ol> <p>The TCP-Connect Building Block is added to the Script Tree. The JavaScript code, including the InitAgenda(), InitClient(), and TerminateClient() functions, is added to the script. To see the new JavaScript code, view the script in JavaScript Editing mode.</p> <p>In the script, a TCP connection is opened using the host names specified by the user.</p> <p>The fields in the TCP-Connect Building Block parameters dialog box are described in the following table:</p> Field Name Description Host Name <p>Specify the name of the TCP destination host.</p><p>Type the TCP Host name into the input-text window that appears when you click the small arrow to the right of the Value input area for this field. The TCP host is identified either through a DNS number or a full name string. A host name string must be enclosed within quotation marks.</p> Port <p>Specify the port to which you are connecting.</p><p>Type the port number into the input field. If you do not specify a value, the default TCP port is used.</p> Connection Timeout <p>Specify the amount of time the system will wait for a TCP connection to be established before timing out.</p><p>Type the timeout value in the input field. Time is defined in milliseconds.</p> Outfile <p>Specify the name of the file into which the TCP output stream should be stored.</p><p>Type the Outfile name into the input-text window that appears when you click the small arrow to the right of the Value input area for this field. The file name string must be enclosed within quotation marks.</p> LocalHost <p>Specify the name of the local host.</p><p>Type the local host name into the input-text window that appears when you click the small arrow to the right of the Value input area for this field. The local host is identified either through a DNS number or a full name string. A host name string must be enclosed within quotation marks.</p>"},{"location":"recorder-user-guide/appendix_a/#tcp-send","title":"TCP-Send","text":"<p>Use the TCP-Send Building Block to send a TCP request.</p> <p>To enter a value:</p> <ol> <li>Drag the TCP-Send icon from the Internet Protocols toolbox into the Script Tree at the desired location.</li> </ol> <p>The TCP-Send Building Block parameters dialog box opens.</p> <p></p> <ol> <li> <p>Click the name of an input field in the left-hand column to see an explanation of that field in the comment area at the bottom of the dialog box.</p> </li> <li> <p>For example, in the preceding figure, the comment area explains that the Send String designates the text string to be sent.</p> </li> <li> <p>Enter the appropriate field value into the Value column next to the field name, as described Table 61.</p> </li> <li> <p>Click OK.</p> </li> </ol> <p>The TCP-Send Building Block is added to the Script Tree and the JavaScript code is added to the script. To see the new JavaScript code, view the script in JavaScript Editing mode.</p> <p>The fields in the TCP-Send Building Block parameters dialog box are described in the following table:</p> Field Name Description Next Prompt <p>Specify a distinctive text string to be identified in the next string received from the host. If used, this string must appear in all communications received from the TCP host.</p><p>Type the prompt string into the input-text window that appears when you click the small arrow to the right of the Value input area for this field. The string must be enclosed within quotation marks.</p> Next Size <p>Specify the size, in bytes, of the expected data. If used, this size specification limits the length of all communications received from the TCP host.</p><p>Type the size value in the input area for this field.</p> Send String <p>Enter the text being sent to the TCP host.</p><p>Type the string text into the input-text window that appears when you click the small arrow to the right of the Value input area for this field. The message text must be enclosed within quotation marks.</p>"},{"location":"recorder-user-guide/appendix_a/#tcp-receive","title":"TCP-Receive","text":"<p>Use the TCP-Receive Building Block to return all responses from the TCP host since the last TCP-Send action. A TCP-Receive action returns to the script when the NextPrompt, NextSize, or Timeout conditions set with a previous TCP-Send action are met. If more than one of these properties is specified, the method returns to the script when the first one is met. Subsequent uses of TCP-Receive find the next instance of the limiting property, returning additional information from the buffer. The content returned depends upon which of the three limiting properties triggered the return.</p> <p>To enter a value:</p> <ul> <li>Drag the TCP-Receive icon from the Internet Protocols toolbox into the Script Tree at the desired location.</li> </ul> <p>The TCP-Receive Building Block is added to the Script Tree and the JavaScript code is added to the script. To see the new JavaScript code, view the script in JavaScript Editing mode.</p>"},{"location":"recorder-user-guide/appendix_a/#tcp-erase","title":"TCP-Erase","text":"<p>Use the TCP-Erase Building Block to clear the contents of the TCP document object.</p> <p>To enter a value:</p> <ul> <li>Drag the TCP-Erase icon from the Internet Protocols toolbox into the Script Tree at the desired location.</li> </ul> <p>The TCP-Erase Building Block is added to the Script Tree and the JavaScript code is added to the script. To see the new JavaScript code, view the script in JavaScript Editing mode.</p>"},{"location":"recorder-user-guide/appendix_a/#telnet","title":"TELNET","text":"<p>Dragging a TELNET icon into your Script Tree opens a TELNET Building Block parameters dialog box.</p> <p>TELNET toolbox items include:</p> <ul> <li>TELNET-Connect: Open a TELNET connection.</li> <li>TELNET-Receive: Receive a TELNET communication.</li> <li>TELNET-Send: Send a TELNET communication.</li> <li>TELNET-Erase: Clear the contents of the TELNET document object.</li> </ul>"},{"location":"recorder-user-guide/appendix_a/#telnet-connect","title":"TELNET-Connect","text":"<p>Use the TELNET-Connect Building Block to open a TELNET connection.</p> <p>To enter a value:</p> <ol> <li>Drag the TELNET-Connect icon from the Internet Protocols toolbox into the Script Tree at the desired location.</li> </ol> <p>The TELNET-Connect Building Block parameters dialog box opens.</p> <p></p> <ol> <li> <p>Click the name of an input field in the left-hand column to see an explanation of that field in the comment area at the bottom of the dialog box.</p> </li> <li> <p>For example, in the preceding figure, the comment area explains that the Local Host field is used to define the name of the local host for this TELNET session.</p> </li> <li> <p>Enter the appropriate field value into the Value column next to the field name, as described Table 62.</p> </li> <li> <p>Click OK.</p> </li> </ol> <p>The TELNET-Connect Building Block is added to the Script Tree. The JavaScript code, including the InitAgenda(), InitClient(), and TerminateClient() functions, is added to the script. To see the new JavaScript code, view the script in JavaScript Editing mode.</p> <p>In the script, a TELNET connection is opened using the host names specified by the user.</p> <p>The fields in the TELNET-Connect Building Block parameters dialog box are described in the following table:</p> Field Name Description Host Name <p>Specify the name of the TELNET destination host.</p><p>Type the TELNET Host name into the input-text window that appears when you click the small arrow to the right of the Value input area for this field.</p><p>The TELNET host is identified either through a DNS number or a full name string. A host name string must be enclosed within quotation marks.</p> Connection Timeout <p>Specify the amount of time the system will wait for a TELNET connection to be established before timing out.</p><p>Type the timeout value in the input field. Time is defined in milliseconds.</p> Outfile <p>Specify the name of the file into which the TELNET output stream should be stored.</p><p>Type the Outfile name into the input-text window that appears when you click the small arrow to the right of the Value input area for this field. The file name string must be enclosed within quotation marks.</p> LocalHost <p>Specify the name of the local host.</p><p>Type the local host name into the input-text window that appears when you click the small arrow to the right of the Value input area for this field. The local host is identified either through a DNS number or a full name string. A host name string must be enclosed within quotation marks.</p>"},{"location":"recorder-user-guide/appendix_a/#telnet-receive","title":"TELNET-Receive","text":"<p>Use the TELNET-Receive Building Block to receive a TELNET communication.</p> <p>To enter a value:</p> <ol> <li>Drag the TELNET-Receive icon from the Internet Protocols toolbox into the Script Tree at the desired location.</li> </ol> <p>The TELNET-Receive Building Block parameters dialog box opens.</p> <p></p> <ol> <li> <p>Click the name of an input field in the left-hand column to see an explanation of that field in the comment area at the bottom of the dialog box.</p> </li> <li> <p>For example, in the preceding figure, the comment area explains that the NextPrompt String designates the text string that must be found and identified in the next communication received via TELNET.</p> </li> <li> <p>Enter the appropriate field value into the Value column next to the field name, as described Table 63.</p> </li> <li> <p>Click OK.</p> </li> </ol> <p>The TELNET-Receive Building Block is added to the Script Tree and the JavaScript code is added to the script. To see the new JavaScript code, view the script in JavaScript Editing mode.</p> <p>The fields in the TELNET-Receive Building Block parameters dialog box are described in the following table:</p> Field Name Description NextPrompt String <p>Specify a distinctive text string to be identified in the next string received from the host. If used, this string must appear in all communications received from the TELNET host.</p><p>Type the prompt string into the input-text window that appears when you click the small arrow to the right of the Value input area for this field. The string must be enclosed within quotation marks.</p>"},{"location":"recorder-user-guide/appendix_a/#telnet-send","title":"TELNET-Send","text":"<p>Use the TELNET-Send Building Block to send a TELNET communication.</p> <p>To enter a value:</p> <ol> <li>Drag the TELNET-Send icon from the Internet Protocols toolbox into the Script Tree at the desired location.</li> </ol> <p>The TELNET-Send Building Block parameters dialog box opens.</p> <p></p> <ol> <li>Click the name of an input field in the left-hand column to see an explanation of that field in the comment area at the bottom of the dialog box.</li> </ol> <p>For example, in the preceding figure, the comment area explains that the Send String designates the text string to be sent.</p> <ol> <li> <p>Enter the appropriate field value into the Value column next to the field name, as described Table 64.</p> </li> <li> <p>Click OK.</p> </li> </ol> <p>The TELNET-Send Building Block is added to the Script Tree and the JavaScript code is added to the script. To see the new JavaScript code, view the script in JavaScript Editing mode.</p> <p>The field in the TELNET-Send Building Block parameters dialog box is described in the following table:</p> Field Name Description Send String <p>Enter the text being sent to the TELNET host.</p><p>Type the string text into the input-text window that appears when you click the small arrow to the right of the Value input area for this field. The message text must be enclosed within quotation marks.</p>"},{"location":"recorder-user-guide/appendix_a/#telnet-erase","title":"TELNET-Erase","text":"<p>Use the TELNET-Erase Building Block to clear the contents of the TELNET document object.</p> <p>To enter a value:</p> <ul> <li>Drag the TELNET-Erase icon from the Internet Protocols toolbox into the Script Tree at the desired location.</li> </ul> <p>The TELNET-Erase Building Block is added to the Script Tree and the JavaScript code is added to the script. To see the new JavaScript code, view the script in JavaScript Editing mode.</p>"},{"location":"recorder-user-guide/appendix_a/#udp","title":"UDP","text":"<p>Dragging a UDP icon into your Script Tree opens a UDP Building Block parameters dialog box.</p> <p>UDP toolbox items include:</p> <ul> <li>UDP-Bind: Create a connection to a UDP port.</li> <li>UDP-Broadcast: Broadcast data to the local net.</li> <li>UDP-Receive: Return all responses from the host since the last UDP-Send action.</li> <li>UDP-Send: Send a UDP communication.</li> <li>UDP-Erase: Clear the contents of the UDP document object.</li> </ul>"},{"location":"recorder-user-guide/appendix_a/#udp-bind","title":"UDP-Bind","text":"<p>Use the UDP-Bind Building Block to create a connection to a UDP port.</p> <p>To enter a value:</p> <ol> <li>Drag the UDP-Bind icon from the Internet Protocols toolbox into the Script Tree at the desired location.</li> </ol> <p>The UDP-Bind Building Block parameters dialog box opens.</p> <p></p> <ol> <li> <p>Click the name of an input field in the left-hand column to see an explanation of that field in the comment area at the bottom of the dialog box.</p> </li> <li> <p>For example, in the preceding figure, the comment area explains that the InBuffer Size field is used to define the amount of space allocated to the incoming data buffer for this UDP session.</p> </li> <li> <p>Enter the appropriate field value into the Value column next to the field name, as described Table 65.</p> </li> <li> <p>Click OK.</p> </li> </ol> <p>The UDP-Bind Building Block is added to the Script Tree. The JavaScript code, including the InitAgenda(), InitClient(), and TerminateClient() functions, is added to the script. To see the new JavaScript code, view the script in JavaScript Editing mode.</p> <p>In the script, the InitAgenda() function includes commands to include the WebLOAD Recorder JIPP and UDP library files. The InitClient() function includes a command to define a separate UDP object for each client. Within the main body of the script, a UDP connection is opened using the connection parameters specified by the user. The TerminateClient() function automatically closes the connection and deletes all objects created for clients during test sessions.</p> <p>The fields in the UDP-Bind Building Block parameters dialog box are described in the following table:</p> Field Name Description LocalHost <p>Specify the name of the local host.</p><p>Type the local host name into the input-text window that appears when you click the small arrow to the right of the Value input area for this field. The local host is identified either through a DNS number or a full name string. A host name string must be enclosed within quotation marks.</p> Connection Timeout <p>Specify the amount of time the system will wait for a UDP connection to be established before timing out.</p><p>Type the timeout value in the input field. Time is defined in milliseconds.</p> Outfile <p>Specify the name of the file into which the UDP output stream should be stored.</p><p>Type the Outfile name into the input-text window that appears when you click the small arrow to the right of the Value input area for this field. The file name string must be enclosed within quotation marks.</p> Requested Packets <p>Specify the number of requested packets per UDP communication.</p><p>Type the number of requested packets per communication for this session in the Value input area. The default value is 100.</p> InBuffer Size <p>Specify the amount of space allocated to the incoming data buffer for this UDP session.</p><p>Type the input buffer size for this session in the Value input area. The default value is 300.</p> OutBuffer Size <p>Specify the amount of space allocated to the outgoing data buffer for this UDP session.</p><p>Type the output buffer size for this session in the Value input area. The default value is 300.</p> MaxDatagram Size <p>Specify the maximum datagram size, in bytes, for this UDP session.</p><p>Type the maximum datagram size for this session in the Value input area. The default value is 200.</p>"},{"location":"recorder-user-guide/appendix_a/#udp-broadcast","title":"UDP-Broadcast","text":"<p>Use the UDP-Broadcast Building Block to broadcast data to the local net.</p> <p>To enter a value:</p> <ol> <li>Drag the UDP-Broadcast icon from the Internet Protocols toolbox into the Script Tree at the desired location.</li> </ol> <p>The UDP-Broadcast Building Block parameters dialog box opens.</p> <p></p> <ol> <li>Click the name of an input field in the left-hand column to see an explanation of that field in the comment area at the bottom of the dialog box.</li> </ol> <p>For example, in the preceding figure, the comment area explains that the Broadcast String field is used to define the string to be broadcast.</p> <ol> <li> <p>Enter the appropriate field value into the Value column next to the field name, as described Table 66.</p> </li> <li> <p>Click OK.</p> </li> </ol> <p>The UDP-Broadcast Building Block is added to the Script Tree and the JavaScript code is added to the script. To see the new JavaScript code, view the script in JavaScript Editing mode.</p> <p>In the script, the string defined by the user is broadcast via the specified port.</p> <p>The fields in the UDP-Broadcast Building Block parameters dialog box are described in the following table:</p> Field Name Description Number of Responses <p>Specify the number of responses the testing machine waits for before proceeding. Use this property to make sure that all network hosts have responded. To specify an unlimited number of responses, specify a Number of Responses value of zero.</p><p>Type the timeout value in the input field.</p> Port <p>Specify the port to which you are connecting.</p><p>Type the port number into the input field. If you do not specify a value, the default TCP port is used.</p> Broadcast String <p>Enter the text to be broadcast on the net.</p><p>Type the string text into the input-text window that appears when you click the small arrow to the right of the Value input area for this field. The text must be enclosed within quotation marks.</p>"},{"location":"recorder-user-guide/appendix_a/#udp-receive","title":"UDP-Receive","text":"<p>Use the UDP-Receive Building Block to return all responses from the host since the last UDP-Send action. A UDP-Receive action is completed when either the RequestedPackets or Timeout conditions set when the UDP connection was first established is met. Subsequent uses of UDP-Receive find the next instance of the limiting property, returning additional information from the buffer</p> <p>Use the UDP-Send Building Block to send a UDP communication.</p> <p>To enter a value:</p> <ol> <li>Drag the UDP-Send icon from the Internet Protocols toolbox into the Script Tree at the desired location.</li> </ol> <p>The UDP-Send Building Block parameters dialog box opens.</p> <p></p> <ol> <li>Click the name of an input field in the left-hand column to see an explanation of that field in the comment area at the bottom of the dialog box.</li> </ol> <p>For example, in the preceding figure, the comment area explains that the Send String designates the text string to be sent.</p> <ol> <li>Enter the appropriate field value into the Value column next to the field name, as described Table 67.</li> <li>Click OK.</li> </ol> <p>The UDP-Send Building Block is added to the Script Tree and the JavaScript code is added to the script. To see the new JavaScript code, view the script in JavaScript Editing mode.</p> <p>The fields in the UDP-Send Building Block parameters dialog box are described in the following table:</p> Field Name Description Destination Host <p>Specify the name of the destination host.</p><p>Type the destination host name into the input-text window that appears when you click the small arrow to the right of the Value input area for this field. The destination host is identified either through a DNS number or a full name string. A host name string must be enclosed within quotation marks.</p> Port <p>Specify the port to which you are connecting.</p><p>Type the port number into the input field. If you do not specify a value, the default port is used.</p> Send String <p>Enter the text being sent to the specified host.</p><p>Type the string text into the input-text window that appears when you click the small arrow to the right of the Value input area for this field. The message text must be enclosed within quotation marks.</p>"},{"location":"recorder-user-guide/appendix_a/#udp-erase","title":"UDP-Erase","text":"<p>Use the UDP-Erase Building Block to clear the contents of the UDP document object.</p> <p>To enter a value:</p> <ul> <li>Drag the UDP-Erase icon from the Internet Protocols toolbox into the Script Tree at the desired location.</li> </ul> <p>The UDP-Erase Building Block is added to the Script Tree and the JavaScript code is added to the script. To see the new JavaScript code, view the script in JavaScript Editing mode.</p>"},{"location":"recorder-user-guide/appendix_a/#the-webload-recorder-iot-protocols-toolbox","title":"The WebLOAD Recorder IoT Protocols Toolbox","text":"<p>Use the WebLOAD Recorder IoT Protocols Building Blocks to simply and easily add IoT protocols functionality to your test session script without having to write numerous lines of code.</p> <p>To add IoT Protocols Building Blocks to a test script directly through the WebLOAD Recorder GUI:</p> <ul> <li>Drag the selected IoT Protocols icon from the IoT Protocols toolbox and drop it into the Script Tree at the appropriate point.</li> </ul> <p>WebLOAD Recorder automatically adds the appropriate JavaScript code to your test session script.</p> <p>The following are the available IoT Protocols building blocks:</p> <p></p> <p>Each Building Block opens a different dialog box. Enter the required values in the Value field. Explanations are provided at the bottom of the dialog box for each parameter as it is selected in the dialog box.</p> <p>The field descriptions in this section assume a basic familiarity with IoT protocols terminology.</p>"},{"location":"recorder-user-guide/appendix_a/#mqtt-connect","title":"MQTT-Connect","text":"<p>The MQTT-Connect Building Block enables you to connect to the broker (i.e., the MQTT server).</p> <p>To insert an MQTT-Connect Building Block:</p> <ol> <li>Drag the MQTT-Connect icon from the IoT toolbox into the Script Tree at the desired location.</li> </ol> <p>The MQTT-Connect Node Building Block parameters dialog box opens.</p> <p></p> <ol> <li>Edit the dialog box fields according to the following table.</li> </ol> Field Name Description Broker Address The address of the MQTT broker. For example: \u201cmqtt.example.com\u201d Broker Port The MQTT Broker port number. For example: 1883. Client ID The MQTT client ID. In some cases this can be random text, such as \u201crandom123\u201d. User Name The MQTT user name. Password The MQTT Client password. <ol> <li>Click OK.</li> </ol> <p>The MQTT-Connect node is added to the Script Tree.</p>"},{"location":"recorder-user-guide/appendix_a/#mqtt-subscribe","title":"MQTT-Subscribe","text":"<p>The MQTT-Subscribe Building Block enables you to subscribe to a topic.</p> <p>To insert an MQTT-Subscribe Building Block:</p> <ol> <li>Drag the MQTT-Subscribe icon from the IoT toolbox into the Script Tree at the desired location.</li> </ol> <p>The MQTT-Subscribe Node Building Block parameters dialog box opens.</p> <p></p> <ol> <li>Edit the dialog box fields according to the following table.</li> </ol> Field Name Description Topic Name The MQTT topic name. For example: \u201cany topic\\my topic\u201d. <ol> <li>Click OK.</li> </ol> <p>The MQTT-Subscribe node is added to the Script Tree.</p>"},{"location":"recorder-user-guide/appendix_a/#mqtt-send","title":"MQTT-Send","text":"<p>The MQTT-Send Building Block enables you to send MQTT messages.</p> <p>To insert an MQTT-Send Building Block:</p> <ol> <li>Drag the MQTT-Send icon from the IoT toolbox into the Script Tree at the desired location.</li> </ol> <p>The MQTT-Send Node Building Block parameters dialog box opens.</p> <p></p> <ol> <li>Edit the dialog box fields according to the following table.</li> </ol> Field Name Description Topic Name The MQTT topic name. Message The MQTT message to publish. <ol> <li>Click OK.</li> </ol> <p>The MQTT-Send node is added to the Script Tree.</p>"},{"location":"recorder-user-guide/appendix_a/#mqtt-getmessages","title":"MQTT-GetMessages","text":"<p>The MQTT-GetMessages Building Block enables you to get MQTT messages.</p> <p>To insert an MQTT-GetMessages Building Block:</p> <ol> <li>Drag the MQTT-GetMessages icon from the IoT toolbox into the Script Tree at the desired location.</li> </ol> <p>The MQTT-GetMessages Node Building Block parameters dialog box opens.</p> <p></p> <ol> <li>Edit the dialog box fields according to the following table.</li> </ol> Field Name Description Sleep Time The default sleep time. <ol> <li>Click OK.</li> </ol> <p>The MQTT-GetMessages node is added to the Script Tree.</p>"},{"location":"recorder-user-guide/appendix_a/#amqp-connect","title":"AMQP-Connect","text":"<p>The AMQP-Connect Building Block enables you to connect to the broker.</p> <p>To insert an AMQP-Connect Building Block:</p> <ol> <li>Drag the AMQP-Connect icon from the IoT toolbox into the Script Tree at the desired location.</li> </ol> <p>The AMQP-Connect Node Building Block parameters dialog box opens.</p> <p></p> <ol> <li> <p>Edit the dialog box fields according to the following table.</p> </li> <li></li> </ol> Field Name Description Broker Address The address of the AMQP broker. Broker Port The AMQP port number. UserName/VirtualHost The AMQP Client ID. Password The AMQP Client password. <ol> <li>Click OK.</li> </ol> <p>The AMQP-Connect node is added to the Script Tree.</p>"},{"location":"recorder-user-guide/appendix_a/#amqp-send","title":"AMQP-Send","text":"<p>The AMQP-Send Building Block enables you to send AMQP messages.</p> <p>To insert an AMQP-Send Building Block:</p> <ol> <li>Drag the AMQP-Send icon from the IoT toolbox into the Script Tree at the desired location.</li> </ol> <p>The AMQP-Send Node Building Block parameters dialog box opens.</p> <p></p> <ol> <li>Edit the dialog box fields according to the following table.</li> </ol> Field Name Description Topic Name The AMQP topic name. Message The AMQP message to publish. <ol> <li>Click OK.</li> </ol> <p>The AMQP-Send node is added to the Script Tree.</p>"},{"location":"recorder-user-guide/appendix_a/#amqp-getmessages","title":"AMQP-GetMessages","text":"<p>The AMQP-GetMessages Building Block enables you to get AMQP messages.</p> <p>To insert an AMQP-GetMessages Building Block:</p> <ol> <li>Drag the AMQP-GetMessages icon from the IoT toolbox into the Script Tree at the desired location.</li> </ol> <p>The AMQP-GetMessages Node Building Block parameters dialog box opens.</p> <p></p> <ol> <li>Edit the dialog box fields according to the following table.</li> </ol> Field Name Description Topic Name The AMQP Topic name. Sleep Time The sleep time. <ol> <li>Click OK.</li> </ol> <p>The AMQP-GetMessages node is added to the Script Tree.</p>"},{"location":"recorder-user-guide/appendix_a/#the-webload-recorder-database-toolbox","title":"The WebLOAD Recorder Database Toolbox","text":"<p>The WebLOAD Recorder Database Toolbox includes a complete set of database Building Blocks. Use the WebLOAD Recorder database Building Blocks to simply and easily add database activities to your test session script.</p> <p>To add database Building Blocks to a test script directly through WebLOAD Recorder:</p> <ul> <li>Drag the selected database Building Block from the Database toolbox and drop it into the Script Tree at the appropriate point.</li> </ul> <p>The following are the database Building Blocks available in WebLOAD Recorder:</p> <p></p> <p>Each database Building Block opens a different dialog box. Enter the required values in the Value field. Explanations are provided at the bottom of the dialog box for each parameter as it is selected in the dialog box.</p> <p>Note: The values that appear in the Wizard\u2019s Value area are the default values for each field. In most cases, the default value for string variables is an empty string, indicated in the Value area by a set of empty quotation marks. If you are entering your own value for a string field, the new string must also be enclosed within quotation marks. Fields that were not assigned a value in the dialog box are left as empty fields in the script code.</p> <p>Once you have finished defining the new database Building Block, the new activity is reflected in the Script Tree. A database Building Block is added to the Script Tree for each database Building Block defined. WebLOAD Recorder automatically adds the corresponding JavaScript code to your test session script.</p> <p>To see the complete sequence of JavaScript code for all the Database Building Blocks that have been added to the Script Tree, click the Agenda root node in the Script Tree and select the JavaScript View tab.</p> <p>Notes: The JavaScript code for each of the Database Building Blocks can be found in the DBBuildingBlocks.js library file, which is part of the Include directory under the WebLOAD installation directory. The JavaScript code that implements these Database Building Blocks is automatically inserted to the appropriate locations within the script. Code lines may be added to the initialization phase (within the InitAgenda() function), in the main body of the script, or to the termination phase (within the TerminateAgenda() function).</p> <p>The JavaScript code for that object can be edited, as described in *Using the JavaScript Editor* (on page 75).</p> <p>The field descriptions in this section assume a basic familiarity with database terminology. To take full advantage of the Database Building Blocks, testers must understand how to work with ADO objects and have a basic knowledge of SQL command syntax. WebLOAD Recorder automatically inserts into the test session script the appropriate JavaScript code to implement the database commands that the tester specifies. However, it is the tester\u2019s responsibility to specify valid database commands.</p>"},{"location":"recorder-user-guide/appendix_a/#opendb","title":"OpenDB","text":"<p>Use the OpenDB Building Block to open and close a specified database.</p> <p>To enter a value:</p> <ol> <li>Drag the OpenDB icon from the Database toolbox into the Script Tree at the desired location. </li> </ol> <p>The OpenDB Building Block parameters dialog box opens.</p> <p></p> <ol> <li> <p>Click the name of an input field in the left-hand column to see an explanation of that field in the comment area at the bottom of the dialog box.</p> </li> <li> <p>For example, in the preceding figure, the comment area explains that the Database Type field is used to specify the type of database to be opened.</p> </li> <li> <p>Enter the appropriate field value into the Value column next to the field name, as described Table 75.</p> </li> </ol> <p>Note: The Database toolbox is currently available only for database activities through ADO under a Windows operating system.</p> <ol> <li>Click OK.</li> </ol> <p>The OpenDB Building Block is added to the Script Tree. The JavaScript code, including the InitAgenda(), InitClient(), and TerminateClient() functions, is added to the script. To see the new JavaScript code, view the script in JavaScript Editing mode.</p> <p>Note: The OpenDB Building Block automatically adds the JavaScript code required to both open and close the specified database. No \u201cCloseDB\u201d Building Block is necessary.</p> <p>The fields in the OpenDB Building Block parameters dialog box are described in the following table:</p> Field Name Description Database type <p>Specify the type of database to be opened.</p><p>Select the appropriate value from the drop-down list that appears when you click the Value input area for this field.</p><p>The options include MS-Access and SQL Server databases.</p> Server name (SQL Server) <p>Specify the name of the machine where the database is running.</p><p>Type the appropriate server name into the input-text window that appears when you click the small arrow to the right of the Value input area for this field.</p><p>Relevant for SQL Server databases only.</p> Database name (SQL Server) <p>Specify the name of the database on the SQL server.</p><p>Type the appropriate database name into the input-text window that appears when you click the small arrow to the right of the Value input area for this field.</p><p>Relevant for SQL Server databases only.</p> User name (SQL Server) <p>Specify a user ID for authentication against the database.</p><p>Type the user ID into the input-text window that appears when you click the small arrow to the right of the Value input area for this field.</p><p>Relevant for SQL Server databases only.</p> Password (SQL Server) <p>Specify a password for authentication against the database.</p><p>Type the password into the input-text window that appears when you click the small arrow to the right of the Value input area for this field.</p><p>Relevant for SQL Server databases only.</p> File name (MDB File) <p>Specify the full path for an MDB file.</p><p>Select the appropriate file from the Browser window that appears when you click ![ref11] to the right of the Value input area for this field.</p><p>Relevant for MDB databases only.</p> Connection name <p>Specify the name of the connection variable.</p><p>Type the connection name into the input-text window that appears when you click the small arrow to the right of the Value input area for this field. This connection name variable is used throughout the script file to access and work with this database.</p>"},{"location":"recorder-user-guide/appendix_a/#oracle-opendb","title":"Oracle OpenDB","text":"<p>Use the Oracle OpenDB Building Block to open and close an Oracle database.</p> <p>Note: To use the Oracle OpenDB Building Block you must first install the Oracle Client. The Oracle Client must be installed on the same machine as the WebLOAD Recorder.</p> <p>To enter a value:</p> <ol> <li>Drag the Oracle OpenDB icon from the Database toolbox into the Script Tree at the desired location.</li> </ol> <p>The OpenDB Building Block parameters dialog box opens.</p> <p></p> <ol> <li> <p>Click the name of an input field in the left-hand column to see an explanation of that field in the comment area at the bottom of the dialog box.</p> </li> <li> <p>For example, in the preceding figure, the comment area explains that the Database Type field is used to specify the type of database to be opened.</p> </li> <li> <p>Enter the appropriate field value into the Value column next to the field name, as described Table 76.</p> </li> </ol> <p>Note: The Database toolbox is currently available only for database activities through ADO under a Windows operating system.</p> <ol> <li>Click OK.</li> </ol> <p>The Oracle OpenDB Building Block is added to the Script Tree. The JavaScript code, including the InitAgenda(), InitClient(), and TerminateClient() functions, is added to the script. To see the new JavaScript code, view the script in JavaScript Editing mode.</p> <p>Note: The Oracle OpenDB Building Block automatically adds the JavaScript code required to both open and close the specified database. No \u201cCloseDB\u201d Building Block is necessary.</p> <p>The fields in the Oracle OpenDB Building Block parameters dialog box are described in the following table:</p> Field Name Description Database name <p>Specify the name of the database on the Oracle server.</p><p>Type the appropriate database name into the input-text window that appears when you click the small arrow to the right of the Value input area for this field.</p><p>Relevant for Oracle Server databases only.</p> User name <p>Specify a user ID for authentication against the database.</p><p>Type the user ID into the input-text window that appears when you click the small arrow to the right of the Value input area for this field.</p><p>Relevant for Oracle Server databases only.</p> Password <p>Specify a password for authentication against the database.</p><p>Type the password into the input-text window that appears when you click the small arrow to the right of the Value input area for this field.</p><p>Relevant for Oracle Server databases only.</p> Connection name <p>Specify the name of the connection variable.</p><p>Type the connection name into the input-text window that appears when you click the small arrow to the right of the Value input area for this field. This connection name variable is used throughout the script file to access and work with this database.</p>"},{"location":"recorder-user-guide/appendix_a/#mysql-opendb","title":"MySQL OpenDB","text":"<p>Use the MySQL OpenDB Building Block to open and close a MySQL database.</p> <p>Note: Before connecting to the MySQL database, verify that the MySQL connector/ODBC 3.5.1 Driver is installed on your computer. In addition, verify that the MySQL port (3306) is open on the local/remote firewall and that the MySQL database has the right grant permission for the user and IP address from which you are connecting.</p> <p>To enter a value:</p> <ol> <li>Drag the MySQL OpenDB icon from the Database toolbox into the Script Tree at the desired location.</li> </ol> <p>The MySQLOpenDB Building Block parameters dialog box opens.</p> <p></p> <ol> <li> <p>Click the name of an input field in the left-hand column to see an explanation of that field in the comment area at the bottom of the dialog box.</p> </li> <li> <p>Enter the appropriate field value into the Value column next to the field name, as described Table 77.</p> </li> <li> <p>Click OK.</p> </li> </ol> <p>The MySQL Open DB Building Block is added to the Script Tree. The JavaScript code, including the InitAgenda(), InitClient(), and TerminateClient() functions, is added to the script. To see the new JavaScript code, view the script in JavaScript Editing mode.</p> <p>The fields in the MySQL OpenDB Building Block parameters dialog box are described in the following table:</p> Field Name Description Server name (MySQL Server) Specify the name of the MySQL Database server. Database name <p>Specify the name of the database on the MySQL Database server.</p><p>Type the appropriate database name into the input-text window that appears when you click the small arrow to the right of the Value input area for this field.</p> User name <p>Specify a user ID for authentication against the database.</p><p>Type the user ID into the input-text window that appears when you click the small arrow to the right of the Value input area for this field.</p> Password <p>Specify a password for authentication against the database.</p><p>Type the password into the input-text window that appears when you click the small arrow to the right of the Value input area for this field.</p> Connection name The connection to use to open the database."},{"location":"recorder-user-guide/appendix_a/#execute-command","title":"Execute Command","text":"<p>Use the Execute Command Building Block to add simple database commands to your test session script. The database is identified using the Connection Name variable defined through the Oracle OpenDB and OpenDB Building Blocks. The Execute Command Building Block is used for database commands that do not involve getting a return value, such as Insert, Update, and Delete.</p> <p>To enter a value:</p> <ol> <li>Drag the Execute Command icon from the Database toolbox into the Script Tree at the desired location.</li> </ol> <p>The Execute Command Building Block parameters dialog box opens.</p> <p></p> <ol> <li> <p>Click the name of an input field in the left-hand column to see an explanation of that field in the comment area at the bottom of the dialog box.</p> </li> <li> <p>For example, the comment area in the preceding figure explains that the SQL/Command Expression field is used to enter the command to be executed.</p> </li> <li> <p>Enter the appropriate field value into the Value column next to the field name.</p> </li> </ol> <p>For example, to enter a text string, type the complete text into the input-text window that appears when you click the small arrow to the right of the Value input area for the field, as illustrated in the preceding figure.</p> <p></p> <ol> <li>Click OK.</li> </ol> <p>The Execute Command Building Block is added to the Script Tree and the JavaScript code is added to the script. To see the new JavaScript code, view the script in JavaScript Editing mode.</p> <p>Note: The database connection is identified with the variable defined in the OpenDB and Oracle OpenDB Building Block parameters dialog boxes.</p> <p>The fields in the Execute Command Building Block parameters dialog box are described in the following table:</p> Field Name Description Connection name <p>Specify the name of the connection variable.</p><p>Type the connection name into the input-text window that appears when you click the small arrow to the right of the Value input area for this field.</p><p>The connection name variable must match the name of a database connection that was previously opened with the OpenDB Building Block. The same connection name is used throughout the script file to access and work with this database.</p> SQL/command expression <p>Specify the SQL command to be executed.</p><p>Type the complete command into the input-text window that appears when you click the small arrow to the right of the Value input area for this field.</p>"},{"location":"recorder-user-guide/appendix_a/#fetch-data","title":"Fetch Data","text":"<p>Use the Fetch Data Building Block to add database commands that return data values to the script. The database is identified using the Connection Name variable defined through the OpenDB and Oracle OpenDB Building Blocks.</p> <p>To enter a value:</p> <ol> <li>Drag the Fetch Data icon from the Database toolbox into the Script Tree at the desired location.</li> </ol> <p>The Fetch Data Building Block parameters dialog box opens.</p> <p></p> <ol> <li> <p>Click the name of an input field in the left-hand column to see an explanation of that field in the comment area at the bottom of the dialog box.</p> </li> <li> <p>For example, in the preceding figure, the comment area explains that the Cursor Type field is used to define the level of access and visibility requested for this database Building Block.</p> </li> <li> <p>Enter the appropriate field value into the Value column next to the field name, as described Table 79.</p> </li> <li> <p>For example, to select a value from a pre-defined list, select the Cursor Type choice from the list of options displayed in the drop-down list box that appears when you click the small arrow to the right of the Value input area for this field.</p> </li> <li> <p>Click OK.</p> </li> </ol> <p>The Fetch Data Building Block is added to the Script Tree. The JavaScript code, including the TerminateClient() function, is added to the script. To see the new JavaScript code, view the script in JavaScript Editing mode.</p> <p>The fields in the Fetch Data Building Block parameters dialog box are described in the following table:</p> Field Name Description Connection name <p>Specify the name of the connection variable.</p><p>Type the connection name into the input-text window that appears when you click the small arrow to the right of the Value input area for this field.</p><p>The connection name variable must match the name of a database connection that was previously opened with the OpenDB Building Block. The same connection name is used throughout the script file to access and work with this database. By default, the connection name defined in the most recent OpenDB Building Block appears in this field.</p> RecordSet name <p>Specify the name of the database RecordSet variable.</p><p>Type the RecordSet name into the input-text window that appears when you click the small arrow to the right of the Value input area for this field.</p><p>The same RecordSet name is used throughout the script file to access and work with records from this database.</p> SQL expression <p>Specify the SQL command to be executed.</p><p>Type the complete command into the input-text window that appears when you click the small arrow to the right of the Value input area for this field.</p> Cursor type <p>Specify the level of access and visibility requested for this database Building Block.</p><p>Select the Cursor Type choice from the list of options displayed in the drop-down list box that appears when you click the small arrow to the right of the Value input area for this field.</p>"},{"location":"recorder-user-guide/appendix_a/#db-getline","title":"DB GetLine","text":"<p>When running large load tests, the user input is usually read automatically from an input file. To read many rows of input data from a simple text file, WebLOAD uses the GetLine() I/O command. To read large amounts of input data from an MS-Access or SQL Server database, WebLOAD uses the equivalent DB GetLine database Building Block.</p> <p>The DB GetLine Building Block reads complete records, one by one, from a specified database table. The database table is exported into a temporary file, from which the records are read, one record per line.</p> <p>To enter a value:</p> <ol> <li>Drag the DB GetLine icon from the Database toolbox into the Script Tree at the desired location.</li> </ol> <p>The DB GetLine Building Block parameters dialog box opens.</p> <p></p> <ol> <li> <p>Click the name of an input field in the left-hand column to see an explanation of that field in the comment area at the bottom of the dialog box.</p> </li> <li> <p>Enter the appropriate field value into the Value column next to the field name, as described Table 80.</p> </li> <li> <p>Click OK.</p> </li> <li> <p>The DB GetLine Building Block is added to the Script Tree. The JavaScript code, including the InitAgenda() and TerminateClient() functions, is added to the script. To see the new JavaScript code, view the script in JavaScript Editing mode.</p> </li> </ol> <p>The fields in the DB GetLine Building Block parameters dialog box are described in the following table:</p> Field Name Description Database type <p>Specify the type of database to be opened.</p><p>Select the appropriate value from the drop-down list that appears when you click the Value input area for this field.</p><p>The options include MS-Access and SQL Server databases.</p> Server name (SQL Server) <p>Specify the name of the machine where the database is running.</p><p>Type the appropriate server name into the input-text window that appears when you click the small arrow to the right of the Value input area for this field.</p><p>Relevant for SQL Server databases only.</p> Database name (SQL Server) <p>Specify the name of the database on the SQL server.</p><p>Type the appropriate database name into the input-text window that appears when you click the small arrow to the right of the Value input area for this field.</p><p>Relevant for SQL Server databases only.</p> User name (SQL Server) <p>Specify a user ID for authentication against the database.</p><p>Type the user ID into the input-text window that appears when you click the small arrow to the right of the Value input area for this field.</p><p>Relevant for SQL Server databases only.</p> Password (SQL Server) <p>Specify a password for authentication against the database.</p><p>Type the password into the input-text window that appears when you click the small arrow to the right of the Value input area for this field.</p><p>Relevant for SQL Server databases only.</p> File name (MDB File) <p>Specify the full path for an MDB file.</p><p>Select the appropriate file from the Browser window that appears when you click the ![ref11] button to the right of the Value input area for this field.</p><p>Relevant for MDB databases only.</p> SQL expression <p>Specify the SQL command to be executed.</p><p>Type the complete command into the input-text window that appears when you click the small arrow to the right of the Value input area for this field.</p><p></p><p>![ref10]  Note: To take full advantage of the Database Building Blocks, testers must understand how to work with ADO objects and</p><p>have a basic knowledge of SQL command syntax. WebLOAD Recorder automatically inserts into the test session script the appropriate JavaScript code to implement specified database commands. However, it is the tester who must specify the database commands to be inserted. WebLOAD Recorder cannot correct a tester\u2019s SQL syntax errors.</p> Temporary file name <p>Name to use for the temporary file that will contain the output data from the SQL statement.</p><p>This temporary file will serve as an input file to the test session script. Data from this file is read line by line, where each data record is a separate line.</p> The delimiter character between the fields <p>Delimiter character that separates between the fields in each record.</p><p>This delimiter character must not appear as valid character within any of the data fields. The default delimiter character is a pound sign (#).</p><p>Type in a different character as needed.</p> Max number of records Specifies the maximum number of records to read from the database. Number of records per Generator <p>Specifies the maximum number of records to be read from the database by each generator.</p><p>This field is intended for instances of testing by a network of generators. Multiple generators do not merge or share data. Database access is synchronized between generators, similar to WebLOAD Recorder\u2019s synchronization of Global Parameters.</p><p>Each generator is allowed access to a specific number of records, enabling all the generators to work with the database in parallel. Record access is divided evenly between generators. The total number of records allocated to all generators must be equal to the Maximum Number of Records field value. For example, 1000 records may be divided between 10 Load Generators, with 100 records allocated per generator.</p>"},{"location":"recorder-user-guide/appendix_a/#oracle-db-getline","title":"Oracle DB GetLine","text":"<p>When running large load tests, the user input is usually read automatically from an input file. To read many rows of input data from a simple text file, WebLOAD uses the Oracle GetLine() I/O command. To read large amounts of input data from an Oracle database, WebLOAD uses the equivalent Oracle DBGetLine database Building Block.</p> <p>The Oracle DB GetLine Building Block reads complete records, one by one, from a specified database table. The database table is exported into a temporary file, from which the records are read, one record per line.</p> <p>Note: To use the Oracle DB GetLine Building Block you must first install the Oracle Client. The Oracle Client must be installed on the same machine as the WebLOAD Recorder.</p> <p>To enter a value:</p> <ol> <li>Drag the Oracle DB GetLine icon from the Database toolbox into the Script Tree at the desired location.</li> </ol> <p>The Oracle DB GetLine Building Block parameters dialog box opens.</p> <p></p> <ol> <li> <p>Click the name of an input field in the left-hand column to see an explanation of that field in the comment area at the bottom of the dialog box.</p> </li> <li> <p>Enter the appropriate field value into the Value column next to the field name, as described Table 81.</p> </li> <li> <p>Click OK.</p> </li> </ol> <p>The Oracle DB GetLine Building Block is added to the Script Tree. The JavaScript code, including the InitAgenda() and TerminateClient() functions, is added to the script. To see the new JavaScript code, view the script in JavaScript Editing mode.</p> <p>The fields in the Oracle DB GetLine Building Block parameters dialog box are described in the following table:</p> Field Name Description Database name <p>Specify the name of the database on the Oracle Database server.</p><p>Type the appropriate database name into the input-text window that appears when you click the small arrow to the right of the Value input area for this field.</p> User name <p>Specify a user ID for authentication against the database.</p><p>Type the user ID into the input-text window that appears when you click the small arrow to the right of the Value input area for this field.</p> Password <p>Specify a password for authentication against the database.</p><p>Type the password into the input-text window that appears when you click the small arrow to the right of the Value input area for this field.</p> SQL expression <p>Specify the SQL command to be executed. Type the complete command into the input-text window that appears when you click the small arrow to the right of the Value input area for this field.</p><p>Note: To take full advantage of the Database Building Blocks, testers must understand how to work with ADO objects and have a basic knowledge of SQL command syntax. WebLOAD Recorder automatically inserts into the test session script the appropriate JavaScript code to implement specified database commands.</p><p>However, it is the tester who must specify the database commands to be inserted. WebLOAD Recorder cannot correct a tester\u2019s SQL syntax errors.</p> Temporary file name <p>Name to use for the temporary file that will contain the output data from the SQL statement.</p><p>This temporary file will serve as an input file to the test session script. Data from this file is read line by line, where each data record is a separate line.</p> The delimiter character between the fields <p>Delimiter character that separates between the fields in each record.</p><p>This delimiter character must not appear as valid character within any of the data fields. The default delimiter character is a pound sign (#).</p><p>Type in a different character as needed.</p> Max number of records Specifies the maximum number of records to read from the database. Number of records per Generator <p>Specifies the maximum number of records to be read from the database by each generator.</p><p>This field is intended for instances of testing by a network of generators. Multiple generators do not merge or share data. Database access is synchronized between generators, similar to WebLOAD Recorder\u2019s synchronization of Global Parameters.</p><p>Each generator is allowed access to a specific number of records, allowing all the generators to work with the database in parallel. Record access is divided evenly between generators. The total number of records allocated to all generators must be equal to the Maximum Number of Records field value. For example, 1000 records may be divided between 10 Load Generators, with 100 records allocated per generator.</p>"},{"location":"recorder-user-guide/appendix_a/#mysql-db-getline","title":"MySQL DB GetLine","text":"<p>When running large load tests, the user input is usually read automatically from an input file. To read many rows of input data from a simple text file, WebLOAD uses the MySQL GetLine() I/O command. To read large amounts of input data from a MySQL database, WebLOAD uses the equivalent MySQL DBGetLine database Building Block.</p> <p>The MySQL DB GetLine Building Block reads complete records, one by one, from a specified database table. The database table is exported into a temporary file, from which the records are read, one record per line.</p> <p>Note: Before connecting to the MySQL database, verify that the MySQL connector/ODBC 3.5.1 Driver is installed on your computer. In addition, verify that the MySQL port (3306) is open on the local/remote firewall and that the MySQL database has the right grant permission for the user and IP address from which you are connecting.</p> <p>To enter a value:</p> <ol> <li>Drag the MySQL DB GetLine icon from the Database toolbox into the Script Tree at the desired location.</li> </ol> <p>The MySQL DB GetLine Building Block parameters dialog box opens.</p> <p></p> <ol> <li> <p>Click the name of an input field in the left-hand column to see an explanation of that field in the comment area at the bottom of the dialog box.</p> </li> <li> <p>Enter the appropriate field value into the Value column next to the field name, as described Table 82.</p> </li> <li> <p>Click OK.</p> </li> <li> <p>The MySQL DB GetLine Building Block is added to the Script Tree. The JavaScript code, including the InitAgenda(), InitClient(), and TerminateClient() functions, is added to the script. To see the new JavaScript code, view the script in JavaScript Editing mode.</p> </li> </ol> <p>The fields in the MySQL DB GetLine Building Block parameters dialog box are described in the following table:</p> Field Name Description Server name (MySQL Server) Specify the name of the MySQL Database server. Database name <p>Specify the name of the database on the MySQL Database server.</p><p>Type the appropriate database name into the input-text window that appears when you click the small arrow to the right of the Value input area for this field.</p> User name <p>Specify a user ID for authentication against the database.</p><p>Type the user ID into the input-text window that appears when you click the small arrow to the right of the Value input area for this field.</p> Password <p>Specify a password for authentication against the database.</p><p>Type the password into the input-text window that appears when you click the small arrow to the right of the Value input area for this field.</p> SQL expression <p>Specify the SQL command to be executed. Type the complete command into the input-text window that appears when you click the small arrow to the right of the Value input area for this field.</p><p>Note: To take full advantage of the Database Building Blocks, testers must understand how to work with ADO objects and have a basic knowledge of SQL command syntax. WebLOAD Recorder automatically inserts into the test session script the appropriate JavaScript code to implement specified database commands.</p><p>However, it is the tester who must specify the database commands to be inserted. WebLOAD Recorder cannot correct a tester\u2019s SQL syntax errors.</p> Temporary file name <p>Name to use for the temporary file that will contain the output data from the SQL statement.</p><p>This temporary file will serve as an input file to the test session script. Data from this file is read line by line, where each data record is a separate line.</p> The delimiter character between the fields <p>Delimiter character that separates between the fields in each record.</p><p>This delimiter character must not appear as valid character within any of the data fields. The default delimiter character is a pound sign (#).</p><p>Type in a different character as needed.</p> Max number of records Specifies the maximum number of records to read from the database. Number of records per Generator <p>Specifies the maximum number of records to be read from the database by each generator.</p><p>This field is intended for instances of testing by a network of generators. Multiple generators do not merge or share data. Database access is synchronized between generators, similar to WebLOAD Recorder\u2019s synchronization of Global Parameters.</p><p>Each generator is allowed access to a specific number of records, allowing all the generators to work with the database in parallel. Record access is divided evenly between generators. The total number of records allocated to all generators must be equal to the Maximum Number of Records field value. For example, 1000 records may be divided between 10 Load Generators, with 100 records allocated per generator.</p>"},{"location":"recorder-user-guide/appendix_a/#db-load","title":"DB Load","text":"<p>Use the DB Load Building Block to generate a load test for the specified database. The load is generated by executing multiple iterations of database commands read from an input file. Load testing though the WebLOAD testing suite is usually scheduled only after functional testing is completed with WebLOAD Recorder.</p> <p>To enter a value:</p> <ol> <li>Drag the DB Load icon from the Database toolbox into the Script Tree at the desired location.</li> </ol> <p>The DB Load Building Block parameters dialog box opens.</p> <p></p> <ol> <li> <p>Click the name of an input field in the left-hand column to see an explanation of that field in the comment area at the bottom of the dialog box.</p> </li> <li> <p>Enter the appropriate field value into the Value column next to the field name, as described Table 83.</p> </li> <li> <p>Click OK.</p> </li> <li> <p>The DB Load Building Block is added to the Script Tree. The JavaScript code, including the InitAgenda(), InitClient(), and TerminateClient() functions, is added to the script. To see the new JavaScript code, view the script in JavaScript Editing mode.</p> </li> </ol> <p>The fields in the DB Load Building Block parameters dialog box are described in the following table:</p> Field Name Description Database type <p>Specify the type of database to be opened.</p><p>Select the appropriate value from the drop-down list that appears when you click the Value input area for this field.</p><p>The options include MS-Access and SQL Server databases.</p> Server name (SQL Server) <p>Specify the name of the machine where the database is running.</p><p>Type the appropriate server name into the input-text window that appears when you click the small arrow to the right of the Value input area for this field.</p><p>Relevant for SQL Server databases only.</p> Database name (SQL Server) <p>Specify the name of the database on the SQL server.</p><p>Type the appropriate database name into the input-text window that appears when you click the small arrow to the right of the Value input area for this field.</p><p>Relevant for SQL Server databases only.</p> User name (SQL Server) <p>Specify a user ID for authentication against the database.</p><p>Type the user ID into the input-text window that appears when you click the small arrow to the right of the Value input area for this field.</p><p>Relevant for SQL Server databases only.</p> Password (SQL Server) <p>Specify a password for authentication against the database.</p><p>Type the password into the input-text window that appears when you click the small arrow to the right of the Value input area for this field.</p><p>Relevant for SQL Server databases only.</p> File name (MDB file) <p>Specify the full path for an MDB file.</p><p>Select the appropriate file from the Browser window that appears when you click ![ref14] to the right of the Value input area for this field.</p><p>Relevant for MDB databases only.</p> Input File Name <p>Name of the input file that contains a set of SQL commands and transactions to be completed during this load test. Select the appropriate file from the Browser window that appears when you click ![ref15] to the right of the Value input area for this field. Relevant for MDB databases only.</p><p>A typical SQL command input file may look like the following:</p><p>Select1#select * from john_emp</p><p>Select2#select * from john_emp where name=\u2018john\u2019 Select3#select * from john_emp where name=\u2018john\u2019 or</p><p>age &gt; 10</p><p>Update#update john_emp set age = 20 where</p><p>name=\u2018john\u2019</p><p>Insert#insert into john_emp values (99, \u2018zzz\u2019, 2)</p><p>Delete#delete from john_emp where id=99</p><p>The input file consists of rows of SQL commands. As with all load testing, the commands in the input file are executed in sequence, with WebLOAD looping through the file repeatedly until the test is completed. Each SQL command line in the input file is preceded by a name identifying the transaction in which the command will be located. A pound sign (#) separates the transaction name field from the SQL command field in each row.</p><p>Each SQL command is defined as a distinct HTTP transaction, enclosed in the script body within a BeginTransaction()/EndTransaction() set and identified by the transaction name. These transactions, like all transactions, are tracked automatically by the built-in WebLOAD timers and counters. Statistics on the performance of each transaction appear in the WebLOAD output reports, with each transaction identified in the report by name.</p> Delimiter character between fields <p>Delimiter character that separates between the fields in each record.</p><p>This delimiter character must not appear as valid character within any of the data fields. The default delimiter character is a pound sign (#).</p><p>Type in a different character as needed.</p> SQL/command to reset DB <p>Specify an SQL command to be executed at the end of a testing round to reset the database.</p><p>This field is reserved for any \u201ccleanup\u201d commands that may be required in order to continue using the database for multiple iterations.</p><p>Type the complete command into the input-text window that appears when you click the small arrow to the right of the Value input area for this field.</p>"},{"location":"recorder-user-guide/appendix_a/#oracle-db-load","title":"Oracle DB Load","text":"<p>Use the Oracle DB Load Building Block to generate a load test for the specified Oracle database. The load is generated by executing multiple iterations of database commands read from an input file. Load testing though the WebLOAD testing suite is usually scheduled only after functional testing is completed with WebLOAD Recorder.</p> <p>Note: To use the Oracle DB Load Building Block you must first install the Oracle Client. The Oracle Client must be installed on the same machine as the WebLOAD Recorder.</p> <p>To enter a value:</p> <ol> <li>Drag the Oracle DB Load icon from the Database toolbox into the Script Tree at the desired location.</li> </ol> <p>The Oracle DB Load Building Block parameters dialog box opens.</p> <p></p> <ol> <li> <p>Click the name of an input field in the left-hand column to see an explanation of that field in the comment area at the bottom of the dialog box.</p> </li> <li> <p>Enter the appropriate field value into the Value column next to the field name, as described in Table 84.</p> </li> <li> <p>Click OK.</p> </li> </ol> <p>The Oracle DB Load Building Block is added to the Script Tree. The JavaScript code, including the InitAgenda(), InitClient(), and TerminateClient() functions, is added to the script. To see the new JavaScript code, view the script in JavaScript Editing mode.</p> <p>The fields in the Oracle DB Load Building Block parameters dialog box are described in the following table:</p> Field Name Description Database name <p>Specify the name of the database on the Oracle Database server.</p><p>Type the appropriate database name into the input-text window that appears when you click the small arrow to the right of the Value input area for this field.</p> User name <p>Specify a user ID for authentication against the database.</p><p>Type the user ID into the input-text window that appears when you click the small arrow to the right of the Value input area for this field.</p> Password <p>Specify a password for authentication against the database.</p><p>Type the password into the input-text window that appears when you click the small arrow to the right of the Value input area for this field.</p> Input File Name <p>Name of the input file that contains a set of SQL commands and transactions to be completed during this load test. Select the appropriate file from the Browser window that appears when you click the ![ref11] button to the right of the Value input area for this field. Relevant for MDB databases only.</p><p>A typical SQL command input file may look like the following:</p><p>Select1#select * from john_emp</p><p>Select2#select * from john_emp where name=\u2018john\u2019</p><p>Select3#select * from john_emp where name=\u2018john\u2019 or</p><p>age &gt; 10</p><p>Update#update john_emp set age = 20 where</p><p>name=\u2018john\u2019</p><p>Insert#insert into john_emp values (99, \u2018zzz\u2019, 2)</p><p>Delete#delete from john_emp where id=99</p><p>The input file consists of rows of SQL commands. As with all load testing, the commands in the input file are executed in sequence, with WebLOAD looping through the file repeatedly until the test is completed. Each SQL command line in the input file is preceded by a name identifying the transaction in which the command will be located. A pound sign (#) separates the transaction name field from the SQL command field in each row.</p> nput File Name (continued) Each SQL command is defined as a distinct HTTP transaction, enclosed in the script body within a BeginTransaction()/EndTransaction() set and identified by the transaction name. These transactions, like all transactions, are tracked automatically by the built-in WebLOAD timers and counters. Statistics on the performance of each transaction appear in the WebLOAD output reports, with each transaction identified in the report by name. Delimiter character between fields <p>Delimiter character that separates between the fields in each record.</p><p>This delimiter character must not appear as valid character within any of the data fields. The default delimiter character is a pound sign (#).</p><p>Type in a different character as needed.</p> SQL/command to reset DB <p>Specify an SQL command to be executed at the end of a testing round to reset the database.</p><p>This field is reserved for any \u201ccleanup\u201d commands that may be required in order to continue using the database for multiple iterations.</p><p>Type the complete command into the input-text window that appears when you click the small arrow to the right of the Value input area for this field.</p>"},{"location":"recorder-user-guide/appendix_a/#mysql-db-load","title":"MySQL DB Load","text":"<p>Use the MySQL DB Load Building Block to generate a load test for the specified MySQL database. The load is generated by executing multiple iterations of database commands read from an input file. Load testing though the WebLOAD testing suite is usually scheduled only after functional testing is completed with WebLOAD Recorder.</p> <p>Note: Before connecting to the MySQL database, verify that the MySQL connector/ODBC 3.5.1 Driver is installed on your computer. In addition, verify that the MySQL port (3306) is open on the local/remote firewall and that the MySQL database has the right grant permission for the user and IP address from which you are connecting.</p> <p>To enter a value:</p> <ol> <li>Drag the MySQL DB Load icon from the Database toolbox into the Script Tree at the desired location.</li> </ol> <p>The MySQL DB Load Building Block parameters dialog box opens.</p> <p></p> <ol> <li> <p>Click the name of an input field in the left-hand column to see an explanation of that field in the comment area at the bottom of the dialog box.</p> </li> <li> <p>Enter the appropriate field value into the Value column next to the field name, as described Table 85.</p> </li> <li> <p>Click OK.</p> </li> </ol> <p>The MySQL DB Load Building Block is added to the Script Tree. The JavaScript code, including the InitAgenda(), InitClient(), and TerminateClient() functions, is added to the script. To see the new JavaScript code, view the script in JavaScript Editing mode.</p> <p>The fields in the MySQL DB Load Building Block parameters dialog box are described in the following table:</p> Field Name Description Server name (MySQL server) Specify the name of the MySQL Database server. Database name <p>Specify the name of the database on the MySQL Database server.</p><p>Type the appropriate database name into the input-text window that appears when you click the small arrow to the right of the Value input area for this field.</p> User name <p>Specify a user ID for authentication against the database.</p><p>Type the user ID into the input-text window that appears when you click the small arrow to the right of the Value input area for this field.</p> Password <p>Specify a password for authentication against the database.</p><p>Type the password into the input-text window that appears when you click the small arrow to the right of the Value input area for this field.</p> Input File Name <p>Name of the input file that contains a set of SQL commands and transactions to be completed during this load test. Select the appropriate file from the Browser window that appears when you click the ![ref16] button to the right of the Value input area for this field. Relevant for MDB databases only.</p><p>A typical SQL command input file may look like the following:</p><p>Select1#select * from john_emp</p><p>Select2#select * from john_emp where name=\u2018john\u2019 Select3#select * from john_emp where name=\u2018john\u2019</p><p>or age &gt; 10</p><p>Update#update john_emp set age = 20 where</p><p>name=\u2018john\u2019</p><p>Insert#insert into john_emp values (99, \u2018zzz\u2019, 2)</p><p>Delete#delete from john_emp where id=99</p><p>The input file consists of rows of SQL commands. As with all load testing, the commands in the input file are executed in sequence, with WebLOAD looping through the file repeatedly until the test is completed. Each SQL command line in the input file is preceded by a name identifying the transaction in which the command will be located. A pound sign (#) separates the transaction name field from the SQL command field in each row.</p><p>Each SQL command is defined as a distinct HTTP transaction, enclosed in the script body within a BeginTransaction()/EndTransaction() set and identified by the transaction name. These transactions, like all transactions, are tracked automatically by the built-in WebLOAD timers and counters. Statistics on the performance of each transaction appear in the WebLOAD output reports, with each transaction identified in the report by name.</p> Delimiter character between fields <p>Delimiter character that separates between the fields in each record.</p><p>This delimiter character must not appear as valid character within any of the data fields. The default delimiter character is a pound sign (#).</p><p>Type in a different character as needed.</p> SQL/command to reset DB <p>Specify an SQL command to be executed at the end of a testing round to reset the database.</p><p>This field is reserved for any \u201ccleanup\u201d commands that may be required in order to continue using the database for multiple iterations.</p><p>Type the complete command into the input-text window that appears when you click the small arrow to the right of the Value input area for this field.</p>"},{"location":"recorder-user-guide/appendix_a/#the-webload-recorder-verifications-toolbox","title":"The WebLOAD Recorder Verifications Toolbox","text":"<p>The following table describes the purpose of each of the WebLOAD Recorder Verifications Toolbox items:</p> Script Item Purpose WS-Single Verifies the value of the first element returned by the query to the Web service (WS). WS-Multiple Verifies the value of every element returned by the query to the Web service (WS). Flex:Verify-Ext Verifies data in the AMF data response. Flex:Extract-Ext Extracts data from AMF data response <p>To add Verifications Building Blocks to a test script directly through the WebLOAD Recorder:</p> <ul> <li>Drag the selected verification Building Block from the Verifications toolbox and drop it into the Script Tree immediately after the node that represents the response you wish to verify.</li> </ul> <p>Each Verifications Building Block opens a different dialog box. Enter the required values in the Value fields. Explanations are provided at the bottom of the dialog box for each parameter as it is selected in the dialog box.</p> <p>Note: The values that appear in the dialog box Value area are the default values for each field. In most cases, the default value for string variables is an empty string, indicated in the Value area by a set of empty quotation marks. If you are entering your own value for a string field, the new string must also be enclosed within quotation marks. Fields that were not assigned a value in the dialog box are left as empty fields in the script code.</p> <p>A Verifications node is added to the Script Tree for each Verifications Building Block defined. WebLOAD Recorder automatically adds the corresponding JavaScript code to your test session script.</p>"},{"location":"recorder-user-guide/appendix_a/#ws-single","title":"WS-Single","text":"<p>The WS-Single Building Block enables you to automatically generate a verification function of the value of the first element in a Web service\u2019s response, in your script. During playback, the results of the verification process (failure or success) are displayed in the Log View window.</p> <p>If the verification succeeds, a Debug message is written to the Log View (with the element name and actual value) and the function returns WLSuccess. If the verification fails, a Warning message is displayed and the function returns WLMinorError.</p> <p>To insert a WS-Single Building Block:</p> <ol> <li>Drag the WS-Single icon from the Verifications toolbox into the Script Tree immediately after the node that represents the response you wish to verify.</li> </ol> <p>The WS-Single Node Building Block parameters dialog box opens.</p> <p></p> <ol> <li>Edit the dialog box fields according to the following table.</li> </ol> Field Name Description XML Node Path The XPath query string of the object to be verified. XML Node Value The desired response of the verification. Return Value The return value in case of failure. <ol> <li>Click OK.</li> </ol> <p>The WS-Single node is added to the Script Tree. The JavaScript code, including the InitAgenda()function, is added to the script. To see the new JavaScript code, view the script in JavaScript Editing mode.</p> <p>For example:</p> <pre><code>function InitAgenda()\n\n{\n\n//Start generation for Building Block WS - Single Node\n\nIncludeFile(\"wlXmlVerification.js\", WLExecuteScript); wlGlobals.SaveSource = true;\n\nxmlDom  = InitXML();\n\n//End generation for Building Block WS - Single Node\n\n}\n\n/\\*\\*\\*\\*\\* WLIDE - WS - Single Node - ID:2 \\*\\*\\*\\*\\*/\n\nVerifyXMLNode(document.wlSource, \u201c//Result\u201d, \u201c2\u201d)\n\n// END WLIDE\n</code></pre> <p>Note: After the verification function is created in the script, you can duplicate it several times within the script to verify different response values.</p>"},{"location":"recorder-user-guide/appendix_a/#ws-multiple","title":"WS-Multiple","text":"<p>The WS-Multiple Building Block enables you to automatically generate a verification function of the values of every element in a Web service\u2019s response, in your script.</p> <p>During playback, the result of the verification process (failure or success) is displayed in the Log View window.</p> <p>If the verification succeeds, a Debug message is written to the Log View (with the element name and actual value) and the function returns WLSuccess. If the verification fails, a Warning message is displayed and the function returns WLMinorError.</p> <p>To insert a WS-Multiple Building Block:</p> <ol> <li>Drag the WS-Multiple icon from the Verifications toolbox into the Script Tree immediately after the node that represents the response you wish to verify.</li> </ol> <p>The WS-Multiple Nodes Building Block parameters dialog box opens.</p> <p></p> <ol> <li>Edit the dialog box fields according to the following table.</li> </ol> Field Name Description XML Node Path The XPath query string of the object to be verified. XML Node Value The desired response of the verification. Return Value Select the return value in case of failure. <ol> <li>Click OK.</li> </ol> <p>The WS-Multiple node is added to the Script Tree. The JavaScript code, including the InitAgenda()function, is added to the script. To see the new JavaScript code, view the script in JavaScript Editing mode.</p> <p>For example:</p> <pre><code>function InitAgenda(){\n\n//Start generation for Building Block WS - Multiple Nodes\n\nIncludeFile(\"wlXmlVerification.js\", WLExecuteScript); wlGlobals.SaveSource = true;\n\nxmlDom  = InitXML();\n\n//End generation for Building Block WS - Multiple Nodes\n\n}\n\n/\\*\\*\\*\\*\\* WLIDE - WS - Multiple Nodes - ID:3 \\*\\*\\*\\*\\*/\n\nVerifyXMLNodes(document.wlSource, \u201d//Result\u201d, \u201c5\u201d)\n\n// END WLIDE\n</code></pre> <p>Note: After the verification function is created in the script, you can duplicate it several times within the script to verify different response values.</p>"},{"location":"recorder-user-guide/appendix_a/#flexverify-ext","title":"Flex:Verify-Ext","text":"<p>The Flex:Verify-Ext Building Block enables you to automatically generate a verification function of the data in the AMF data response, in your script. During playback, the results of the verification process (failure or success) are displayed in the Log View window.</p> <p>If the verification succeeds, a Debug message is written to the Log View (with the element name and actual value) and the function returns WLSuccess. If the verification fails, a Warning message is displayed and the function returns WLMinorError.</p> <p>To insert a Flex:Verify-Ext Building Block:</p> <ol> <li>Drag the Flex:Verify-Ext icon from the Verifications toolbox into the Script Tree immediately after the node that represents the AMF data response you wish to verify.</li> </ol> <p>The Flex:Verify-Ext Building Block parameters dialog box opens.</p> <p></p> <ol> <li>Edit the dialog box fields according to the following table.</li> </ol> Field Name Description AMF Response Parameter Name The path to the relevant AMF response element. AMF Response Parameter Value The value of the AMF response's parameter. Severity Select the return value in case of failure. <ol> <li>Click OK.</li> </ol> <p>The Flex:Verify-Ext node is added to the Script Tree. The JavaScript code, including the InitAgenda()function, is added to the script. To see the new JavaScript code, view the script in JavaScript Editing mode.</p> <p>For example:</p> <pre><code>function InitAgenda()\n\n{\n\n//Start generation for Building Block Flex:Verify-Ext IncludeFile(\"amfVerification.js\");\n\n\n\n//End generation for Building Block Flex:Verify-Ext\n\n}\n\n/\\*\\*\\*\\*\\* WLIDE - Flex:Verify-Ext - ID:11 \\*\\*\\*\\*\\*/\n\nAMFResponse = new Packages.com.radview.amf.WLAmfMessage(getAmfDataAsJsStri ng());\n\nVerifyAMFExt(AMFResponse,\"ActionMessage.bodies(0).data.b ody(1).category\", \"AMF test3\", WLMinorError)\n\n// END WLIDE\n</code></pre> <p>Note: After the verification function is created in the script, you can duplicate it several times within the script to verify different response values.</p>"},{"location":"recorder-user-guide/appendix_a/#flexextract-ext","title":"Flex:Extract-Ext","text":"<p>The Flex:Extract-Ext Building Block enables you to automatically extract data from an AMF data response, in your script. During playback, the extracted data is displayed in the Log View window.</p> <p>If the extraction succeeds, a Debug message is written to the Log View (with the element name and actual value). If the extraction fails, the function returns NULL and a warning message is displayed.</p> <p>To insert a Flex:Extract -Ext Building Block:</p> <ol> <li>Drag the Flex: Extract-Ext icon from the Verifications toolbox into the Script Tree immediately after the node that represents the AMF data response from which you wish to extract data.</li> </ol> <p>The Flex:Extract-Ext Building Block parameters dialog box opens.</p> <p></p> <ol> <li>Edit the dialog box fields according to the following table.</li> </ol> Field Name Description AMF Response Parameter Name The path to the relevant AMF response element. Parameter Name The name of the parameter to assign. <ol> <li>Click OK.</li> </ol> <p>The Flex:Extract-Ext node is added to the Script Tree. The JavaScript code, including the InitAgenda()function, is added to the script. To see the new JavaScript code, view the script in JavaScript Editing mode.</p> <p>For example:</p> <pre><code>retVal = extractAMFValueExt(\"ActionMessage.bodies(0).data.body(1)\n\n.category\");\n</code></pre> <p>Note: After the extraction function is created in the script, you can duplicate it several times within the script to extract data from different AMF data responses.</p>"},{"location":"recorder-user-guide/appendix_a/#the-webload-recorder-websocket-toolbox","title":"The WebLOAD Recorder WebSocket Toolbox","text":"<p>Use the WebLOAD WebSocket Building Blocks to simply and easily add WebSocket functionality to your test session script. For a full description of the available WebSocket functionality, refer to the WebLOAD\u2122 JavaScript Reference Guide.</p>"},{"location":"recorder-user-guide/appendix_a/#websocket-connect","title":"WebSocket Connect","text":"<p>Use the WebSocket Connect Building Block to create a WebSocket connection to a specific URL address.</p> <p>Note: A WebSocket emits event messages. In order to process received event messages, event handlers needs to be defined for the WebSocket. </p> <p>To insert a WebSocket Connect Building Block:</p> <ol> <li>Drag the WebSocket Connect icon from the WebSocket toolbox into the Script Tree at the desired location.</li> </ol> <p>The WebSocket Connect Building Block parameters dialog box opens.</p> <p></p> <ol> <li> <p>Click the name of an input field in the left-hand column to see an explanation of that field in the comment area at the bottom of the dialog box.</p> </li> <li> <p>For example, in the preceding figure, the comment area explains that the Socket Address field is used to define the URL to which to connect.</p> </li> <li> <p>Enter the appropriate field value into the Value column next to the field name.</p> </li> </ol> Field Name Description Socket Address Specify the URL to which to connect. Socket variable name Specify a name for this WebSocket object."},{"location":"recorder-user-guide/appendix_a/#websocket-send","title":"WebSocket Send","text":"<p>Use the WebSocket Send Building Block to send data to a WebSocket connection.</p> <p>To insert a WebSocket Send Building Block:</p> <ol> <li>Drag the WebSocket Send icon from the WebSocket toolbox into the Script Tree at the desired location.</li> </ol> <p>The WebSocket Send Building Block parameters dialog box opens.</p> <p></p> <ol> <li> <p>Click the name of an input field in the left-hand column to see an explanation of that field in the comment area at the bottom of the dialog box.</p> </li> <li> <p>For example, in the preceding figure, the comment area explains that the Data to Send field is used to define the data to be sent.</p> </li> <li> <p>Enter the appropriate field value into the Value column next to the field name.</p> </li> </ol> Field Name Description Data to send Specify the data to be sent. Socket variable name Specify the name of the WebSocket object to which to send the data."},{"location":"recorder-user-guide/appendix_a/#websocket-close","title":"WebSocket Close","text":"<p>Use the WebSocket Close Building Block to close a WebSocket connection.</p> <p>To insert a WebSocket Close Building Block:</p> <ol> <li>Drag the WebSocket Close icon from the WebSocket toolbox into the Script Tree at the desired location.</li> </ol> <p>The WebSocket Close Building Block parameters dialog box opens.</p> <p></p> <ol> <li> <p>Click the name of an input field in the left-hand column to see an explanation of that field in the comment area at the bottom of the dialog box.</p> </li> <li> <p>Enter the appropriate field value into the Value column next to the field name.</p> </li> </ol> Field Name Description Socket variable name Specify the name of the WebSocket connection you wish to close."},{"location":"recorder-user-guide/appendix_a/#the-webload-recorder-web-services-toolbox","title":"The WebLOAD Recorder Web Services Toolbox","text":"<p>Use the WebLOAD Web Services Building Blocks to simply and easily add web service calls or HTTP requests to your test session script.</p>"},{"location":"recorder-user-guide/appendix_a/#http","title":"HTTP","text":"<p>Use the HTTP Building Block to create an HTTP web service call. This building block supports any HTTP method.</p> <p>To insert an HTTP Web Service Building Block:</p> <ol> <li>Drag the HTTP icon from the Web Services toolbox into the Script Tree at the desired location.</li> </ol> <p>The HTTP Web Service dialog box opens.</p> <p></p> <ol> <li> <p>Select a method from the Method drop-down list: Get, Post, Put, Delete, Copy, Head or Options.</p> </li> <li> <p>Enter a URL in the URL field.</p> </li> <li> <p>Optionally, use the Headers tab to define the web service headers, as follows:</p> </li> <li> <p>In the Key field, select a key from the drop-down list, or enter any key.</p> </li> <li>In the Value field, enter a value for the specified key.</li> <li>To add additional headers, click Add, and repeat steps (a) to (b). To remove a header, select the relevant line and click Remove.</li> </ol> <p></p> <ol> <li> <p>Optionally, use the Body tab to define the web service body, using either of the following methods:</p> </li> <li> <p>Select Form-data, and define a desired list of Keys and their Values.</p> <ol> <li>In the Key field, select a key from the drop-down list, or enter any key.</li> <li>In the Value field, enter a value for the specified key.</li> <li>To add an additional form data element, click Add, and repeat steps (a) to (b). To remove a form data element, select the relevant line and click Remove.</li> </ol> </li> </ol> <p></p> <ul> <li>Select Raw and enter content into the empty box.</li> </ul> <p></p> <ol> <li>Click OK. The matching code appears in the JavaScript View.</li> </ol>"},{"location":"recorder-user-guide/appendix_a/#wsdl","title":"WSDL","text":"<p>Use the WSDL Building Block to create a web service call based on data from a Web Services Description Language (WSDL) file.</p> <p>To insert a WSDL Building Block:</p> <ol> <li>Drag the WSDL icon from the Web Services toolbox into the Script Tree at the desired location.</li> </ol> <p>The WSDL Web Service dialog box opens.</p> <p></p> <ol> <li> <p>In the WSDL Address field, enter a WSDL URL, or browse to a WSDL file.</p> </li> <li> <p>Click Parse WSDL. The left pane in the Body tab is populated with the interfaces, and their methods, of the WSDL file.</p> </li> <li> <p>Define the web service body, as follows:</p> </li> <li> <p>Select a desired method and click the arrow between the left and right panes.The right pane displays the body of the selected method. In addition, WebLOAD automatically creates a default SOAPAction header based on the selected method.</p> <p></p> </li> <li> <p>Enter values as desired to replace the \u201c?\u201d in the method body.</p> </li> <li> <p>View and edit the SOAPAction headers as follows:</p> </li> <li> <p>Click the Headers tab to view the SOAPAction header that WebLOAD had automatically created when you selected the method.</p> <p></p> </li> <li> <p>Optionally edit the header.</p> </li> <li> <p>Optionally add additional headers, as follows:</p> <ul> <li>Click Add. A new empty line is added to the table.</li> <li>In the Key field, select a key from the drop-down list, or enter any key.</li> <li>In the Value field, enter a value for the specified key.</li> </ul> </li> <li> <p>To remove a header, select the relevant line and click Remove.</p> </li> <li> <p>Click OK. The matching code appears in the JavaScript View.</p> </li> </ol>"},{"location":"recorder-user-guide/appendix_a/#the-jms-toolbox","title":"The JMS Toolbox","text":"<p>The following table describes the purpose of each of the WebLOAD Recorder JMS Toolbox items:</p> Script Item Purpose JMS-Connect-JNDI Connect to a JMS queue, and create consumer and producer objects using JNDI. JMS-Connect- HornetQ Connect to a JMS queue, and create consumer and producer objects using HornetQ implementation. JMS--Send Send a JMS message using a previously created producer. JMS-Receive Receive a JMS message from a previously created consumer. <p>To use JMS in WebLOAD:</p> <ol> <li>Create JMS consumer and producer objects, either through JNDI or using the HornetQ implementation.</li> <li>Use send and/or receive to put or get messages from a queue.</li> </ol> <p>Note: The implementation relies on the WebLOAD Java connection, which enables making changes to the generated code easily. Refer to the \u201cWorking with Java\u201d section of the WebLOAD Scripting Guide for more details.</p>"},{"location":"recorder-user-guide/appendix_a/#jms-connect-jndi","title":"JMS-Connect-JNDI","text":"<p>The JMS-Connect-JNDI Building Block creates a JMS connection using JNDI. More specifically, the following objects are used:</p> <ul> <li>InitialContext \u2013 JNDI context</li> <li>JMS Connection Factory \u2013 looked up using JNDI</li> <li>JMS Destination (Queue) \u2013 looked up using JNDI</li> <li>JMS Session \u2013 using the JMS Connection</li> <li>JMS Producer and Consumer \u2013 using the session and destination</li> </ul> <p>The objects are created in InitClient to be used once per virtual client. If required, some or all of the code can be moved to the script body to repeat the action each round.</p> <p>The code can be adjusted as needed, for example by adding properties to the lookup:</p> <pre><code>env = new Packages.java.util.Properties(); env.put(\"INITIAL\\_CONTEXT\\_FACTORY\", \"my.factory\");\n\nenv.put(\"PROVIDER\\_URL\", [\"http://10.0.1.11\");](http://10.0.1.11/)\n\njndiContext = new Packages.javax.naming.InitialContext(env);\n</code></pre> <p>To insert a JMS-Connect-JNDI Building Block:</p> <ol> <li>Drag the JMS-Connect-JNDI icon from the JMS toolbox into the Script Tree. The JMS-Connect-JNDI Building Block parameters dialog box opens.</li> </ol> <p></p> <ol> <li>Edit the dialog box fields according to the following table.</li> </ol> Field Name Description Connection Factory The JNDI Name of the Connection Factory, for example: \"java:comp/env/jms/MyConnectionFactory\" Destination The JNDI name of the destination, , for example: \"java:comp/env/jms/QueueName\" <ol> <li>Click OK.</li> </ol> <p>The node is added to the Script Tree. The JavaScript code, including the InitAgenda()function, is added to the script. To see the new JavaScript code, view the script in JavaScript Editing mode.</p> <p>For example:</p> <pre><code>function InitAgenda()\n\n{\n\n\n\n\n\n//Start generation for Building Block JMS-Connect-JNDI IncludeFile(\"wljms.js\",WLExecuteScript);\n\n//End generation for Building Block JMS-Connect-JNDI\n\n}\n\nfunction InitClient()\n\n{\n\n//Start generation for Building Block JMS-Connect-JNDI\n\njndiContext = new Packages.javax.naming.InitialContext();\n\nconnectionFactory = jndiContext.lookup(\"/myConFact\");\n\ndest = jndiContext.lookup(\"/myQueue\");\n\nconnection = connectionFactory.createConnection();\n\nsession = connection.createSession(false, Packages.javax.jms.Session.AUTO\\_ACKNOWLEDGE);\n\nproducer = session.createProducer(dest); consumer = session.createConsumer(dest); connection.start();\n\n//End generation for Building Block JMS-Connect-JNDI\n\n}\n\n/\\*\\*\\*\\*\\* WLIDE - JMS-Connect-JNDI - ID:2 \\*\\*\\*\\*\\*/\n\n//JMS 'producer' and 'consumer' objects created at InitClient()\n\n// END WLIDE\n\nfunction TerminateClient()\n\n{\n\n//Start generation for Building Block JMS-Connect-JNDI connection.close();\n\n//End generation for Building Block JMS-Connect-JNDI\n\n}\n</code></pre>"},{"location":"recorder-user-guide/appendix_a/#jms-connect-hornetq","title":"JMS-Connect-HornetQ","text":"<p>The JMS-Connect-HornetQ Building Block creates a JMS connection using the HornetQ native implementation.</p> <p>More specifically, the HornetQJMSClient class is used to create the connection factory and queue, as follows:</p> <ul> <li> <p>Create JMS Connection Factory using HornetQJMSClient</p> </li> <li> <p>Create JMS Queue using HornetQJMSClient</p> </li> <li>Create standard JMS objects \u2013 consumer, producer, session using the created objects</li> </ul> <p>The objects are created in InitClient to be used once per virtual client. If required, some or all of the code can be moved to the script body to repeat the action each round.</p> <p>Note: HornetQ supports different ways of creating the connection. The code can be adjusted to support methods other that the method described here..</p> <p>To insert a JMS-Connect-HornetQ Building Block:</p> <ol> <li>Drag the JMS-Connect-HornetQ icon from the JMS toolbox into the Script Tree. The JMS-Connect- HornetQ Building Block parameters dialog box opens.</li> </ol> <p></p> <ol> <li>Edit the dialog box fields according to the following table.</li> </ol> Field Name Description JMS Queue name The name of the JMS Queue, used in createQueue() calls. <ol> <li>Click OK.</li> </ol> <p>The node is added to the Script Tree. The JavaScript code, including the InitAgenda()function, is added to the script. To see the new JavaScript code, view the script in JavaScript Editing mode.</p> <p>For example:</p> <pre><code>function InitAgenda()\n\n{\n\n//Start generation for Building Block JMS-Connect- HonrnetQ\n\nIncludeFile(\"wljms.js\",WLExecuteScript);\n\n//End generation for Building Block JMS-Connect-HonrnetQ\n\n}\n\nfunction InitClient()\n\n{\n\n//Start generation for Building Block JMS-Connect-\n\nHonrnetQ transportConfiguration =\n\nnew Packages.org.hornetq.api.core.TransportConfiguration\n\n(\"org.hornetq.core.remoting.impl.netty.NettyConnectorFac tory\");\n\nconnectionFactory = Packages.org.hornetq.api.jms.HornetQJMSClient.createConn ectionFactoryWithoutHA\n\n(Packages.org.hornetq.api.jms.JMSFactoryType.CF, [transportConfiguration]);\n\nconnection = connectionFactory.createConnection();\n\nsession = connection.createSession(false, Packages.javax.jms.Session.AUTO\\_ACKNOWLEDGE);\n\nqueue = Packages.org.hornetq.api.jms.HornetQJMSClient.createQueu e(\"MyQueue\");\n\nproducer = session.createProducer(queue); consumer = session.createConsumer(queue); connection.start();\n\n//End generation for Building Block JMS-Connect-HonrnetQ\n\n}\n\n/\\*\\*\\*\\*\\* WLIDE - JMS-Connect-HonrnetQ - ID:2 \\*\\*\\*\\*\\*/\n\n//JMS 'producer' and 'consumer' objects created at InitClient()\n\n// END WLIDE\n\nfunction TerminateClient()\n\n{\n\n\n\n//Start generation for Building Block JMS-Connect-\n\nHonrnetQ connection.close();\n\n//End generation for Building Block JMS-Connect-HonrnetQ\n\n}\n</code></pre>"},{"location":"recorder-user-guide/appendix_a/#jms-send","title":"JMS-Send","text":"<p>The JMS-Send Building Block sends a JMS message to the specified \u2018producer\u2019 (javax.jms.MessageProducer), using a given \u2018session\u2019 (javax.jms.Session).</p> <p>The \u2018producer\u2019 and \u2018session\u2019 objects are expected to already have been created, for example by using one of the JMS-Connect building blocks.</p> <p>To insert a JMS-Send Building Block:</p> <ol> <li>Drag the JMS-Send icon from the JMS toolbox into the Script Tree. The JMS-Send Building Block parameters dialog box opens.</li> </ol> <p></p> <ol> <li>Edit the dialog box fields according to the following table.</li> </ol> Field Name Description Session object <p>The JMS Session object, created by</p><p>connection.createSession()</p> Producer object <p>The JMS Producer object, created by</p><p>session.createProducer()</p> Message Text The text to send <ol> <li>Click OK.</li> </ol> <p>The node is added to the Script Tree.</p> <p>For example:</p> <p><code>sendJmsMessage(session, producer, \"Text to send\");</code></p>"},{"location":"recorder-user-guide/appendix_a/#jms-receive","title":"JMS-Receive","text":"<p>The JMS-Receive Building Block receives a JMS message from the specified \u2018consumer\u2019 (javax.jms.MessageConsumer), into a given variable. The variable can then be used to inspect the message context, using standard JavaScript String methods.</p> <p>The \u2018consumer\u2019 object is expected to already have been created, for example by using one of the JMS-Connect building blocks.</p>"},{"location":"recorder-user-guide/appendix_a/#to-insert-a-jms-receive-building-block","title":"To insert a JMS-Receive Building Block:","text":"<ol> <li>Drag the JMS-Receive icon from the JMS toolbox into the Script Tree. The JMS-Receive Building Block parameters dialog box opens.</li> </ol> <ol> <li>Edit the dialog box fields according to the following table.</li> </ol> Field Name Description Consumer object The JMS Consumer object, create by session.createConsumer(). Return Message Text object The return value name. <ol> <li>Click OK.</li> </ol> <p>The node is added to the Script Tree.</p> <p>For example:</p> <p><code>var message = receiveJmsMessage(consumer); InfoMessage(\"Got message: \" + message);</code></p>"},{"location":"recorder-user-guide/appendix_a/#the-real-clients-toolbox","title":"The Real Clients Toolbox","text":"<p>The Real Clients Toolbox includes Selenium, Perfecto Mobile, and JUnit Runner building blocks.</p>"},{"location":"recorder-user-guide/appendix_a/#selenium-building-blocks","title":"Selenium Building Blocks","text":"<p>Use the WebLOAD Selenium Building Blocks to simply and easily create Selenium actions. For a full description of how to use Selenium scripts in WebLOAD, refer to Selenium Integration (on page 389), and to the Working with Java Selenium Scripts section in Chapter 3 Advanced JavaScript Script Features of the WebLOAD Scripting Guide.</p> <p>To call Selenium actions using the Selenium building blocks:</p> <ol> <li>Use the Selenium driver building block to instruct WebLOAD to create a Selenium Java WebDriver (org.openqa.selenium.WebDriver).</li> <li>Where desired, enter commands to be executed by the Selenium Java WebDriver. For information about using the WebDriver, refer to the Selenium documentation (http://docs.seleniumhq.org/docs/03_webdriver.jsp#selenium-webdriver-api- commands-and-operations).</li> <li>Where desired, use the Selenium Report Statistics building block to insert a command that instructs WebLOAD to collect Selenium statistics from the current page.</li> </ol>"},{"location":"recorder-user-guide/appendix_a/#selenium-driver","title":"Selenium driver","text":"<p>Use the Selenium Driver Building Block to instruct WebLOAD to create a Selenium Java WebDriver (org.openqa.selenium.WebDriver).</p> <p>To insert a Selenium Driver Building Block:</p> <ol> <li>Drag the Selenium Driver icon from the Real Clients toolbox into the Script Tree at the desired location.</li> </ol> <p>The Selenium Driver Building Block parameters dialog box opens.</p> <p></p> <ol> <li> <p>Click the name of an input field in the left-hand column to see an explanation of that field in the comment area at the bottom of the dialog box.</p> </li> <li> <p>For example, in the preceding figure, the comment area explains that the Driver Type field is used to specify which Selenium driver type to use.</p> </li> <li> <p>Enter the appropriate field value into the Value column next to the field name, as described in Table 99.</p> </li> </ol> Field Name Description Driver Type <p>Specify what type of Selenium driver to create. The possible values are:</p><p>- Firefox</p><p>- Chrome</p><p>- Internet Explorer</p> Base URL Specify the first URL to which the driver will connect. Selenium Driver variable name Specify a name for this WebLOAD object. <ol> <li>Click OK.</li> </ol> <p>The node is added to the Script Tree.</p>"},{"location":"recorder-user-guide/appendix_a/#selenium-report-statistics","title":"Selenium Report Statistics","text":"<p>Use the Selenium Report Statistics Block to instruct WebLOAD to collect and report navigation timing statistics for the current page.</p> <p>For a full list and description of the navigation timing statistics, see Table 104.</p>"},{"location":"recorder-user-guide/appendix_a/#to-insert-a-selenium-report-statistics-building-block","title":"To insert a Selenium Report Statistics Building Block:","text":"<ol> <li>Drag the Selenium Report Statistics icon from the Real Clients toolbox into the Script Tree at the desired location.</li> </ol> <p>The Selenium Report Statistics Building Block parameters dialog box opens.</p> <p></p> <ol> <li> <p>Click the name of an input field in the left-hand column to see an explanation of that field in the comment area at the bottom of the dialog box.</p> </li> <li> <p>For example, in the preceding figure, the comment area explains that the Selenium Driver field is used to specify the Selenium Driver object.</p> </li> <li> <p>Enter the appropriate field value into the Value column next to the field name, as described in Table 100.</p> </li> </ol> Field Name Description Selenium Driver Specify the name of the Selenium Driver object. Navigation timing statistics will be collected for actions executed by this Selenium Driver. Page Name <p>By default, WebLOAD reports navigation timing statistics as an average across all pages accessed by the Selenium Driver. If you wish to also display separately the statistics for a particular page, enter the page name in this parameter. The resultant measurements will be called -.<p>This parameter is optional.</p> <ol> <li>Click OK.</li> </ol> <p>The node is added to the Script Tree.</p> <p>For example, if you enter driver as the name of the Selenium driver, and my Page name as the name of a desired page, the following is added to the Script Tree:</p> <p><code>reportStatistics(driver, \"my Page name\");</code></p>"},{"location":"recorder-user-guide/appendix_a/#junit-runner-building-block-for-running-junit-and-other-unit-testing-frameworks","title":"JUnit Runner Building Block for running JUnit and other unit testing frameworks","text":"<p>Use the JUnit Runner building block to run all unit tests of specified classes, as part of the load.</p> <p>This building block is relevant not only for JUnit but for unit tests of any kind inserted in the script. For example, if your script includes Cucumber unit tests, then adding the JUnit Runner building block will run the Cucumber unit tests.</p>"},{"location":"recorder-user-guide/appendix_a/#to-insert-a-junit-runner-building-block","title":"To insert a JUnit Runner Building Block:","text":"<ol> <li>Drag the JUnit Runner icon from the JMS toolbox into the Script Tree. The JUnit Runner Building Block parameters dialog box opens.</li> </ol> <ol> <li>Edit the dialog box fields according to the following table.</li> </ol> Field Name Description Class with tests to run A comma-separated list of the classes on which to run the unit tests. Print execution output Whether to display in the WebLOAD Recorder and WebLOAD Console log window, the unit testing execution results. <ol> <li>Click OK.</li> </ol> <p>The node is added to the Script Tree.</p>"},{"location":"recorder-user-guide/appendix_a/#perfecto-mobile-building-blocks","title":"Perfecto Mobile Building Blocks","text":"<p>Use the Perfecto Mobile building block to instruct WebLOAD to create a Perfecto Mobile script. For a full description of how to create and use Perfecto Mobile scripts in WebLOAD, refer to Integrating with Perfecto Mobile (on page 383).</p>"},{"location":"recorder-user-guide/appendix_b/","title":"Appendix B: WebLOAD Recorder File Types","text":"<p>The following is a list of files associated with a WebLOAD Recorder project.</p> WebLOAD Recorder Extension WebLOAD Recorder File Type .WLP Files WebLOAD Recorder Project Files .WLS Files WebLOAD Recorder Session Files .WLA Files Actual Repository Files .WLE Files Expected Repository Files .LOG Files Saved Log Window Files"},{"location":"recorder-user-guide/appendix_c/","title":"Appendix C: Launching WebLOAD Recorder Testing through the Command Line Interface","text":"<p>This section provides instructions and examples for using Command Line Interface (CLI) to launch WebLOAD Recorder testing.</p>"},{"location":"recorder-user-guide/appendix_c/#running-webload-recorder-testing-through-the-cli","title":"Running WebLOAD Recorder Testing through the CLI","text":"<p>You can also initiate WebLOAD Recorder testing directly through the CLI. You can enter the WebLOAD Recorder launch command into a batch file or into an external script and WebLOAD Recorder will run directly, without user intervention, using the parameters specified.</p> <p>To run WebLOAD Recorder testing through the CLI:</p> <p>Enter the webloadIDE.exe command together with a series of optional parameters (described below) into your external script to automatically launch a WebLOAD Recorder test. When your script runs, the executable file will invoke WebLOAD Recorder and run the specified test according to the specified parameters.</p>"},{"location":"recorder-user-guide/appendix_c/#syntax","title":"Syntax","text":"<p>Use the following syntax to define the parameters for running a WebLOAD Recorder test through a Command Line Interface:</p> <p>webloadide.exe [][] [][] <p>To run more than one session, append all relevant parameters at the end of the syntax. See examples 2 and 3 in Examples (on page 370).</p>"},{"location":"recorder-user-guide/appendix_c/#parameters","title":"Parameters","text":"<p>When running a test invoked by the executable, you can specify the following parameters:</p> Parameter Description Flags <p>/a - auto run</p><p>Automatically run the WebLOAD Recorder test without waiting for user input. If this flag is not specified, WebLOAD Recorder is opened with the specified project / session but the test is not automatically run. The system waits for user input.</p> Project or session name to open The name of the .wlp file or .wls file (Project file or Session file) to run. Session name to save to The name of the .wls file containing the test data. This file will be saved in the current directory unless otherwise specified. Number of rounds to run The number of iterations to run during runtime. The default value is 1. <p>Parameters are all optional. If no parameters are entered, the executable launches WebLOAD Recorder and does not run a test. If the autorun flag  flag is not set, the</p> <p>&lt; Session name to save to &gt;, and the &lt; Number of rounds to run &gt; parameters are ignored.</p>"},{"location":"recorder-user-guide/appendix_c/#examples","title":"Examples","text":"<p>Example 1:</p> <p><code>webloadide.exe test1.wlp</code></p> <p>This command opens WebLOAD Recorder with the test1 project file and waits for user input.</p> <p>Example 2:</p> <p><code>webloadide.exe /a test1.wlp test2.wlp 3</code></p> <p>This command:</p> <ul> <li>Opens WebLOAD Recorder and automatically runs a test using the test1.wlp</li> </ul> <p>project file.</p> <ul> <li>Runs the project for three iterations.</li> <li>Saves the test results in the WebLOAD Recorder session file test1.wls, which includes all of the test data and results.</li> </ul> <p>Example 3:</p> <p><code>webloadide.exe /a test1.wlp test1.wls 3 /a test2.wlp test2.wls 2</code></p> <p>This command:</p> <ul> <li>Opens WebLOAD Recorder and automatically runs a test using the test1.wlp</li> </ul> <p>project file.</p> <ul> <li>Runs the project test1.wlp for three iterations.</li> <li>Saves the test results in the WebLOAD Recorder session file test1.wls, which includes all of the test data and results.</li> <li>Opens the WebLOAD Recorder project file test2.wlp.</li> <li>Runs the project test2.wlp for two iterations.</li> <li>Saves the test results in the WebLOAD Recorder session file test2.wls, which includes all of the test data and results.</li> </ul>"},{"location":"recorder-user-guide/appendix_d/","title":"Appendix D: Converting Certificate Files","text":"<p>WebLOAD Recorder supports the use of SSL Client Certificates. WebLOAD Recorder requires that the certificate file be in *.pem format. If the certificate file is in *.pfx or</p> <p>*.p12 format, use the Certificate Conversion Wizard application to convert the file to</p> <p>*.pem format.</p> <p>Note: You can use your web browser to export certificates to *.pfx or *.p12 format.</p> <p>To convert certificate files:</p> <ol> <li>Select Start &gt; Programs &gt; RadView &gt; WebLOAD &gt; Utilities &gt; Certificate Conversion Wizard. The Certificate Conversion Wizard appears.</li> </ol> <p></p> <ol> <li>In the Certificate file to convert field, enter the path and file name of a certificate file to convert.</li> </ol> <p>-Or</p> <p>Click  and browse to the file.</p> <ol> <li>In the Password for input file field, enter the password for the certificate file.</li> </ol> <p>Note: If you do not know the password, contact your IT manager.</p> <ol> <li>In the Save converted file as field, enter a path and file name for the converted certificate file.</li> </ol> <p>Or</p> <p>Click  to open a standard Windows<sup>\u00ae</sup> Save As window.</p> <ol> <li>In the Password for output file field, enter a password for the converted certificate.</li> </ol> <p>Note: It is recommended that you use the same password as the one used for the original certificate file.</p> <ol> <li> <p>In the Confirm password field, enter the password that you entered in the Password for output file field.</p> </li> <li> <p>Click Convert. The file is converted.</p> </li> </ol>"},{"location":"recorder-user-guide/appendix_e/","title":"Appendix E: Recording Mobile Applications","text":"<p>WebLOAD enables recording mobile applications in two ways:</p> <ul> <li>Native Mobile Recording \u2013 recording traffic from an actual mobile device. This works for both mobile web applications and native mobile applications.</li> <li>Simulate mobile in browser \u2013 records mobile web applications in the desktop by simulating a mobile browser. Does not require a mobile device, but only works for mobile web applications.</li> </ul> <p>In addition, you can playback a recording as if it were a recording from a mobile application. This is performed in the WebLOAD Console using the Current Project Options window. In the Browser Type tab, specify the mobile application in the Browser Parameters section. The browser type you select overrides the settings that were defined during the recording, and plays back the recording according to the new settings.</p>"},{"location":"recorder-user-guide/appendix_e/#native-mobile-recording","title":"Native Mobile Recording","text":"<p>To record traffic from an actual mobile device:</p> <ol> <li> <p>Start native mobile recording, as follows:</p> </li> <li> <p>In WebLOAD Recorder, click Start in the Home tab of the ribbon. The Recording dialog appears.</p> <p></p> </li> <li> <p>In the Open drop-down list, select Native Mobile Recording.</p> </li> <li> <p>Click OK.</p> </li> <li> <p>Set up the mobile device proxy, as follows:</p> </li> <li> <p>Connect the mobile device to a Wireless network that can access your WebLOAD machine.</p> </li> <li> <p>Configure the device\u2019s wireless proxy settings to go through the WebLOAD machine, on the noted port.</p> <p>This step depends on the device OS type and version. For example, see *Setting Proxy Settings in iPhone* (on page 377) and Setting Proxy Settings in Android (on page 380).</p> </li> <li> <p>Perform actions in your mobile device application or web browser; the HTTP requests will be recorded in the test script.</p> </li> <li> <p>Stop recording, as follows:</p> </li> <li> <p>In WebLOAD Recorder, click Stop Recording.</p> </li> <li>In the mobile device, change the Proxy settings back to off.</li> </ol> <p>Note: </p> <p>You may need to open you firewall to accept connections to proxynator.exe, on port 9884.</p> <p>To record secure traffic (HTTPS), the root certificate needs to be imported to the phone. For example, see Recording HTTPS Traffic on iPhone (on page 379) and *Recording HTTPS traffic on Android (4.0 and above)* (on page 380).</p> <p>When not recording, the mobile device will not be able to access the network (because the proxy is not available) \u2013 to use the network normally, revert the HTTP Proxy setting back to Off.</p>"},{"location":"recorder-user-guide/appendix_e/#setting-proxy-settings-in-iphone","title":"Setting Proxy Settings in iPhone","text":"<p>To set iPhone proxy settings:</p> <ol> <li>Open Settings, and access the Wi-Fi network settings:</li> </ol> <p></p> <ol> <li>Select edit current Wi-Fi Network settings:</li> </ol> <p></p> <ol> <li>Scroll down the HTTP Proxy section. Change proxy to Manual and set the Server and Port to point to the WebLOAD machines.</li> </ol> <p>The default port for the proxy-recorder is 9884. You may need to use the machine\u2019s IP-address instead of name.</p> <p></p>"},{"location":"recorder-user-guide/appendix_e/#recording-https-traffic-on-iphone","title":"Recording HTTPS Traffic on iPhone","text":"<p>In order to record HTTPS traffic, the WebLOAD root certificate needs to be trusted by the phone. To import the root certificate:</p> <ol> <li>Locate the root certificate, in:</li> </ol> <p><code>c:\\Program Files\\RadView\\WebLOAD\\bin\\Certificates\\root.pem</code></p> <ol> <li> <p>Open the root.pem file on the phone. This can be done by sending the file via e-mail, or accessing the file from a web-server.</p> </li> <li> <p>Click Install.</p> </li> </ol> <p></p> <ol> <li>A warning will appear; click Install. The certificate should now be trusted</li> </ol> <p></p> <ol> <li>After recording is completed, the certificate may be removed. To remove the certificate, select the following: Settings &gt; General &gt; Profile \u2018RadView Root CA\u2019 &gt; Remove.</li> </ol>"},{"location":"recorder-user-guide/appendix_e/#setting-proxy-settings-in-android","title":"Setting Proxy Settings in Android","text":"<p>To set Android proxy settings:</p> <ol> <li> <p>Using the menu button, select Settings.</p> </li> <li> <p>Select Wireless &amp; networks.</p> </li> <li> <p>Select Wi-Fi settings.</p> </li> <li> <p>Switch on and connect to your designated Wi-Fi network.</p> </li> <li> <p>Once connected, press the Menu button again and select Advanced.</p> </li> <li> <p>Set Proxy to the WebLOAD machine IP-address, and Port to 9884.</p> </li> </ol> <p></p>"},{"location":"recorder-user-guide/appendix_e/#recording-https-traffic-on-android-40-and-above","title":"Recording HTTPS traffic on Android (4.0 and above)","text":"<p>In order to record HTTPS traffic, the WebLOAD root certificate needs to be trusted by the phone. To import the root certificate:</p> <ol> <li>Locate the root certificate, in:</li> </ol> <p>c:\\Program Files\\RadView\\WebLOAD\\bin\\Certificates\\root.pem</p> <ol> <li> <p>Copy locally, as root.crt.</p> </li> <li> <p>Copy root.crt from your computer to the root of your device's internal storage (that is, not in a folder).</p> </li> <li> <p>From a Home or All Apps screen, tap the Settings icon.</p> </li> <li> <p>Go to Personal &gt; Security &gt; Credential storage &gt; Install from storage.</p> </li> </ol>"},{"location":"recorder-user-guide/appendix_e/#simulating-a-mobile-in-a-browser","title":"Simulating a Mobile in a Browser","text":"<p>In Simulate mode, the recording is done using the desktop browser, identified to the server as a mobile user agent.</p> <p>To simulate a mobile:</p> <ol> <li>In WebLOAD Recorder, click Start Recording.</li> </ol> <p></p> <ol> <li> <p>Check the Identify As checkbox.</p> </li> <li> <p>Select the Browser family and Version.</p> </li> <li> <p>Click OK.</p> </li> </ol> <p>Notes: </p> <ul> <li>This approach is only applicable to some mobile web-sites, which rely on server- side mobile detection</li> <li>Some mobile sites may not render as expected in the desktop browser.</li> <li>For best results, use a Chrome browser.</li> </ul>"},{"location":"recorder-user-guide/appendix_f/","title":"Appendix F: Integrating with Perfecto Mobile","text":"<p>Perfecto Mobile is a cloud-based real-device mobile testing solution. It tests mobile apps on real devices, in real time, on live carrier networks.</p> <p>WebLOAD enables creating and running scripts that run Perfecto Mobile scripts on mobile devices in the Perfecto Mobile cloud.</p> <p>Note that you can only use this feature if you have an account in Perfecto Mobile.</p>"},{"location":"recorder-user-guide/appendix_f/#creating-a-perfecto-mobile-script","title":"Creating a Perfecto Mobile Script","text":"<p>In order to create a Perfecto Mobile script, you must first create a Perfecto Mobile script in Perfecto Mobile. The WebLOAD script will execute this Perfecto Mobile script, and gather statistics from the s Perfecto Mobile cript and from the device.</p> <p>For instructions on how to create a Perfecto Mobile script please refer to Perfecto Mobile tutorials.</p> <p>To create a Perfecto Mobile WebLOAD script:</p> <ol> <li>Drag the Perfecto Mobile      icon from the Real Clients toolbox into the Script Tree at the desired location.</li> </ol> <p>The Perfecto Mobile dialog box opens.</p> <p></p> <ol> <li> <p>In the Cloud Name field, enter the URL for Perfecto Mobile.</p> </li> <li> <p>Enter the Perfecto Mobile credentials:</p> </li> <li> <p>In Perfecto User, enter your user name.</p> </li> <li> <p>In Perfecto Password, enter your password.</p> </li> <li> <p>Click Select Script. WebLOAD accesses the Perfecto Mobile scripts and displays them in the Select Script dialog box.</p> </li> </ol> <p>Select a desired script and click OK.</p> <p></p> <ol> <li>Click Select Device. WebLOAD accesses Perfecto Mobile and displays the list of available devices in the Select Device dialog box.</li> </ol> <p>Select a desired device and click OK.</p> <p></p> <ol> <li> <p>Set the Test timeout. This is the maximum number of seconds that the test is allowed to run.</p> </li> <li> <p>Set the Ping Time. This is the frequency in seconds with which WebLOAD will check test status during test running.</p> </li> <li> <p>Specify whether to Send Transactions to WebLOAD. That is, whether to send a list of all the transactions (Groups) that are written in the Perfecto Mobile script (such as: \u201dOpen Chrome\u201d, \u201cNavigate to my application\u201d).</p> </li> <li> <p>Specify whether to Send All Actions to WebLOAD. That is, whether to send a list of all the actions that the script performs (such as: \u201dPress Key\u201d, \u201cTouch Drag\u201d).</p> </li> <li> <p>Click OK. The script is created, and is ready to be run.</p> </li> </ol> <p></p> <p>If you run the Perfecto Mobile script in WebLOAD Recorder, all you see are the periodic pings. In order to gather device, transaction and action statistics, you need to run the script in the WebLOAD Console, as described in the following section.</p>"},{"location":"recorder-user-guide/appendix_f/#viewing-session-results-of-a-perfecto-mobile-session","title":"Viewing Session Results of a Perfecto Mobile Session","text":"<p>To gather statistics about the Perfecto Mobile script, create in the WebLOAD Console a Load template that runs the Perfecto Mobile script repetitively but for a single user (Probing Client).</p> <p>The following figure shows an example results window. Note that the example displays also Actions and Transactions. That is, in addition to the various device statistics (such as Battery Level), statistics are also displayed for actions (such as Touch Drag) and transactions (such as Navigate in Chrome).</p> <p></p>"},{"location":"recorder-user-guide/appendix_g/","title":"Selenium Integration","text":"<p>Selenium is a browser automation tool, enabling you to record and playback your interactions with a browser. Its development environment (IDE) is a Firefox add-on, and it can run various browser drivers, such as IE, Chrome, and Firefox. Selenium is open-source software, and can be used without charge.</p> <p>WebLOAD enables integration of a Selenium script into WebLOAD, and the gathering of navigation timing statistics. This is useful for gathering information regarding user experience, such as how long it takes to login, or how long it takes a page to render.</p> <p>While WebLOAD simulates the load on a server, Selenium simulates the end-user experience. A hybrid WebLOAD-Selenium solution can thus give you the advantages of both simulation types. To implement such a solution, you can run a WebLOAD load session that does the following:</p> <ul> <li>Runs a regular WebLOAD script with many users.</li> <li>Run a Selenium script that simulates the same actions, for a single user.</li> </ul> <p>The template will gather and display statistics from both scripts in the WebLOAD reports. In order to easily distinguish between the statistics from the regular WebLOAD script and those from the Selenium script, it is recommended to give the transactions in each of the two scripts a different distinctive name. For example:</p> <ul> <li>Selenium-user-login in the Selenium script</li> <li>WL-user-login in the WebLOAD script</li> </ul> <p>Note: This appendix is intended for users creating Selenium code to be used in WebLOAD only. If you wish to use Selenium as usual and add WebLOAD navigation- timing functionality, refer to the Working with Java Selenium Scripts section in Chapter 3 Advanced JavaScript Script Features of the WebLOAD Scripting Guide.</p>"},{"location":"recorder-user-guide/appendix_g/#using-selenium-scripts","title":"Using Selenium Scripts","text":"<p>This section describes how to use Selenium scripts in WebLOAD.</p>"},{"location":"recorder-user-guide/appendix_g/#prerequisites","title":"Prerequisites","text":"<ol> <li>Download the Selenium required jars:</li> <li> <p>In the selenium web-site (http://www.seleniumhq.org/), select the Download</p> <p>tab.</p> </li> <li> <p>In \u2018Selenium Client &amp; WebDriver Language Bindings\u2019, download the Java version (selenium-java-x.x.zip).</p> </li> <li>Unzip the downloaded file in a temporary location.</li> <li>Copy the selenium-java-x.x.jar and all jars in the \u2018libs\u2019 folder to the WebLOAD Java extensions folder: c:\\ProgramData\\RadView\\WebLOAD\\extensions\\java</li> <li>If there are duplicate jars (same base name with different number), delete the older versions.</li> </ol> <p>Important: Selenium dependencies include jar files that are already shipped with WebLOAD, but not always the same version. Make sure there are no duplicates by deleting the older versions. For example, if you have both commons-codec-1.9.jar and commons-codec-1.3.jar, delete the commons-codec-1.3.jar file.</p> <p>Note: Version numbers are not decimal numbers, so for example commons-codec- 1.10.jar is newer than commons-codec-1.3.jar.</p>"},{"location":"recorder-user-guide/appendix_g/#step-1-create-a-webload-selenium-script","title":"Step 1: Create a WebLOAD Selenium Script","text":"<p>Do one of the following:</p> <ul> <li>Record a Selenium script using the Selenium IDE, and export it to WebLOAD. Refer to Recording and Exporting a Selenium Script (on page 390). It is recommended to record the script both in Selenium IDE and in WebLOAD simultaneously.</li> <li>Create a Selenium script in WebLOAD using the Selenium building blocks. Refer to Selenium Building Blocks (on page 361).</li> </ul>"},{"location":"recorder-user-guide/appendix_g/#recording-and-exporting-a-selenium-script","title":"Recording and Exporting a Selenium Script","text":""},{"location":"recorder-user-guide/appendix_g/#prerequisites-for-selenium-ide-export","title":"Prerequisites for Selenium IDE Export","text":"<ol> <li> <p>Install Firefox.</p> </li> <li> <p>Install the Selenium IDE plug-in for Firefox.</p> </li> <li> <p>Go to https://addons.mozilla.org/en-US/firefox/addon/selenium- ide-webload-formatter/ and install the WebLOAD plug-in for Selenium that enables exporting Selenium scripts to WebLOAD.</p> </li> </ol>"},{"location":"recorder-user-guide/appendix_g/#recording-with-selenium-ide","title":"Recording with Selenium IDE","text":"<ol> <li>Launch Selenium IDE by clicking the Selenium IDE button in the Firefox toolbar.</li> </ol> <p>The Selenium IDE is launched.</p> <ol> <li>Record a desired script in the Selenium IDE.</li> </ol> <p></p> <p>Note: It is possible to record the same script both in Selenium and in WebLOAD simultaneously.</p> <ol> <li> <p>After you finish recording, export the Selenium script to WebLOAD format as follows:</p> </li> <li> <p>In the Selenium IDE, select Export Test Case As &gt; WebLOAD JavaScript.</p> </li> </ol> <p></p> <ol> <li>Enter a name for the script. The script is saved as a WebLOAD .js file.</li> </ol> <p>Note that the .js file contains a WebLOAD command, reportStatistics, which appears periodically throughout the script. The command instructs WebLOAD to collect navigation timing statistics from the browser regarding the current page.</p> <p>Note: By default, WebLOAD reports navigation timing statistics as an average across all pages accessed by the Selenium Driver. If you wish to also display the statistics for a particular page separately, use a modified reportStatistics command, as described in Selenium Report Statistics (on page 363).</p>"},{"location":"recorder-user-guide/appendix_g/#step-2-create-a-webload-recorder-project-file-from-the-selenium-script","title":"Step 2: Create a WebLOAD Recorder Project File from the Selenium Script","text":"<p>Perform one of the following:</p> <ul> <li>Automatic Conversion to a Project File</li> <li>Manual Conversion to a Project File</li> </ul>"},{"location":"recorder-user-guide/appendix_g/#automatic-conversion-to-a-project-file","title":"Automatic Conversion to a Project File","text":"<ol> <li>In the WebLOAD Recorder, click Open in the File tab of the ribbon and select the JavaScript .js file you exported from Selenium.</li> </ol> <p>The Open message appears.</p> <p></p> <ol> <li>Click Yes to convert the JavaScript file to a WebLOAD Recorder project file.</li> </ol>"},{"location":"recorder-user-guide/appendix_g/#manual-conversion-to-a-project-file","title":"Manual Conversion to a Project File","text":"<ol> <li> <p>Open the JavaScript .js file you exported from Selenium, in a text browser such as Notepad.</p> </li> <li> <p>Copy the contents of the file to the clipboard.</p> </li> <li> <p>In the WebLOAD Recorder, select New Project in the File tab of the ribbon.</p> </li> <li> <p>Click Full Script in the Home tab of the ribbon.</p> </li> <li> <p>Paste the copied contents into the JavaScript View pane.</p> </li> <li> <p>Save the project as a .wlp file.</p> </li> </ol>"},{"location":"recorder-user-guide/appendix_g/#step-3-edit-both-scripts","title":"Step 3: Edit Both Scripts","text":"<p>As mentioned above, it is possible to record the same actions both in Selenium and in WebLOAD simultaneously. Whether you do so or not, after creating a WebLOAD script that parallels the Selenium script, edit both scripts as desired.</p> <p>At this point it is recommended to give the transactions in each of the two scripts different distinctive names so that you will be able to easily distinguish between the statistics of each when viewing the test results. For example, give the login action the following names:</p> <ul> <li>Selenium_user_login \u2013 in the Selenium script</li> <li>WL_user_login \u2013 in the WebLOAD script</li> </ul>"},{"location":"recorder-user-guide/appendix_g/#step-4-run-both-scripts-in-a-test-session","title":"Step 4: Run Both Scripts in a Test Session","text":"<ol> <li> <p>In the WebLOAD Console, define a load session template that does the following:</p> </li> <li> <p>Runs the Selenium script with a single user.</p> </li> <li>Runs the regular WebLOAD script with many users.</li> </ol> <p>Note: For instructions on how to define two different scripts in a single template, refer to Adding a New Script/Mix to the Template, in the WebLOAD\u2122 Console User\u2019s Guide.</p> <ol> <li>Run the load session.</li> </ol>"},{"location":"recorder-user-guide/appendix_g/#step-5-view-the-test-results","title":"Step 5: View the Test Results","text":"<p>View the load session test results in the WebLOAD Console, WebLOAD Analytics, or the WebLOAD Web Dashboard.</p> <p>The following table describes the navigation timing measurements. These measurements are gathered by WebLOAD\u2019s reportStatistics command. By default, these measurements report navigation timing statistics as an average across all pages for which the reportStatistics command was invoked.</p> <p>If you added an optional Page Name parameter to a reportStatistics command (refer to Selenium Report Statistics on page 363), the resultant measurement names will be displayed as -. Thus for example, the measurement Selenium Redirect \u2013 Home Page displays the redirect time for the home page. <p>Note that in all navigation timing measurements, time is reported in units of seconds.</p> Measurement Name Type Definition Selenium Redirect Time Timer <p>Redirection Time.</p><p>The time from redirectStart to redirectEnd.</p> Selenium App Cache Time Timer <p>Fetch from cache, if relevant.</p><p>The time from redirectEnd to fetchStart.</p> Selenium DNS Time Timer <p>DNS Lookup time.</p><p>The time from domainLookupStart to domainLookupEnd.</p> Selenium Connect Time Timer <p>TCP Connect time.</p><p>The time from connectStart to connectEnd.</p> Selenium Request Time Timer <p>Request until first-byte.</p><p>The time from requestStart to responseStart.</p> Selenium First Byte Time Timer <p>The time from navigationStart to responseStart.</p><p>Note that the First Byte is calculated since navigation start, and not since request end as in WebLOAD.</p> Selenium Page Response Time Timer <p>Response download time. The time from responseStart to</p><p>responseEnd.</p> Selenium domInteractive Time Timer The time from navigationStart to domInteractive. Selenium domContentLoaded Time Timer <p>The time from navigationStart to</p><p>domContentLoadedEventStart.</p><p>Note that this measures the time until domContentLoadedEvent-Start but not event end, meaning until all content is loaded, but not including the javascript execution.</p> Selenium Processing Time Timer The time from load responseEnd to loadEventStart. Selenium onLoad Time Timer The time from loadEventStart to loadEventEnd. Selenium Full Page Time Timer The time from navigationStart to loadEventEnd. <p>The following figure explains the various timing attributes listed in Table 104.</p> <p></p>"},{"location":"recorder-user-guide/appendix_h/","title":"Glossary","text":"Glossary Term Description AAT An older, obsolete WebLOAD utility that was used for recording web session activities as a JavaScript file. It is replaced by WebLOAD Recorder. Aborted Rounds The number of times the Virtual Clients started to run a script but did not complete the script, during the last reporting interval. This might be due to a session being stopped either automatically or manually by the user. Script Specification of the sequence of HTTP protocol calls sent by Virtual Clients to the SUT (System Under Test). scripts are written in JavaScript. You can either write scripts as a text file or generate them automatically using the WebLOAD Recorder. Application Being Tested (ABT) See SUT. Attempted Connections The total number of times the Virtual Clients attempted to connect to the SUT during the last reporting interval. Automatic Transaction counters <p>If you have Automatic Transactions enabled, WebLOAD creates three counters for each GET and POST statement in the script:</p><p>- The total number of times it occurred</p><p>- The number of times it succeeded</p><p>- The number of times it failed during the last reporting interval.</p> Average For timers, average is the total amount of time counted by the timer (not the elapsed time) divided by the Count (that is, the total number of readings). For example, the average for Transaction Time is the amount of time it took to complete all the successful transactions, divided by the number of successful transactions (the Count). Built-in Timer A timer measures the time required to perform a given task. WebLOAD supports both programmed timers and built-in timers. ROUND TIME is a built-in timer. The ROUND TIME is the time needed for one complete execution of a script. Connect Time <p>The time it takes for a Virtual Client to connect to the System Under Test (the SUT), in seconds. In other words, the time it takes from the beginning of the HTTP request to the TCP/IP connection.</p><p>The value posted in the Current Value column is the average time it took a Virtual Client to connect to the SUT during the last reporting interval.</p><p>If the Persistent Connection option is enabled, there may not be a value for Connect Time because the HTTP connection remains open between successive HTTP requests.</p> Connection Speed (Bits Per Second) <p>The number of bits transmitted back and forth between the Virtual Clients and the System Under Test (SUT), divided by the time it took to transmit those bits, in seconds.</p><p>You can set the Virtual Clients to emulate a particular connection speed during the test, either by using the Variable Connection Speed settings, or by coding the connection speed in the script.</p><p>If a connection speed is specified for the test, WebLOAD reports it in the Statistics Report.</p><p>The value posted in the Current Value column is the number (sum) of bits passed per second during the last reporting interval. It should match, very closely, the connection speed you specified for the test.</p> Console <p>The WebLOAD component that manages the test session.</p><p>The Console performs the following:</p><p>- Configures Load Session hosts and scripts</p><p>- Schedules Load Session scripts</p><p>- Configures Goal\u2013Oriented test sessions</p><p>- Monitors the application's performance under the generated load</p><p>- Manages the Load Session as it is running, allowing you to pause, stop, and continue Load Session components as needed</p><p>- Displays the current performance of the SUT</p><p>- Provides a final performance reports for Probing Clients and Virtual Clients</p><p>- Manages exporting of performance reports</p> Count (For timers only.) The  total number of readings (the number of times the item being timed has  occurred) for the timed statistic since the beginning of the test. For  example, for Transaction Time, Count shows the number of transactions that  have been completed. Current  Slice The value posted for this reporting  interval in the Statistics Report main window. Current  Slice Average For per time unit statistics and counters, average is the total of  all of the current values for the last reporting interval, divided by the  number of readings.  For timers, average is the  total amount of time counted by the timer (not the elapsed time), divided by  the Count (that is, the total number of readings for the last reporting  interval). For example, the average for Transaction Time is the amount of  time it took to complete all the successful transactions in the last  reporting interval, divided by the number of successful transactions (the  Current Slice Count). Current  Slice Count (For timers only.) The total number of  readings (the number of times the item being timed has occurred) for the  timed statistic for the last reporting interval. For example, for Transaction  Time, Current Slice Count shows the number of transactions that have been  completed over the last reporting interval. Current  Slice Max The highest value reported for this statistic over the last reporting  interval. Current  Slice Min The lowest value reported for this statistic over the last reporting  interval. Current  Slice Standard Deviation The average amount the measurement for this statistic varies from the  average over the last reporting interval. Current  Slice Sum The aggregate or total  value for this statistic in this script over the last reporting interval. DNS Lookup  Time The time it takes to  resolve the host name and convert it to an IP address by calling the DNS  server. Failed Connections The total number of times  the Virtual Clients tried to connect to the SUT but were unsuccessful, during  the last reporting interval.  This number is always less  than or equal to the number of failed hits because hits can fail for reasons  other than a failed connection. Failed Hits The total number of times the Virtual Clients made an HTTP request but did not receive the correct HTTP response from the SUT during the last reporting interval. Note that each request for each gif, jpeg, html file, etc., is a single hit. Failed Hits Per Second <p>The number of times the Virtual Clients did not obtain the correct HTTP response, divided by the elapsed time, in seconds.</p><p>The value posted in the Current Value column is the number (sum) of unsuccessful HTTP requests per second during the last reporting interval.</p> Failed Pages Per Second <p>The number of times the Virtual Clients did not obtain the correct response to an upper level request, divided by the elapsed time, in seconds.</p><p>The value posted in the Current Value column is the number (sum) of unsuccessful requests per second during the last reporting interval.</p> Failed Rounds The total number of times the Virtual Clients started but did not complete the script during the last reporting interval. Failed Rounds Per Second The number of times the Virtual Clients started but did not complete an iteration of the script, divided by the elapsed time, in seconds. The value posted in the Current Value column is the number (sum) of failed iterations of the script per second during the last reporting interval. First Byte The time it takes a Virtual Client to receive the first byte of data. Gallery See Templates Gallery. Goal\u2013Oriented Test <p>A WebLOAD component enabling you to define the performance goals required, and view the status of your application when it is operating under this performance goal. WebLOAD provides a Goal\u2013Oriented Test Wizard for configuring these performance goals. WebLOAD automatically accelerates the number of Virtual Clients accessing your website until you meet your performance goal.</p><p>Note: The Goal-Oriented Test Wizard was previously called the Cruise Control Wizard.</p> Goal\u2013Oriented Test Wizard See Goal\u2013Oriented Test. Hit Time <p>The time it takes to complete a successful HTTP request, in seconds. Each request for each gif, jpeg, html file, etc., is a single hit. The time of a hit is the sum of the Connect Time, Send Time, Response Time, and Process Time.</p><p>The value posted in the Current Value column is the average time it took to make an HTTP request and process its response during the last reporting interval.</p> Hits <p>The total number of times the Virtual Clients made HTTP requests to the System Under Test (SUT) during the last reporting interval.</p><p>For example, a Get statement for a URL retrieves a page. The page can include any number of graphics and contents files. Each request for each gif, jpeg, html file, etc., is a single hit.</p> Hits Per Second <p>The number of times the Virtual Clients made an HTTP request, divided by the elapsed time, in seconds. Each request for each gif, jpeg, html file, etc. is a single hit.</p><p>The value posted in the Current Value column is the number (sum) of HTTP requests per second during the last reporting interval.</p> Host A computer connected via a network, participating in a test session. Each Host in a test session has assigned tasks. A host can act as either a Load Machine or a Probing Client Machine. All hosts participating in a test session must be accessible to the Console over a network. Therefore they must run TestTalk, the network agent. HTTP Response Status <p>WebLOAD creates a row in the Statistics Report for each kind of HTTP status code it receives as an HTTP response from the SUT (redirection codes, success codes, server error codes, or client error codes).</p><p>The value posted is the number of times the Virtual Clients received that status code during the last reporting interval.</p> Integrated Report A single configurable report that can integrate both standard performance data, and data from the NT Performance Monitor. This report gives you a more complete picture of the performance of your application. The data to be monitored and the data to be displayed in the report are both configurable in the Console. Internet Productivity Pack (IPP) Provides a set of protocol implementations enabling you to load-test your application using these protocols. Java and ActiveX counters <p>You can add function calls to your scripts that enable you to instantiate and call methods and properties in Java and ActiveX components (see the WebLOAD Scripting Guide). If there are ActiveX or Java function calls in the script that you are running, WebLOAD reports three counters for them in the Statistics Report:</p><p>- The total number of times it occurred</p><p>- The number of times it succeeded</p><p>- The number of times it failed during the last reporting interval.</p><p>The row heading in the Statistics Report is the name of the function call.</p> Java and ActiveX timers <p>You can add function calls to your scripts that enable you to instantiate and call methods and properties in Java and ActiveX components (see the WebLOAD Scripting Guide). If there are ActiveX or Java function calls in the script you are running, WebLOAD reports timers for them in the Statistics Report.</p><p>The timer value is the average amount of time it took to complete the function call, in seconds, during the last reporting interval.</p><p>The row heading in the Statistics Report is the name of the function call.</p> Load Generator The component of the Load Machine that generates Virtual Clients. Load Generators have the task of bombarding the System Under Test with HTTP protocol call requests as defined in the script. WebLOAD assesses the application's performance by measuring the response time experienced by the Virtual Clients. The number of Virtual Clients at any given moment is determined by the user. Load Generator Machine See Load Machine. Load Machine A host that runs Load Generators. Load Generators bombard the application under test with a large load, to enable complete scalability and integrity testing. Load Session <p>A Load Session includes both the complete Load Template and the results obtained while running that Load Session. A Load Template consists of information about the hosts and scripts participating in the current Load Session. The Load Template will also include scheduling information. The complete Load Template is illustrated in the Session Tree. Storing a Load Template saves you time when repeatedly running WebLOAD with the same, or even a similar network configuration, since you don't have to recreate your Load Template from scratch each time you want to start working.</p><p>Storing Load Session results can be useful when you want to examine results from multiple test sessions or for analyzing test session results.</p> Load Size The number of Virtual Clients running during the last reporting interval. Load Template A Load Template contains the complete Load Session definition, without the test results. A Load Template includes information about the participating hosts and the scripts used in the current Load Session. The definition also includes scheduling information and the configuration of the Server Monitor and Integrated Reports. The complete Load Template is illustrated in the Session Tree. Storing a Load Template saves you time when repeatedly running WebLOAD with the same, or even a similar network configuration, since you do not have to recreate your Load Template from scratch each time you rerun a test. Page Time <p>The time it takes to complete a successful upper level request, in seconds. The Page Time is the sum of the Connection Time, Send Time, Response Time, and Process Time for all the hits on a page.</p><p>The value posted in the Current Value column is the average time it took the Virtual Clients to make an upper level request and process its response during the last reporting interval.</p> Pages The total number of times the Virtual Client made upper level requests, both successful and unsuccessful, during the last reporting interval. Pages Per Second <p>The number of times the Virtual Clients made upper level requests divided by the elapsed time, in seconds.</p><p>The value posted in the Current Value column is the number (sum) of requests per second during the last reporting interval.</p> Per Time Unit statistics Ratios that calculate an average value for an action or process. For example: Transactions Per Second, Rounds Per Second. Portfolio A Portfolio of reports enables you to generate a single, inclusive report that contains all the charts generated by the templates included in the portfolio. Probing Client A software program which \"bombards\" the SUT as a single Virtual Client, to further measure the performance of the SUT. WebLOAD generates exact values for Probing Client performance. Probing Client Machines Hosts running Probing Client software simulating one Virtual Client, and running at the same time as Load Machines. Probing Client software See Probing Client. Process Time <p>The time it takes WebLOAD to parse an HTTP response from the SUT and then populate the document-object model (DOM), in seconds.</p><p>The value posted in the Current Value column is the average time it took WebLOAD to parse an HTTP response during the last reporting interval.</p> Receive Time The elapsed time between receiving the first byte and the last byte. Report Portfolio See Portfolio. Resource Manager <p>Distributes and circulates WebLOAD testing resources (Virtual Clients and Probing Clients) amongst users on a \"need to use\" basis. The Resource Manager is packaged with a maximum number of Virtual Clients, Probing Clients and Connected Workstation ports, as defined by the WebLOAD package.</p><p>With the Resource Manager, every WebLOAD Console can operate in Standalone Workstation mode or Connected Workstation mode.</p> Response Data Size <p>The size, in bytes, of all the HTTP responses sent by the SUT during the last reporting interval.</p><p>WebLOAD uses this value to calculate Throughput (bytes per second).</p> Response Time <p>The time it takes the SUT to send the object of an HTTP request back to a Virtual Client, in seconds. In other words, the time from the end of the HTTP request until the Virtual Client has received the complete item it requested.</p><p>The value posted in the Current Value column is the average time it took the SUT to respond to an HTTP request during the last reporting interval.</p> Responses <p>The number of times the SUT responded to an HTTP request during the last reporting interval.</p><p>This number should match the number of successful hits.</p> Round Time <p>The time it takes one Virtual Client to finish one complete iteration of a script, in seconds.</p><p>The value posted in the Current Value column is the average time it took the Virtual Clients to finish one complete iteration of the script during the last reporting interval.</p> Rounds The total number of times the Virtual Clients attempted to run the script during the last reporting interval. Rounds Per Second <p>The number of times the Virtual Clients attempted to run the script, divided by the elapsed time, in seconds.</p><p>The value posted in the Current Value column is the number (sum) of attempts (both successful and unsuccessful) per second during the last reporting interval.</p> Send Time <p>The time it takes the Virtual Client to write an HTTP request to the SUT, in seconds.</p><p>The value posted in the Current Value column is the average time it took the Virtual Clients to write a request to the SUT during the last reporting interval.</p> Server Performance Measurements <p>If you selected Performance Monitor statistics for the report, WebLOAD creates a row for them and reports their values in the Statistics Report.</p><p>For definitions of the statistics, see the Server Monitor Definition dialog box.</p><p>Be selective when choosing server performance measurements , otherwise the system resources required to manage the data might affect the Console.</p> Session Tree A graphic representation of a Load Template and status. It illustrates the different components of a test session, including Load Machines and Probing Clients, the scripts that they execute, and their status. Single Client See Probing Client. Standard Deviation The average amount the measurement varies from the average since the beginning of the test. Successful Connections <p>The total number of times the Virtual Clients were able to successfully connect to the SUT during the last reporting interval.</p><p>This number is always less than or equal to the number of successful hits because several hits might use the same HTTP connection if the Persistent Connection option is enabled.</p> Successful Hits The total number of times the Virtual Clients made an HTTP request and received the correct HTTP response from the SUT during the last reporting interval. Each request for each gif, jpeg, html file, etc., is a single hit. Successful Hits Per Second <p>The number of times the Virtual Clients obtained the correct HTTP response to their HTTP requests divided by the elapsed time, in seconds.</p><p>The value posted in the Current Value column is the number (sum) of successful HTTP requests per second during the last reporting interval.</p> Successful Pages Per Second The value posted in the Current Value column is the number (sum) of successful requests per second during the last reporting interval. Successful Rounds The total number of times the Virtual Clients completed one iteration of the script during the last reporting interval. Successful Rounds Per Second <p>The number of times the Virtual Clients completed an entire iteration of the script, divided by the elapsed time, in seconds.</p><p>The value posted in the Current Value column is the number (sum) of successful iterations of the script per second during the last reporting interval.</p> SUT The system running the Web application currently under test. The SUT (System Under Test) is accessed by clients through its URL address. The SUT can reside on any machine or on multiple machines, anywhere on the global Internet or your local intranet. Template See Load Template. Templates Gallery The Templates Gallery is a single entity that contains predefined templates, user-defined templates, and portfolios. Test Program See Test Script. Test Script The script. This defines the test scenario used in your Load Session. Scripts are written in JavaScript. Test Template See Load Template. TestTalk The network agent. This program enables communication between the Console and the host computers participating in the test. Throttle Control A WebLOAD component that enables you to dynamically change the Load Size while a test session is in progress. Throughput (Bytes Per Second) The average number of bytes per second transmitted from the SUT to the Virtual Clients running the script during the last reporting interval. In other words, this is the amount of the Response Data Size, divided by the number of seconds in the reporting interval. Time to First Byte The time that elapsed since a request was sent until the Virtual Client received the first byte of data. User-defined Automatic Data Collection <p>If you have Automatic Data Collection enabled, WebLOAD creates three counters for each GET and POST statement in the script:</p><p>- The total number of times the Get and Post statements occurred</p><p>- The number of times the statements succeeded</p><p>- The number of times the statements failed during the last reporting interval.</p> User-defined counters <p>Your own counters that you can add to scripts using the SendCounter() and the SendMeasurement() functions (see the WebLOAD Scripting Guide). If there is a user-defined counter in the script that you are running, WebLOAD reports the counter\u2019s values in the Statistics Report.</p><p>The row heading is the name (argument) of the counter. That is, the row heading is the string in parenthesis in the SendCounter() or SendMeasurement() function call.</p><p>The value reported is the number of times the counter was incremented during the last reporting interval.</p> User-defined timer <p>Timers that you can add to scripts to keep track of the amount of time it takes to complete specific actions (see the WebLOAD Scripting Guide). If there are any timers in the scripts that you are running, WebLOAD reports their values in the Statistics Report.</p><p>The row heading is the name (argument) of the timer. That is, the row heading is the string in parenthesis in the SetTimer() function call. The timer represents the time it takes to complete all the actions between the SetTimer() call and its corresponding SendTimer() call, in seconds.</p><p>The value posted is the average time it took a Virtual Client to complete the actions between the pair of timer calls, in seconds, during the last reporting interval.</p> User-defined Transaction counters <p>Transaction functions that you can add to scripts for functional tests (see the WebLOAD Scripting Guide). If there is a user-defined transaction function in the script that you are running, WebLOAD reports three counters for it in the Statistics Report:</p><p>- The total number of times the transaction occurred</p><p>- The number of times a transaction succeeded</p><p>- The number of times a transaction failed during the last reporting interval.</p><p>The row heading is the name (argument) of the transaction. That is, the row heading is the string in parenthesis in the BeginTransaction() function call.</p> User-defined Transactions timers <p>A timer for user-defined transaction functions. If there is a user-defined transaction function in the script that you are running, WebLOAD reports a timer for it in the Statistics Report.</p><p>The row heading is the name (argument) of the user- defined transaction. That is, the row heading is the string in parenthesis in the BeginTransaction() function call.</p><p>The timer represents the average time it took to complete all the actions between the BeginTransaction() call and its corresponding EndTransaction() call, in seconds, during the last reporting interval.</p> Virtual Client <p>Artificial entities run by Load Generators. Each such entity is a perfect simulation of a real client accessing the System Under Test (SUT) through a Web browser.</p><p>Virtual Clients generate HTTP calls that access the SUT. The Load Generators that run Virtual Clients can reside anywhere on the Internet or on your local intranet. scripts are executed by all the Virtual Clients in parallel, achieving simultaneous access to the SUT. The size of the load on your SUT is determined by the number of Virtual Clients being generated. You may define as many Virtual Clients as needed, up to the maximum</p><p>supported by your WebLOAD \u201cpackage.\u201d</p> WebLOAD Analytics WebLOAD Analytics enables you to analyze data, and create custom, informative reports after running a WebLOAD test session. WebLOAD Console See Console. WebLOAD Recorder An easy-to-use tool for recording, creating, and authoring protocol scripts for the WebLOAD environment. WebLOAD Load Template See Load Template. WebLoad Session See Load Session. WebLOAD Wizard A WebLOAD Wizard that steps you through the configuration process. Each screen of the WebLOAD Wizard contains text explaining the configuration process. The WebLOAD Wizard enables you to create a basic Load Template. After using the demo, you can use the Console ribbon to add functionality not available through the WebLOAD Wizard. WebRM See Resource Manager."},{"location":"recorder-user-guide/before_you_begin/","title":"Before You Begin using WebLOAD Recorder","text":"<p>This section provides information before you begin using WebLOAD Recorder.</p>"},{"location":"recorder-user-guide/before_you_begin/#before-you-begin","title":"Before You Begin","text":"<p>Before you begin recording scripts using WebLOAD Recorder, there are configuration steps that you may have to complete, depending on the Web application you want to test.</p> <p>If you plan to record a script that includes retrieving a page that you accessed previously during that script, you should clear the cache and cookies in the browser. See Clearing the Cache and Cookies in Your Browser (on page 13).</p> <p>When you have completed these startup steps, you can either start working with WebLOAD Recorder immediately, or you can configure the recording options first. For more information about configuring the recording options, see *Configuring the Recording and Script Generation Options* (on page 174).</p>"},{"location":"recorder-user-guide/before_you_begin/#clearing-the-cache-and-cookies-in-your-browser","title":"Clearing the Cache and Cookies in Your Browser","text":"<p>If your browser is set to use a cache file, steps such as loading a page that you have already visited are bypassed when you record a script.</p> <p>If your browser loads a page from the cache file, that action is not recorded because retrieving a file from the cache is not an HTTP protocol call. Typically, this behavior is appropriate because you want to emulate the behavior of an actual browser during a test. However, if you want each visit to a page during a test to connect through an actual GET statement, you must work without a cache file when you record a script.</p> <p>When you start recording, WebLOAD automatically changes the browser\u2019s proxy settings to clear the cache and cookies, according to the definitions in the Recording and Script Generation dialog box (see *Configuring the Recording and Script Generation Options* on page 174). This enables WebLOAD Recorder to record all HTTP traffic. If you do not want to clear the cache and cookies automatically, you can manually clear the cache and cookies in your browser by following the instructions provided by your browser.</p>"},{"location":"recorder-user-guide/before_you_begin/#configuring-the-proxy-value-for-your-browser","title":"Configuring the Proxy Value for Your Browser","text":"<p>Before you begin recording scripts using WebLOAD Recorder, your browser must be configured to use a specific proxy setting. This is usually done automatically when opening WebLOAD Recorder, but can also be done manually in the browser.</p> <p>Note: If your system is already configured to use a proxy setting, WebLOAD will preserve this setting for internal use, and will restore the setting after recording is complete.</p> <p>The procedures described here describe how to configure the proxy server for Internet Explorer, Netscape Navigator, and Mozilla Firefox. If you are using a different browser, read through the proxy setting procedures and modify them as necessary for configuring your browser.</p> <p>]Note: If your system is already using the WebLOAD Recorder default port (9884) for another application, you may designate an alternate port number (see *Setting the Proxy Options* on page 200). </p> <p>When recording is finished, reset the browser proxy to its original setting.</p>"},{"location":"recorder-user-guide/before_you_begin/#configuring-the-proxy-value-in-internet-explorer","title":"Configuring the Proxy Value in Internet Explorer","text":"<p>To configure the proxy value in Internet Explorer:</p> <ol> <li> <p>Open WebLOAD Recorder (see Starting WebLOAD Recorder on page 34).</p> </li> <li> <p>Locate the Proxy Port number in the Recording and Script Generation Options dialog box \u2013 Proxy Options tab \u2013 Recording Proxy Options frame. Usually this port number is 9884 (see Setting the Proxy Options on page 200).</p> </li> <li> <p>Determine if your organization has a Proxy Server that must be used to access the Internet when you record scripts.</p> </li> <li> <p>If your organization has a Proxy Server:</p> </li> <li>Determine the proxy name and port number.</li> <li>If the proxy port that it uses is not the proxy port number found in the Recording and Script Generation Options dialog box \u2013 Proxy Options tab \u2013 Recording Proxy Options frame, go to step 6.</li> <li> <p>If the proxy port number is the proxy port number found in the Recording and Script Generation Options dialog box \u2013 Proxy Options tab \u2013 Recording Proxy Options frame, go to step 7.</p> </li> <li> <p>If your organization does not use a Proxy Server, go to step 7.</p> </li> <li> <p>Configure your organization\u2019s proxy as the application proxy in WebLOAD Recorder:</p> </li> <li> <p>Open WebLOAD Recorder.</p> </li> <li> <p>Click Recording and Script Generation Options in the Tools tab of the ribbon and then select the Proxy Options tab.</p> </li> <li> </li> <li> <p>In the HTTP Proxy/Port fields, type the name and port number of your organization\u2019s proxy.</p> </li> <li> <p>Click OK.</p> </li> <li> <p>Open Internet Explorer.</p> </li> <li> <p>Select Tools &gt; Internet Options and then select the Connections tab.</p> </li> <li> <p>Click LAN Settings.</p> </li> <li> <p>In the Local Area Network LAN Settings dialog box, select the Use a proxy server option.</p> </li> <li> <p>In the Address field, type localhost.</p> </li> <li> <p>In the Port field, type the proxy port number found in the Recording and Script Generation Options dialog box \u2013 Proxy Options tab \u2013 Recording Proxy Options frame.</p> </li> <li> <p>Verify that the Bypass proxy server for local addresses checkbox is cleared.</p> </li> <li> <p>Click OK.</p> <p>You are finished configuring your proxy value.</p> </li> </ol>"},{"location":"recorder-user-guide/before_you_begin/#select-the-use-the-following-definitions-for-the-applications-proxy-server","title":"Select the Use the following definitions for the application\u2019s proxy server","text":"<p>option.</p>"},{"location":"recorder-user-guide/before_you_begin/#configuring-the-proxy-value-in-netscape-navigator","title":"Configuring the Proxy Value in Netscape Navigator","text":"<p>To configure the proxy value in Netscape Navigator:</p> <ol> <li> <p>Open WebLOAD Recorder (see Starting WebLOAD Recorder on page 34).</p> </li> <li> <p>Locate the Proxy Port number in the Recording and Script Generation Options dialog box \u2013 Proxy Options tab \u2013 Recording Proxy Options frame. Usually this port number is 9884 (see Setting the Proxy Options on page 200).</p> </li> <li> <p>Determine if your organization has a Proxy Server that must be used to access the Internet when you record scripts.</p> </li> <li> <p>If your organization has a Proxy Server:</p> </li> <li> <p>Determine the proxy name and port number.</p> </li> <li>If the proxy port that it uses is not the proxy port number found in the Recording and Script Generation Options dialog box \u2013 Proxy Options tab \u2013 Recording Proxy Options frame, go to step 6.</li> <li> <p>If the proxy port number is the proxy port number found in the Recording and Script Generation Options dialog box \u2013 Proxy Options tab \u2013 Recording Proxy Options frame, go to step 7.</p> </li> <li> <p>If your organization does not use a Proxy Server, go to step 7.</p> </li> <li> <p>Configure your organization\u2019s proxy as the application proxy in the WebLOAD Recorder:</p> </li> <li> <p>Open WebLOAD Recorder.</p> </li> <li> <p>Click Recording and Script Generation Options in the Tools tab of the ribbon and then select the Proxy Options tab.</p> </li> <li> </li> <li> <p>In the HTTP Proxy/Port fields, type the name and port number of your organization\u2019s proxy.</p> </li> <li> <p>Click OK.</p> </li> <li> <p>Open Netscape Navigator and do one of the following:</p> </li> <li> <p>If you are using Navigator 3.x, select Options &gt; Network Preferences.</p> </li> <li> <p>If you are using Navigator 4.x, select Edit &gt; Preferences.</p> </li> <li> <p>Within Netscape Navigator, do one of the following:</p> </li> <li> <p>If you are using Navigator 3.x, in the Preferences dialog box, select the Proxies tab.</p> </li> <li> <p>If you are using Navigator 4.x, in the Preferences dialog box, under Category, expand Advanced and then select Proxies.</p> </li> <li> <p>Select the Manual Proxy Configuration option.</p> </li> <li> <p>In the Manual Proxy Configuration dialog box, in the HTTP Address field, type localhost.</p> </li> <li> <p>In the corresponding Port Number field, type the proxy port number found in the Recording and Script Generation Options dialog box \u2013 Proxy Options tab \u2013 Recording Proxy Options frame.</p> </li> <li> <p>Click OK to close the Manual Configuration dialog box.</p> </li> <li> <p>Click OK to close the Preferences dialog box. You are finished configuring your proxy value.</p> </li> </ol>"},{"location":"recorder-user-guide/before_you_begin/#select-the-use-the-following-definitions-for-the-applications-proxy-server_1","title":"Select the Use the following definitions for the application\u2019s proxy server","text":"<p>option.</p>"},{"location":"recorder-user-guide/before_you_begin/#configuring-the-proxy-value-in-mozilla-firefox","title":"Configuring the Proxy Value in Mozilla Firefox","text":"<p>To configure the proxy value in Mozilla Firefox:</p> <ol> <li> <p>Open WebLOAD Recorder (see Starting WebLOAD Recorder on page 34).</p> </li> <li> <p>Locate the Proxy Port number in the Recording and Script Generation Options dialog box \u2013 Proxy Options tab \u2013 Recording Proxy Options frame. Usually this port number is 9884 (see Setting the Proxy Options on page 200).</p> </li> <li> <p>Determine if your organization has a Proxy Server that must be used to access the Internet when you record scripts.</p> </li> <li> <p>If your organization has a Proxy Server:</p> </li> <li> <p>Determine the proxy name and port number.</p> </li> <li>If the proxy port that it uses is not the proxy port number found in the Recording and Script Generation Options dialog box \u2013 Proxy Options tab \u2013 Recording Proxy Options frame, go to step 6.</li> <li> <p>If the proxy port number is the proxy port number found in the Recording and Script Generation Options dialog box \u2013 Proxy Options tab \u2013 Recording Proxy Options frame, go to step 7.</p> </li> <li> <p>If your organization does not use a Proxy Server, go to step 7.</p> </li> <li> <p>Configure your organization\u2019s proxy as the application proxy in the WebLOAD Recorder:</p> </li> <li> <p>Open WebLOAD Recorder.</p> </li> <li> <p>Click Recording and Script Generation Options in the Tools tab of the ribbon and then select the Proxy Options tab.</p> </li> <li> </li> <li> <p>In the HTTP Proxy/Port fields, type the name and port number of your organization\u2019s proxy.</p> </li> <li> <p>Click OK.</p> </li> <li> <p>Open Mozilla Firefox.</p> </li> <li> <p>Select Tools &gt; Options.</p> </li> <li> <p>Click Advanced and then click the Network tab.</p> </li> <li> <p>In the Connection area, click Settings.</p> </li> <li> <p>Click Manual proxy configuration.</p> </li> <li> <p>In the HTTP Proxy field, type localhost.</p> </li> <li> <p>In the Port field, type the proxy port number found in the Recording and Script Generation Options dialog box \u2013 Proxy Options tab \u2013 Recording Proxy Options frame.</p> </li> <li> <p>Select the Use this proxy for all protocols checkbox.</p> </li> <li> <p>Click OK.</p> <p>You are finished configuring your proxy value.</p> </li> </ol>"},{"location":"recorder-user-guide/before_you_begin/#select-the-use-the-following-definitions-for-the-applications-proxy-server_2","title":"Select the Use the following definitions for the application\u2019s proxy server","text":"<p>option.</p>"},{"location":"recorder-user-guide/configuring_recorder_options/","title":"Configuring the WebLOAD Recorder Options","text":"<p>You can set the following WebLOAD Recorder configuration options:</p> <ul> <li>Default Project Options \u2013 Settings for WebLOAD Recorder that will be in effect for each script you create. These options are for the playback.</li> <li>Current Project Options \u2013 Settings that will override the Default Project Options settings.</li> <li>Recording and Script Generation Options \u2013 Settings that define the behavior of WebLOAD Recorder during the recording and script generation of a Web session.</li> <li>Settings \u2013 Settings for WebLOAD Recorder.</li> <li>Customize \u2013 Settings for the toolbar.</li> <li>Parameterization Manager \u2013 Settings for replacing a recorded static value in a script with a random value from a pool of values, or with a whole set of values from a file.</li> </ul>"},{"location":"recorder-user-guide/configuring_recorder_options/#configuring-the-default-and-current-project-options","title":"Configuring the Default and Current Project Options","text":"<p>The Project Options are settings for WebLOAD Recorder that will be in effect for each script you create.</p> <ul> <li>Default Project Options are settings that will be in effect for each script you create. Each script created or edited in WebLOAD Recorder is automatically assigned these defaults. You can modify these settings to your specifications.</li> <li>![ref13]Current Project Options are settings that will override the Default Project Options settings and affect only the currently open script. You can modify these settings to your specifications.</li> </ul>"},{"location":"recorder-user-guide/configuring_recorder_options/#notes","title":"Notes:","text":"<p>The Current Project Options dialog boxes are the same as the Default Project Options dialog boxes except for the title.</p> <p>You must be in Edit mode to modify the options. </p>"},{"location":"recorder-user-guide/configuring_recorder_options/#opening-the-default-and-current-project-options","title":"Opening the Default and Current Project Options","text":"<p>To open the Default Project Options dialog box:</p> <ul> <li>Click Default Project Options in the Tools tab of the ribbon,</li> </ul> <p>-Or-</p> <p>Select Default Project Options from the WebLOAD Recorder Home tab of the ribbon.</p> <p>The Default Project Options dialog box opens with the Sleep Time Control tab displayed.</p> <p></p> <p>To open the Current Project Options dialog box:</p> <ul> <li>Click Current Project Options in the Tools tab of the ribbon,</li> </ul> <p>-Or-</p> <p>Select Current Project Options from the WebLOAD Recorder Home tab of the ribbon,</p> <p>-Or-</p> <p>Right-click the Agenda root node in the Script Tree and select Current Project Options.</p> <p>The Current Project Options dialog box opens with the Sleep Time Control tab displayed.</p> <p></p> <p>The following table describes the tabs in the Default and Current Project Options dialog box.</p> <p>Table 14: Default and Current Project Options Dialog Box Tabs</p> Tab Description <p>Sleep Time Control</p><p>(default)</p> Define the behavior of Sleep time during script playback and debug. Sleep time is a pause to simulate the intermittent activity of real users. Pass/Fail Definition Define the test failure criteria in WebLOAD Recorder. Browser Parameters Define the Virtual Client behavior. Authentication Define the Global and Proxy authentication settings. HTTP Parameters Define the HTTP Client behavior on the HTTP protocol level. Browser Cache Define the type of cache and when the cache is cleared. Diagnostic Define the Diagnostic options that can be enabled while developing a script or for tracking problems in existing scripts. Java Options Define the Virtual Machine to be used."},{"location":"recorder-user-guide/configuring_recorder_options/#setting-passfail-definitions","title":"Setting Pass/Fail Definitions","text":"<p>Use the Pass/Fail Definition options to define test failure criteria in WebLOAD Recorder.</p> <p>To set the Pass/Fail Definition options:</p> <ol> <li> <p>Click Default/Current Project Options in the Tools tab of the ribbon. The Default/Current Project Options dialog box opens.</p> </li> <li> <p>Select the Pass/Fail Definition tab.</p> </li> </ol> <p>The Pass/Fail Definition tab moves to the front of the dialog box. </p> <p></p> <ol> <li> <p>Set test failure criteria. By default, WebLOAD Recorder will fail a test if a severe error occurs during the test run. You can also set WebLOAD Recorder to fail the test if a set numbers of errors or warnings are encountered.</p> </li> <li> <p>Click OK.</p> </li> </ol>"},{"location":"recorder-user-guide/configuring_recorder_options/#configuring-sleep-time-control-options","title":"Configuring Sleep Time Control Options","text":"<p>Sleep time is a pause to simulate the intermittent activity of real users. WebLOAD Recorder enables you to control the sleep time during run-time and set a script to execute with the sleep times recorded in the script, random sleep times, or no sleep times.</p> <p>To configure Sleep Time Control options:</p> <ol> <li> <p>Click Default/Current Project Options in the Tools tab of the ribbon. The Default/Current Project Options dialog box opens.</p> </li> <li> <p>Select the Sleep Time Control (default) tab. The Sleep Time Control tab moves to the front of the dialog box.</p> </li> </ol> <p></p> <ol> <li> <p>Specify the type of sleep to use when playing the script. There are four options:</p> </li> <li> <p>Select Sleep time as recorded to run the script with the delays corresponding to the natural pauses that occurred when recording the script.</p> </li> <li> <p>Select Ignore recorded sleep time (default) to eliminate any pauses when running the script and run a worst-case stress test.</p> </li> <li> <p>Select Set random sleep time and set the range of delays to represent a range of users.</p> </li> <li> <p>Select Set sleep time deviation and set the percentage of deviate from the recorded value to represent a range of users.</p> </li> <li> <p>Click OK.</p> </li> </ol>"},{"location":"recorder-user-guide/configuring_recorder_options/#setting-the-browser-parameters","title":"Setting the Browser Parameters","text":"<p>The Browser Parameters option enables you to define Virtual Client behavior.</p> <p>To set the Browser Parameters options:</p> <ol> <li> <p>Click Default/Current Project Options in the Tools tab of the ribbon. The Default/Current Project Options dialog box opens.</p> </li> <li> <p>Select the Browser Parameters tab.</p> </li> </ol> <p>The Browser Parameters tab moves to the front of the dialog box.</p> <p></p> <ol> <li> <p>To set the Browser and Version:</p> </li> <li> <p>Select the browser from the Select the browser drop-down list. An appropriate version automatically appears in the Select the version field.</p> </li> <li> <p>You can select an alternative version from the drop-down list, or click the Change  button to edit the version definition (see Editing Browser Version* Definitions (on page 164)).</p> </li> <li> <p>To simulate specific cache behaviors, select the DNS cache checkbox and SSL cache checkbox.</p> </li> <li> <p>To set Redirection limits:</p> </li> <li> <p>Select the Enable redirection checkbox.</p> </li> <li> <p>In the Redirection limit field, type or select the desired redirection limit. The default limit is 10.</p> </li> <li> <p>To enable a persistent connection to the server, select the Persistent connection checkbox.</p> </li> <li> <p>To set Gzip, select the Gzip support checkbox.</p> </li> <li> <p>To set character encoding:</p> </li> <li> <p>Select a character encoding type from the drop-down list.</p> </li> <li> <p>To enforce character encoding, select the Enforce character encoding checkbox.</p> </li> <li> <p>Click OK.</p> </li> </ol> <p>The following table describes the fields and buttons in the Browser Parameters tab.</p> Field Description Browser Type The browser type and user-agent setting specify the type of browser the Virtual Clients should emulate. By default, all Virtual Clients use the WebLOAD Recorder default browser agent. Select the browser You can set WebLOAD Recorder to emulate any of the standard browsers. Select the user-agent You can specify any specific application by supplying a custom user-agent that is included in all HTTP headers. Cache The types of cache to simulate. DNS Cache <p>Caches the IP addresses received from the domain name server, reducing the domain name resolution time.</p><p>Disable DNS caching if you want to include the time for domain name resolution in the WebLOAD performance statistics.</p> SSL Cache <p>Caches the SSL decoding keys received from an SSL server, so that WebLOAD Recorder only receives the key on the first SSL connection in each round. In subsequent connections, WebLOAD Recorder retrieves the key from cache. Enabling SSL Cache also reduces transmission time during SSL communication.</p><p>Disable SSL caching if you want to measure the transmission time of the decoding key in the WebLOAD performance statistics for each SSL connection.</p> Redirection Enable redirection Enables the redirection. Redirection limit Sets the redirection limit. Persistent Connection Persistent connection (keep-alive) When enabled, WebLOAD Recorder keeps an HTTP connection alive between successive accesses in the same round of the main script. Keeping a connection alive saves time between accesses. WebLOAD attempts to keep the connection alive unless you switch to a different server. However, some HTTP servers may refuse to keep a connection alive. You should not keep a connection alive if establishing the connection is part of the performance test. HTTP properties Gzip support <p>Sets the wlGlobals.AcceptEncodingGzip flag.</p><p>When this flag is set, WebLOAD Recorder behaves as follows:</p><p>1. For each request, sends the header \u201cAccept-Encoding: gzip, deflate\u201d. This informs the server that the client can accept zipped content.</p><p>2. When this header is turned on, the server MAY send a response with the header \u201ccontent-encoding: gzip\u201d or \u201ccontent-encoding: deflate\u201d. If either of these headers is sent, it means that the response is zipped/deflated and WebLOAD Recorder will unzip/inflate the content.</p><p></p><p>Note: Most servers will work correctly even if the client does not send the \u201cAccept-Encoding: gzip, deflate\u201d header.</p><p>Therefore, unless needed, it is recommended not to set the wlGlobals.AcceptEncodingGzip flag because it is performance heavy. However, some servers will fail if it is not sent. Microsoft Internet Explorer/Mozilla sends it by default.</p><p></p><p>You can manually code the script to send the \u201cAccept-Encoding: gzip, deflate\u201d header even if the wlGlobals.AcceptEncodingGzip flag is not set. In this case, if the server returns zipped content, WebLOAD Recorder will not unzip it.</p> Character Encoding Select the character encoding value Contains the value corresponding to the character set being used. The default value is Default (0), the regional settings of the computer. Enforce character encoding Indicates whether the parser should use the character set it parses in the HTML pages or override it using the value specified in the Select Character Encoding drop-down list. The default value is false (use the encoding from the HTML pages)."},{"location":"recorder-user-guide/configuring_recorder_options/#editing-browser-version-definitions","title":"Editing Browser Version Definitions","text":"<p>The available browser version list is appropriate for the browser type you select. You can add to the browser version list.</p> <p>Note: If you are working in the Current Project options dialog box, adding a browser version to the list only affects the current session. When you restart the application, the original browser version list is used. If you are working in the Default Project options dialog box, the updated browser version list is saved for future sessions as well.</p> <p>To add a browser version:</p> <ol> <li>Click the browse button in the Browser Type area on the Browser Parameters tab. The User Agent dialog box opens.</li> </ol> <p></p> <ol> <li> <p>Manually edit the version definition.</p> </li> <li> <p>Click OK.</p> </li> </ol>"},{"location":"recorder-user-guide/configuring_recorder_options/#setting-the-http-parameters","title":"Setting the HTTP Parameters","text":"<p>The HTTP Parameters option enables you to define HTTP client behavior on the HTTP protocol level.</p> <p>To set the HTTP Parameters options:</p> <ol> <li> <p>Click Default/Current Project Options in the Tools tab of the ribbon. The Default/Current Project Options dialog box opens.</p> </li> <li> <p>Select the HTTP Parameters tab. The HTTP Parameters tab appears at the front of the dialog box. </p> </li> </ol> <p></p> <ol> <li> <p>Set the HTTP version by clicking HTTP version 1.0 or HTTP version 1.1.</p> </li> <li> <p>Select one or more HTTP properties checkboxes.</p> </li> <li> <p>Click OK.</p> </li> </ol> <p>The following table describes the fields and buttons in the HTTP Parameters dialog box.</p> Field Description HTTP version The appropriate HTTP protocol version (for example \u201cHTTP/1.1\u201d). HTTP version 1.0 Sets the HTTP protocol version to 1.0. HTTP version 1.1 Sets the HTTP protocol version to 1.1. HTTP properties Multi IP support <p>Sets the wlGlobals.MultiIPSupport flag to indicate that the HTTP protocol version supports more than one IP address.</p><p>If this option is selected, WebLOAD takes all IP addresses defined on the Load Generator machine. However, you can exclude specific IP addresses by modifying the WebLOAD.ini configuration file.</p><p>To exclude certain IP addresses, open the WebLOAD.ini file in</p><p>\\bin and locate the following line:<p>EXCLUDED_IPS=\" \"</p><p>Enter the IP addresses you wish to exclude. If you enter multiple addresses, use a pipe delimiter between addresses as in the following example:</p><p>EXCLUDED_IPS=\"127.0.0.1 Encode form data <p>Sets the wlGlobals.EncodeFormdata flag.</p><p>In general, when an HTTP client (Microsoft Internet Explorer/Firefox or WebLOAD Recorder) sends a post request to the server, the data must be HTTP encoded. Special characters like blanks, \u201c&gt;\u201c signs, and so on, are replaced by \u201c%xx\u201d. For example, space is encoded as \u201c%20\u201d.</p><p>This encoding can be performance heavy for large data, so WebLOAD Recorder enables you to turn it off.</p><p>This should ONLY be done if you are sure that the data does not contain special characters. If it does, and the customer wants to improve performance via this flag, then you should replace the special characters within the script or use wlHttp.EncodeFormdata to set the flag for specific requests.</p> Accept language Sets the wlGlobals.AcceptLanguage flag. This flag defines a global value for the \u201cAccept-Language\u201d header which will be sent with each request. Some applications/servers will behave differently depending on the setting. It is a simple string and WebLOAD Recorder does not enforce any checks on the values. It is similar to the property in the sense that it is a wlGlobals/wlHttp setting that affects the value of request headers."},{"location":"recorder-user-guide/configuring_recorder_options/#setting-the-browser-cache","title":"Setting the Browser Cache","text":"<p>WebLOAD Recorder enables you to define the behavior of the cache that WebLOAD Console uses in order to simulate the behavior of a browser\u2019s cache. WebLOAD can cache JavaScript files, style sheets, images, applets, and XML files.</p> <p>To define the browser cache behavior:</p> <ol> <li>Click Default/Current Project Options in the Tools tab of the ribbon. The Default/Current Project Options dialog box opens.</li> <li>Select the Browser Cache tab.</li> </ol> <p>The Browser Cache tab moves to the front of the dialog box.</p> <p></p> <p>The following table describes the fields in the Browser Cache tab.</p> Field Description Browser cache types None All Virtual Clients simulate a browser with no available cache. Clear cache after each Request Defines that the cache will be cleared after each request. Check for newer version after each Request <p>Defines that WebLOAD will check for a newer version of the cached item after every request.</p><p>Whenever the engine has a request for a cached resource, the engine sends the request with an \u201cif-modified-since\u201d header. If the server responds with a 200 status, the engine will refresh the cache.</p> Clear cache after each Round Defines that the cache will be cleared after each script execution round. This is the default setting. Check for newer version after each Round <p>Defines that WebLOAD will check for a newer version of the cached item after each round.</p><p>Whenever the engine has a request for a cached resource, the engine sends the request with an \u201cif-modified-since\u201d header. If the server responds with a 200 status, the engine will refresh the cache.</p> Never clear cache Defines that the cache will never be cleared. Each client maintains its own cache. Cache content <p>You can select a filter, enabling you to indicate specific content types to be cached in the script. The available filters are:</p><p>- JavaScript files</p><p>- Style sheets</p><p>- Images</p><p>- Applets</p><p>- XML files</p><p>- Dynamic</p>"},{"location":"recorder-user-guide/configuring_recorder_options/#configuring-authentication-settings","title":"Configuring Authentication Settings","text":"<p>WebLOAD Recorder enables you to define the global and proxy authentication settings.</p> <p>WebLOAD Recorder enables you to configure a double proxy configuration, which instructs the recorder to use two application proxies, one for regular HTTP traffic and another for secure (SSL) traffic. To configure the two proxies, see *Configuring a Double Proxy* (on page 203).</p> <p>To configure Authentication settings:</p> <ol> <li> <p>Click Default/Current Project Options in the Tools tab of the ribbon. The Default/Current Project Options dialog box appears.</p> </li> <li> <p>Select the Authentication tab.</p> </li> </ol> <p>The Authentication tab moves to the front of the dialog box.</p> <p></p> <ol> <li>Fill in the fields, as described below and click OK.</li> </ol> <p>The following table defines all the fields and options in the Authentication tab.</p> Field Description <p>Global Authentication Settings</p> User name and Password The user name and password that the script should use to log onto restricted HTTP sites. <p>NT user name and</p><p>NT password</p> The user name the script should use for Windows NT Challenge response authentication. <p>SSL client certificate file and</p><p>SSL client certificate password</p> The file name (optionally including a directory path) of the certificate WebLOAD makes available to SSL servers and type the password. Click Browse to search for the file. Authentication method <p>The authentication method supported by the server:</p><p>- NTLM (default).</p><p>- Kerberos.</p> Kerberos server The Kerberos server Fully Qualified Domain Name (FQDN). For example, specify \u201cqa4\u201d rather than \u201cqa4.radview.co.il\u201d. This field is only enabled when the authentication method is set to Kerberos. Proxy authentication settings <p>Proxy server:</p><p>Proxy host and Proxy port</p> The host name and port number for the proxy server. Proxy user name and Proxy password The user name and password for the proxy server."},{"location":"recorder-user-guide/configuring_recorder_options/#setting-diagnostic-options","title":"Setting Diagnostic Options","text":"<p>Diagnostic options can be enabled while developing a script or for tracking problems in existing scripts.</p> <p>To set Diagnostic options:</p> <ol> <li> <p>Click Default/Current Project Options in the Tools tab of the ribbon. The Default/Current Project Options dialog box opens.</p> </li> <li> <p>Select the Diagnostic tab.</p> </li> </ol> <p>The Diagnostic tab moves to the front of the dialog box.</p> <p></p> <ol> <li> <p>Set the Enable syntax check option, see Enabling Syntax Checking (on page 171).</p> </li> <li> <p>Set the Enable the enhanced RadView support diagnostic option, see *Enabling RadView Support Diagnostic* (on page 172).</p> </li> <li> <p>Click OK.</p> </li> </ol>"},{"location":"recorder-user-guide/configuring_recorder_options/#enabling-syntax-checking","title":"Enabling Syntax Checking","text":"<p>Enable syntax checking to perform the following tests on a script while it is running.</p> Test Description Type Inspection <p>WebLOAD Recorder checks that each property receives the correct type. For example, wlLocals.ParseForms = 14 prompts the following log message:</p><p>\u201cWrong type for the property ParseForms. The correct type is Boolean. Legal values are: \u201cYes\u201d/\u201dNo\u201d or \u201ctrue\u201d/\u201dfalse\u201d.</p> Value Inspections <p>WebLOAD Recorder checks to ensure that each property is assigned a legal value. For example, wlHttp.Version = \u201c2.1\u201d prompts the following log message:</p><p>\u201c2.1 is an illegal value for the property Version. Legal values are: 1.0, 1.1.\u201d</p> Scope Inspections <p>WebLOAD Recorder checks to ensure that each property is assigned a permitted scope. For example, wlLocals.ConnectionSpeed = 28800 prompts the following log message:</p><p>\u201cThe property ConnectionSpeed is not valid for the object wlLocals.\u201d</p> Case Inspections <p>WebLOAD Recorder objects and properties are case sensitive. When syntax checking is enabled, WebLOAD Recorder checks to ensure that all objects and properties are written correctly. For example, wlLocals.parse = \u201cNo\u201d prompts the following message:</p><p>\u201cThe property parse should be written Parse.\u201d</p> <p>We recommend that syntax checking be run at least once while developing a script.</p> <p>To enable syntax checking:</p> <ol> <li> <p>Click Default/Current Project Options in the Tools tab of the ribbon.</p> </li> <li> <p>Select the Diagnostic tab.</p> </li> <li> <p>Select the Enable syntax check checkbox.</p> </li> </ol>"},{"location":"recorder-user-guide/configuring_recorder_options/#enabling-radview-support-diagnostic","title":"Enabling RadView Support Diagnostic","text":"<p>Enabling the RadView support diagnostic option creates large files in the WebLOAD Recorder\\User\\Log directory that may affect Load Generator performance.</p> <p>To enable RadView Support diagnostic:</p> <ol> <li>Click Default/Current Project Options in the Tools tab of the ribbon.</li> <li>Select the Diagnostic tab.</li> <li>Select the Enable the enhanced RadView support diagnostic checkbox.</li> </ol>"},{"location":"recorder-user-guide/configuring_recorder_options/#configuring-the-java-options","title":"Configuring the Java Options","text":"<p>The Java options enable you to define the Java Virtual Machine to be used by WebLOAD Recorder, for executing Java classes.</p> <p>To configure Java Option settings:</p> <ol> <li> <p>Click Default/Current Project Options in the Tools tab of the ribbon. The Default/Current Project Options dialog box appears.</p> </li> <li> <p>Select the Java Options tab.</p> </li> </ol> <p>The Java Options tab moves to the front of the dialog box.</p> <p></p> <ol> <li>In the Select run-time JVM to be used drop down, select one of the available Java Virtual Machines. The default setting is the WebLOAD standard Java Virtual Machine.</li> </ol> <p>The selected value is passed to wlGlobals.JVMtype and is the key for</p> <p>WLJVMs.xml. This XML file (located on every WebLOAD Machine in the</p> <p>...\\extensions\\JVMs directory) contains the following parameters for each JVM:</p> <ul> <li>Type (the value from the flag)</li> <li>Path (should be machine-agnostic)</li> <li>Options</li> </ul> <p>When Type is \u201cDefault\u201d, the RadView default (installed) JVM will be used. The default JVM\u2019s path is defined in webload.ini, as it depends on the WebLOAD installation path.</p> <ol> <li>Click OK.</li> </ol> <p>The Java Options are saved.</p>"},{"location":"recorder-user-guide/configuring_recorder_options/#configuring-the-recording-and-script-generation-options","title":"Configuring the Recording and Script Generation Options","text":"<p>The Recording and Script Generation Options enable you to define the behavior of the WebLOAD Recorder during the recording and script generation of a Web session.</p>"},{"location":"recorder-user-guide/configuring_recorder_options/#opening-the-recording-and-script-generation-options","title":"Opening the Recording and Script Generation Options","text":"<p>To open the Recording and Script Generation Options dialog box:</p> <ul> <li>Click Recording and Script Generation Options in the Tools tab of the ribbon. </li> </ul> <p>Or-</p> <p>Select Recording and Script Generation Options from the WebLOAD Recorder</p> <p>Home tab of the ribbon.</p> <p>The Recording and Script Generation Options dialog box opens with the File Extensions tab displayed.</p> <p></p> <p>The following table describes the tabs in the Recording and Script Generation Options dialog box.</p> Tab Description Proxy Certificates Configure the Server Side and Client Side certificates. Script Generation Define how the WebLOAD Recorder should handle various HTTP elements. Default Encoding Type Select the default encoding type. Browser Settings <p>Select the default browser.</p><p>If you selected either Microsoft Internet Explorer or Netscape Navigator, you can also request that the program configure the proxy value automatically (default). If you want to configure the proxy value manually, see Configuring the Proxy Value for Your Browser (on page 14).</p> <p>File Extensions</p><p>(default)</p> Select which file types should be recorded and which ones should not. Content Types Select which objects should be recorded and which ones should not. Post Data Define how the WebLOAD Recorder should handle Post Data. Proxy Options Configure the proxy values for WebLOAD Recorder and the application (if necessary). Correlation Options Define correlation and logging options. Auto Correlation Define the auto-discovery correlation options. URL Filtering Configure which types of URLs the WebLOAD Recorder records."},{"location":"recorder-user-guide/configuring_recorder_options/#specifying-the-script-content-to-be-generated","title":"Specifying the Script Content to be Generated","text":"<p>Use the Script Generation tab in the Recording and Script Generation Options dialog box to specify what the WebLOAD Recorder should record in your script. The Script Generation tab lists all the HTTP objects that can be automatically identified by the WebLOAD Recorder and recorded in the script so you do not have to enter them manually. For example, you can instruct WebLOAD Recorder whether or not to record and display the headers.</p> <p>To specify the HTTP objects to be recorded:</p> <ol> <li>Select Recording and Script Generation Options from the WebLOAD Recorder</li> </ol> <p>Home tab of the ribbon.</p> <p>The Recording and Script Generation Options dialog box appears (see Figure 114).</p> <ol> <li>Select the Script Generation tab. </li> </ol> <p>The Script Generation tab moves to the front of the dialog box. </p> <p></p> <ol> <li> <p>Select or clear the options to specify what the WebLOAD Recorder should record in your script.</p> </li> <li> <p>Click OK.</p> </li> </ol> <p>The following table describes the options in the Script Generation tab.</p> HTTP Object Description Example Generate Authentication <p>Generates the name and password that appear in the header of a request.</p><p>This option is selected by default.</p> wlHttp.UserName=\u201cJohn\u201d wlHttp.Password=\u201cBlue\u201d Generate proxy <p>Generates the proxy setting.</p><p>This option is selected by default.</p> wlHttp.Proxy=&lt;ProxyName&gt;.&lt;ProxyPort&gt; Generate proxy authentication <p>Generates the name and password used to identify you to the proxy.</p><p>This option is selected by default.</p> wlHttp.ProxyUserName=&lt;UserName&gt; wlHttp.ProxyPassword=&lt;Password&gt; Decode query string Records the query string that is the part of the URL after the \u201c?\u201d sign and is used for sending parameters for the specific server item which is targeted by this URL. <p>When this option is not selected, the GET command will displayed as follows:</p><p>wlHttp.Get(\u201chttp://localhost/netizenba nk/myAccountWelcome.asp?netizenSID=313 41549426&amp;ssn=1234&amp;password=1231&amp;I1.x=2 1&amp;I1.y=10\u201d)</p><p>That is all the parameters that will appear as part of the URL.</p><p>When this option is selected, the URL will be parsed and displayed as follows:</p><p>wlHttp.FormData[\u201cnetizenSID\u201d] = \u201c31341549618\u201d</p><p>wlHttp.FormData[\u201cssn\u201d] = \u201c124\u201d</p><p>wlHttp.FormData[\u201cpassword\u201d] = \u201c3424\u201d</p><p>wlHttp.FormData[\u201cI1.x\u201d] = \u201c29\u201d</p><p>wlHttp.FormData[\u201cI1.y\u201d] = \u201c14\u201d</p><p>wlHttp.Get(\u201chttp://localhost/netizenba nk/myAccountWelcome.asp\u201d)</p><p>That is a block of parameters that will be easier to parameterize.</p> Generate redirection path WebLOAD Recorder records (in the script) only the first GET statement; the rest of the URLs visited when redirected are inserted into the script as comments. The script does not revisit all the URLs during playback. <p>wlHttp.Get (\u201chttp://www.abcdef.com\u201d)</p><p>// Redirections: http://www.ghijkl.com, etc.</p> Generate all headers <p>Generates all HTTP headers.</p><p>The headers</p><p>If-Modified-Since, If-None-Matched, and Keep Alive will be commented out to overcome the situation where recorded links were fetched from the browser\u2019s</p><p>cache during the recording.</p><p>The request header Accept-Encode: gzip will also be commented out, to ensure correct behavior.</p><p>When Generate All Headers is selected, Generate Referer Header and Generate Custom Header are automatically checked and disabled so that they cannot be unchecked.</p> <p>wlHttp.Header[\u201cuser-agent\u201d]</p><p>=\u201cMozilla/4.04 [en] (WinNT; I)\u201d</p><p>wlHttp.Header[\u201caccept-charset\u201d] =\u201ciso- 8859-1,*,utf-8\u201d</p><p>wlHttp.Header[\u201cproxy-connection\u201d]</p><p>=\u201cKeep-Alive\u201d</p><p>wlHttp.Header[\u201caccept-language\u201d] =\u201cen\u201d</p> Generate referer header <p>Generates the referer header only. This header tells the server which URL submitted the request. For example, if you click a link from page xxx, the browser will send that url as the referer.</p><p>This option is selected by default.</p><p>This option is automatically selected and cannot be changed when Generate All Headers is selected.</p> wlHttp.Header[\u201cReferer\u201d] = \u201chttp://www.easycar.com/\u201d Generate custom headers Generates any headers that are not explicitly defined in the RFC, such as the SOAP Action header. This option is selected by default. Comment status Writes a comment about the status of your transactions (that is, any GET statement), including information about the contents of the pages. <p>wlHttp.Get(\u201chttp://www.RadView.com/\u201d)</p><p>//200 OK</p> Comment request headers Writes a comment for each HTTP request. <p>// Request Headers:</p><p>// user-agent=Mozilla/4.0 (compatible; MSIE 5.01; Windows NT)</p><p>// accept-encoding=gzip, deflate</p><p>// proxy-connection=Keep-Alive</p> Comment response headers Writes a comment for each reply to HTTP request. <p>// Response Headers:</p><p>// content-type=text/html</p><p>// server=Microsoft-IIS/4.0</p><p>// date=Thu, 06 Jan 2000 16:12:44 GMT</p><p>// via=1.1 localhost (Jigsaw/1.0a5)//</p><p>200 OK</p> Encode binary data Used to specify if the binary data should be encoded. By default this flag is not selected. <p>If a mobile operator wants to simulate the sending of binary data from the browser (phone) to the server. Part of the binary data is a value (for example, phone number) that needs parameterization.</p><p>When the EncodeBinaryData flag is selected, the binary form data \u201cx0Ax0BAMIRx00\u201d appears as \u201c%0A%0BAMIR%00\u201d in the script.</p> Generate VIEWSTATE data Enables filtering the  VIEWSTATE  data while  recording.  When this is not  selected,  VIEWSTATE data  will be  commented out in  the script. Save all redirection headers Records the headers for all  URL redirections. Generate Client side Cookies When unchecked, the web  page sets  cookies from the  JavaScript  and you must  implement  the cookies  manually in  the script.  If selected, the cookies from  the headers  are compared  to cookies  that the server  sends. If  there is a  difference,  the correct  SetCookie  command is  added to  the script. This is  performed  during  recording.  The cookie value  is obtained  from the  recorded  traffic. WebLOAD  automatically  inserts a  comment  before the  SetCookie command in  the script  to let the user  know that  the cookie was  added  automatically. Parse JSON Used to specify how to  present  JSON values in the  script appearing in the  JavaScript View pane \u2013  whether as  a long string, or  parsed. An example of a long script display:  <code>wlHttp.FormData[\"data\"]=\"{\\\"id\\\":\\  \"001\\\", \\\"type\\\":\\\"donut\\\",  \\\"name\\\":\\\"Cake\\\"  }\"  An example  of parsed JSON display:  var  json = {  \"id\":  \"0001\",  \"type\":  \"donut\",  \"name\": \"Cake\"  }</code> Generate Host List Enables running the same script on different hosts, with minimum editing, by replacing host names with variables.If selected, each host name in the recording is replaced by a variable.To specify the actual value of each host variable, define it in the InitAgenda() function Instead of the script including, for example: wlHttp.Get(\"https://www.amazon.com/\") It will include the following:wlHttp.Get(\"https://\" + domain_www_amazon_com + \"/\")You can then, using the same script, run one test in which you edit the InitAgenda()function so that:domain_www_amazon_com=\u201dwww.amazon.com\u201d and another test in which: domain_www_amazon_com=\u201dwww.qalab.com\u201d wlHttp.Get(\"https://\" + domain_www_amazon_com + \"/\") You can then, using the same script, run one test in which you edit the InitAgenda()function so that: domain_www_amazon_com=\u201dwww.amazon.com\u201d and another test in which: domain_www_amazon_com=\u201dwww.qalab.com\u201d"},{"location":"recorder-user-guide/configuring_recorder_options/#setting-the-webload-recorder-to-record-post-data-types","title":"Setting the WebLOAD Recorder to Record Post Data Types","text":"<p>Use the Post Data tab in the Recording and Script Generation Options dialog box to instruct the WebLOAD Recorder how to treat different data types when it is recording. Data can be written in the script as part of the command, as a data block, or in a data file. A data block is stored within the script itself, and is useful when you prefer to see the data directly. A data file stores the data in a local text file, and is useful when you are working with large amounts of data which would be too cumbersome to store within the script code itself, or binary data. When working with data files, only the name of the text file is stored in the script itself. Data can also be recorded as FormData, in which the data is formatted in a tidy name-value format and is</p> <p>url-encoded when sent to the server.</p> <p>While recording a script, WebLOAD automatically identifies if there are no name-value pairs, checks if there is a valid content type (for example, text/plain), and records it accordingly (for example, as Data).</p> <p>Note: The content type application/x-www-form-urlencoded (with or without a charset), should always be recorded as FORMDATA, unless you explicitly specify to record it as DATA or DATA FILE.</p> <p>To set the WebLOAD Recorder to record data types:</p> <ol> <li>Click Recording and Script Generation Options in the Tools tab of the ribbon. </li> </ol> <p>Or- </p> <p>Select Recording and Script Generation Options from the WebLOAD Recorder Home tab of the ribbon.</p> <p>The Recording and Script Generation Options dialog box appears (see Figure 114).</p> <ol> <li>Select the Post Data tab. The Post Data tab moves to the front of the dialog box.</li> </ol> <p></p> <ol> <li> <p>Fill in the fields as described in table below.</p> </li> <li> <p>Optionally, you can double-click an item from the DATA block or DATAFILE block lists to display the item\u2019s full text.</p> </li> </ol> <p></p> <ol> <li> <p>Click OK to return to the Post Data tab.</p> </li> <li> <p>Click OK to save the record options settings.</p> </li> </ol> <p>The following table defines all the fields and options in the Post Data tab.</p> Field Description DATA block Lists the types of data that the WebLOAD Recorder records as DATA blocks in the script\u2019s JavaScript. A DATA block is recorded without HTTP encoding and is not structured. During playback, the WebLOAD Recorder makes this data into form data and sends it without any further modification. A DATA block is for posting data that is not meant to be HTTP encoded, for example Web service calls. DATAFILE block Lists the types of data that the WebLOAD Recorder records as DATAFILE blocks (files with a name and a path). A DATAFILE block can store text and binary data. During playback, the WebLOAD Recorder copies and then sends this file with multipart form data, using a MIME protocol. Remove Click this button to delete a selected DATA block or DATAFILE block from both lists. Add new type Type the name of a new type you want to be added to either of the lists. As DATAFILE Adds the new type you entered in the Add new type field to the DATAFILE block list. As DATA Adds the new type you entered in the Add new type field to the DATA block list. Record Unknown Post Types as <p>Select to instruct the WebLOAD Recorder to record any data type not defined on this tab as:</p><p>- FORMDATA</p><p>- DATA</p><p>- DATAFILE</p> <p>By default, the following content types are recorded as DATA blocks:</p> <ul> <li>application/json; charset=utf-8</li> <li>application/json-rpc</li> <li>application/xml; charset=utf-8</li> <li>text/xml</li> <li>![ref13]text/xml; charset=utf-8</li> </ul> <p>Note: The recorder searches for exact content types from this list. Therefore, text/xml and text/xml; charset=utf-8 are different content types even though the former is a subset of the latter.</p> <p>WebLOAD Recorder deals specially with the following content types:</p> <ul> <li>multipart/form-data \u2013 This content type is used for uploading files. The actual content type sent by the client is multipart/form-data;boundary=long- string. The recorder searches for the multipart/form-data content type and then records the request as a From Data, although it appears in the DATAFILE block list.</li> <li>multipart/text \u2013 This content type is similar to multipart/form-data, except that the multipart/text content type is not used for uploading files. The multipart/text content type is therefore handled as a DATA block, but since it contains a variable in the name (the value of boundary in multipart/text;boundary= \u2026), the treatment of this content type is hard- coded. For example, any content type that starts with multipart/text is recorded as a DATA block content type.</li> <li>soap messages \u2013 This content type is always recorded as DATA blocks.</li> </ul>"},{"location":"recorder-user-guide/configuring_recorder_options/#configuring-the-default-encoding-type","title":"Configuring the Default Encoding Type","text":"<p>Use the Default Encoding Type tab in the Recording and Script Generation Options dialog box to set up the default encoding type.</p> <p>To configure the default encoding type:</p> <ol> <li>Click Recording and Script Generation Options in the Tools tab of the ribbon. </li> </ol> <p>Or- </p> <p>Select Recording and Script Generation Options from the WebLOAD Recorder Home tab of the ribbon.</p> <p>The Recording and Script Generation Options dialog box appears (see Figure 114).</p> <ol> <li> <p>Select the Default Encoding Type tab.</p> </li> <li> <p>The Default Encoding Type tab moves to the front of the dialog box.</p> </li> </ol> <p> </p> <ol> <li> <p>Select an option as the default encoding type.</p> </li> <li> <p>Click OK.</p> </li> </ol>"},{"location":"recorder-user-guide/configuring_recorder_options/#configuring-the-default-browser","title":"Configuring the Default Browser","text":"<p>Use the Browser Settings tab in the Recording and Script Generation Options dialog box to set up the default browser.</p> <p>To configure the default browser:</p> <ol> <li>Click Recording and Script Generation Options in the Tools tab of the ribbon. </li> </ol> <p>Or- </p> <p>Select Recording and Script Generation Options from the WebLOAD Recorder Home tab of the ribbon. The Recording and Script Generation Options dialog box appears (see Figure 114).</p> <ol> <li>Select the Browser Settings tab.</li> </ol> <p>The Browser Settings tab moves to the front of the dialog box.</p> <p></p> <ol> <li> <p>Fill in the fields, as described in Table 23.</p> </li> <li> <p>Click OK. </p> </li> </ol> <p>A message appears stating that in order for WebLOAD Recorder to change your proxy definition automatically, you must close all instances of the browser before recording.</p> <p>After you close all instances of the browser, the WebLOAD Recorder screen appears.</p> <p>The following table defines all the fields and options in the Browser Settings tab.</p> Field Description Default browser selection Web browser <p>Select this option to define Google Chrome, Mozilla Firefox or Microsoft Internet Explorer as your default browser.</p><p>If you selected Mozilla Firefox as your browser, and Mozilla Firefox was installed on the machine after WebLOAD Recorder was installed, a message appears recommending that you install the Firefox extension responsible for setting the proxy definitions automatically.</p><p>If you accept, the extension is installed.</p><p>If you do not accept, the Set the proxy definitions automatically checkbox is automatically cleared, and you should configure the proxy value manually (see Configuring the Proxy Value for Your Browser on page 14).</p><p>The next time you check the Set the proxy definitions automatically</p><p>checkbox, WebLOAD Recorder will show the installation message again.</p> Other browser Select this option and browse to define a browser other than Google Chrome, Mozilla Firefox or Microsoft Internet Explorer as your default browser. Mobile native application Select this option to define a mobile native application as your default browser. This option is intended for recording from a mobile device. To do so, you must setup the device and the system as described in Recording Mobile Applications (on page 375). None Select this option to define that there is no default browser. Automatic browser settings Set the proxy definitions automatically If you selected either Mozilla Firefox or Microsoft Internet Explorer, you can also set WebLOAD Recorder to configure their proxy settings automatically (default). If you want to configure the proxy value manually, see Configuring the Proxy Value for Your Browser (on page 14). Clear browser cache Select this option to clear the browser cache before recording. This option is selected, by default. Clear browser cookies Select this option to clear the browser\u2019s cookie history before recording. This option is selected, by default. General browser settings Open a new browser window for each recording Select this option to open a new browser window each time you start recording. The first time you start recording, a message is displayed with information about this option. You can disable this message by checking the Don\u2019t show this message again checkbox. Simulate mobile user agent <p>Select this option to simulate a mobile web application.</p><p>If you select this option, define the specific user agent (browser type and browser version) you wish to simulate. You can click the Change button  to edit the user agent definition."},{"location":"recorder-user-guide/configuring_recorder_options/#configuring-the-correlation-options","title":"Configuring the Correlation Options","text":"<p>Use the Correlation Options tab in the Recording and Script Generation Options dialog box to set up the correlation options.</p> <p>To configure the correlation options:</p> <ol> <li>Click Recording and Script Generation Options in the Tools tab of the ribbon. </li> </ol> <p>Or- </p> <p>Select Recording and Script Generation Options from the WebLOAD Recorder Home tab of the ribbon. </p> <p>The Recording and Script Generation Options dialog box appears (see Figure 114).</p> <ol> <li>Select the Correlation Options tab.</li> </ol> <p>The Correlation Options tab moves to the front of the dialog box.</p> <p></p> <ol> <li> <p>Fill in the fields, as described in Table 24.</p> </li> <li> <p>Click OK.</p> </li> </ol> Field Description Add correlation comments to script <p>Select this option to instruct WebLOAD to add comments to your script in the places where correlation was performed and create a log of all the changes that were made to your script\u2019s JavaScript.</p><p>When selected, the following comment is added to your script before a command that extracts the dynamic value from a response or that uses a parameter instead of a dynamic value in a request:</p><p>//WLCORR \u2013 Extracting the dynamic value from the response according to Correlation Rule s<p>-Or-</p><p>//WLCORR \u2013 Using the Correlation Parameter instead of the dynamic value according to Correlation Rule s<p>where  is the correlation rule ID. Preserve user changes <p>Specify whether to preserve or discard user changes before running correlation.</p><p>- When this option is unselected, all manual (user) changes to the script are discarded before running correlation. This is equivalent to performing Script Regeneration prior to running correlation.</p><p>- When this option is selected (default), user changes are preserved when correlation is run. If the changes introduced by correlation conflict with the changes made by the user, the user is requested to resolve the conflict, as described in *Resolving Conflicts between Manual Changes and Correlation Changes* on page 96.</p> Correlation level <p>Specify the correlation level to determine the type of correlation to run automatically after recording the script:</p><p>Possible values:</p><p>- Do not run \u2013 Do not run correlation after recording the script.</p><p>- Use existing rules \u2013 Perform manual correlation after recording the script, using the existing rules.</p><p>- Discover rules \u2013 Perform automatic correlation after recording the script, to discover and suggest new rules.</p><p>- Prompt \u2013 After recording the script, a dialog box is displayed enabling you to select the type of correlation you wish to perform (Do not run, Use existing rules, or Discover rules).</p> Logging level <p>Specify the correlation logging level to determine the amount and content of the comments that the correlation engine adds to your script\u2019s JavaScript.</p><p>Possible values:</p><p>- 0 \u2013 None. No log messages are added to the JavaScript.</p><p>- 1 \u2013 Minimal. Fatal, Error, and Warning messages are added to the JavaScript. Fatal messages indicate that an unrecoverable error occurred, Error messages indicate that a recoverable error occurred, and Warning messages indicate that there is a possible error.</p><p>- 2 \u2013 Medium. In addition to the messages added with the minimal logging level, Info messages are added to the JavaScript. Info messages provide important information, such as, when a rule finds a value or when a correlation hint is found.</p><p>- 3 \u2013 Full. In addition to the messages added with the medium logging level, Debug messages are added to the JavaScript. Debugging messages provide detailed information about the script.</p> Logging file <p>Specify the location of the correlation log file. The default file is</p><p>correlation.log and the default location is:</p><p>C:\\Program Files\\Radview\\WebLOAD\\Log</p> Correlation rules file <p>Specify the location of the correlation rules XML file. The default file is</p><p>correlationRules.xml and the default location is:</p><p>C:\\Program Files\\Radview\\WebLOAD\\Extensions\\Correlation</p> Edit Rules Open the Correlation Rules Editor. For more information about the Correlation Rules Editor, see Configuring the Correlation Rules (on page 98). Flex / AMF correlation Correlate Flex / AMF messages <p>Create automatic correlation rules to correlate RPC Flex messages and Messaging Flex messages.</p><p>Selecting this option enables correlation of the DSId value. This correlation is part of the AMF script generation, which means the correlation is performed during recording.</p> Auto generate DSIds <p>If selected, a new DSId is generated during session initialization. The generated DSId is used for all AMF requests until the next session initialization.</p><p>If not selected, the DSId is retrieved from the session initialization request (nil request) and is used for all AMF requests until the next session initialization.</p> Disable Flex correlation Disable Flex correlation."},{"location":"recorder-user-guide/configuring_recorder_options/#configuring-the-auto-correlation-options","title":"Configuring the Auto-Correlation Options","text":"<p>Use the Auto Correlation Options tab in the Recording and Script Generation Options dialog box to set up the Auto Discovery correlation options.</p> <p>To configure the Auto Discovery correlation options:</p> <ol> <li>Click Recording and Script Generation Options in the Tools tab of the ribbon. </li> </ol> <p>Or- </p> <p>Select Recording and Script Generation Options from the WebLOAD Recorder Home tab of the ribbon.</p> <p>The Recording and Script Generation Options dialog box appears (see Figure 114).</p> <ol> <li> <p>Select the Auto Correlation Options tab.</p> </li> <li> <p>The Auto Correlation Options tab moves to the front of the dialog box.</p> </li> </ol> <p></p> <ol> <li> <p>Fill in the fields, as described in Table 25.</p> </li> <li> <p>Click OK.</p> </li> </ol> Field Description Minimum value length Specify the minimum length of the value to be considered for correlation. Shorter values, even if matched by a rule, are ignored. Filter strength <p>Specify the rules to display in the Correlation Review Form, according to the rule\u2019s score. Each rule is given a score during auto-discover correlation according to an algorithm that calculates the chances of the rule being used. Specify the filter strength as follows:</p><p>- Strict (few records) \u2013 Display only the rules that are very likely to be used in the script. This leads to faster script execution, but also has a high risk of missing a necessary rule.</p><p>- Normal (balanced) \u2013 Displays rules that are likely to be used in the script. This leads to average script execution, includes most (if not all) of the necessary rules and displays some rules that are not used.</p><p>- Weak (many records) \u2013 Display rules that have a chance of being used in the script. This leads to slower script execution and displays many rules that are not used.</p> Value delimiters <p>Specify the characters to be considered delimiters when searching for a dynamic value during correlation. The correlation engine searches for the dynamic value in the script, where the value is surrounded by a specific delimiter.</p><p>For example, in:</p><p>SessionID=1234&amp;Day</p><p>\u2019&amp;\u2019 is a delimiter, which defines \u20181234\u2019 and \u2018Day\u2019 as two separate strings.</p> Show correlation review form <p>Specify when to show the Correlation Review form after performing correlation.</p><p>Possible values:</p><p>- Never.</p><p>- Always.</p><p>- After Auto-discovery.</p>"},{"location":"recorder-user-guide/configuring_recorder_options/#configuring-the-url-filtering-options","title":"Configuring the URL Filtering Options","text":"<p>Use the URL Filtering tab in the Recording and Script Generation Options dialog box to configure which types of URLs the WebLOAD Recorder records.</p> <p>To configure the URL filtering options:</p> <ol> <li>Click Recording and Script Generation Options in the Tools tab of the ribbon. </li> </ol> <p>Or- </p> <p>Select Recording and Script Generation Options from the WebLOAD Recorder Home tab of the ribbon. </p> <p>The Recording and Script Generation Options dialog box appears (see Figure 114).</p> <ol> <li> <p>Select the URL Filtering tab.</p> </li> <li> <p>The URL Filtering tab moves to the front of the dialog box.</p> </li> </ol> <p></p> <ol> <li> <p>Fill in the fields, as described in Table 26.</p> </li> <li> <p>Click OK.</p> </li> </ol> <p>The following table describes the fields in the URL Filtering tab.</p> Field Description Excluded URLs List Lists the URLs that WebLOAD Recorder does not record. WebLOAD Recorder ignores all actions involving any URL in this list when it is encountered during a Web session. Included URLs List Lists the URLs that WebLOAD Recorder records. WebLOAD Recorder records all actions involving any URL in this list when it is encountered during a Web session. Edit URLs List Type a URL in this field to add the URL to either the Included URLs List or Excluded URLs List. Add to Exclude Click to add the URL in the Edit URLs List field to the Excluded URLs List. Add to Include Click to add the URL in the Edit URLs List field to the Included URLs List. Remove Click to delete a selected URL from either the Included URLs List or the Excluded URLs List."},{"location":"recorder-user-guide/configuring_recorder_options/#configuring-the-file-extensions","title":"Configuring the File Extensions","text":"<p>Use the File Extension tab in the Recording and Script Generation Options dialog box to configure which types of files the WebLOAD Recorder records.</p> <p>Both the File Extensions and the Content Types tabs (see *Configuring the Content Types to Record* on page 198), enable you to specify the types of data that are accepted and recorded by WebLOAD Recorder, or not accepted and ignored. On the File Extensions tab, you specify which objects should be recorded or ignored, according to their file extension, such as \u201c.gif\u201d, \u201c.wav\u201d, or \u201c.txt\u201d.</p> <p>In a case where the file extension and content types contradict each other, precedence is given to the record filter as opposed to the ignore filter. For example, if the File Extensions and Content Types tabs are configured with the following settings:</p> <ul> <li>Filter the following file extensions as \u2013 Recorded Extensions: gif</li> <li>Filter the following content types as \u2013 Ignored Types: image/gif</li> </ul> <p>A resource with the gif file extension that contains image/gif content is recorded in WebLOAD Recorder even though the image/gif content type is set to be ignored.</p> <p>To configure the file extensions:</p> <ol> <li>Click Recording and Script Generation Options in the Tools tab of the ribbon. </li> </ol> <p>Or-</p> <p>Select Recording and Script Generation Options from the WebLOAD Recorder Home tab of the ribbon.</p> <p>The Recording and Script Generation Options dialog box appears (see Figure 114).</p> <ol> <li>Select the File Extensions tab.</li> </ol> <p>The File Extensions tab moves to the front of the dialog box.</p> <p></p> <ol> <li> <p>Fill in the fields, as described Table 27.</p> </li> <li> <p>Click OK.</p> </li> </ol> <p>The following table describes the fields in the File Extensions tab.</p> Field Description Ignored extensions Lists the file extensions that WebLOAD Recorder does not record. WebLOAD Recorder ignores all actions involving any file extension in this list when it is encountered during a Web session. Recorded extensions Lists the file extensions that WebLOAD Recorder records. WebLOAD Recorder records all actions involving any file extension in this list when it is encountered during a Web session. Remove Click this button to delete a selected file extension from both lists. Record unknown extensions Select this option to record all actions involving any unknown file extensions encountered during a Web session. File extensions not defined and listed in the Ignored Extensions window are treated as if they were included in the Recorded Extensions window. Record all extensions Select this option to disregard the settings in the Ignored / Recorded Extensions lists. WebLOAD Recorder then records all actions involving all file extensions encountered during a Web session, including unknown file extensions. Add new extension Type a new file extension. Add Click this button to add the new file extension to the Ignored Extensions list."},{"location":"recorder-user-guide/configuring_recorder_options/#configuring-the-content-types-to-record","title":"Configuring the Content Types to Record","text":"<p>Use the Content Types tab in the Recording and Script Generation Options dialog box to set up which types of Web content the WebLOAD Recorder records.</p> <p>Both the Content Types and the File Extensions tabs (see *Configuring the File Extensions* on page 196), enable you to specify the types of data that are accepted and recorded by WebLOAD Recorder, or not accepted and ignored. On the Content Types tab you</p> <p>define which objects should be recorded by type, such as \u201cimage/gif\u201d, \u201cimage/jpeg\u201d, or \u201ctext/html\u201d.</p> <p>In a case where the content types and file extension contradict each other, precedence is given to the record filter as opposed to the ignore filter. For example, if the Content Types and File Extensions tabs are configured with the following settings:</p> <ul> <li>Filter the following content types as \u2013 Recorded Types: image/gif</li> <li>Filter the following file extensions as \u2013 Ignored Extensions: gif</li> </ul> <p>A resource with the gif file extension that contains image/gif content is recorded in WebLOAD Recorder even though the gif file extension is set to be ignored.</p> <p>To configure the content types to record:</p> <ol> <li>Click Recording and Script Generation Options in the Tools tab of the ribbon. </li> </ol> <p>Or-</p> <p>Select Recording and Script Generation Options from the WebLOAD Recorder Home tab of the ribbon. </p> <p>The Recording and Script Generation Options dialog box appears (see Figure 114).</p> <ol> <li>Select the Content Types tab.</li> </ol> <p>The Content Types tab moves to the front of the dialog box.</p> <p></p> <ol> <li> <p>Fill in the fields.</p> </li> <li> <p>Click OK.</p> </li> </ol> <p>The following table describes the fields in the Content Types tab.</p> Field Description Ignored types Lists the content types that WebLOAD Recorder does not record. WebLOAD Recorder ignores all actions involving any content type in this list when it is encountered during a Web session. Recorded types Lists the content types that WebLOAD Recorder records. WebLOAD Recorder records all actions involving any content type in this list when it is encountered during a Web session. Remove Click this button to delete a selected content type from both lists. Record unknown types Select this option to record all actions involving any unknown content types encountered during a Web session. Content types not defined and listed in the Ignored Types area are treated as if they were included in the Recorded Types area. Record all types Select this option to disregard the settings in the Ignored / Recorded Types lists. WebLOAD Recorder then records all actions involving all content types encountered during a Web session, including unknown content types. Add new content type Type a new content type. Add Click this button to add the new content type to the Ignored Types list."},{"location":"recorder-user-guide/configuring_recorder_options/#setting-the-proxy-options","title":"Setting the Proxy Options","text":"<p>Use the Proxy Options tab in the Recording and Script Generation Options dialog box to designate the proxy server at your organization as the application proxy during recording sessions or to change the proxy port number for WebLOAD Recorder.</p> <p>When you record scripts with the WebLOAD Recorder, your browser must be configured to use proxy port 9884 (which is the default proxy port). In other words, you must record scripts through proxy port 9884.</p> <p>WebLOAD Recorder enables you to configure a double proxy configuration, which instructs the recorder to use two application proxies, one for regular HTTP traffic and another for secure (SSL) traffic. To configure the double proxy, see *Configuring a Double Proxy* (on page 203).</p> <p>To set the proxy options:</p> <ol> <li>Click Recording and Script Generation Options in the Tools tab of the ribbon.</li> </ol> <p>Or- </p> <p>Select Recording and Script Generation Options from the WebLOAD Recorder Home tab of the ribbon.</p> <p>The Recording and Script Generation Options dialog box appears (see Figure 114).</p> <ol> <li>Select the Proxy Options tab.</li> </ol> <p>The Proxy Options tab moves to the front of the dialog box.</p> <p></p> <ol> <li> <p>Fill in the fields, as described in Table 29.</p> </li> <li> <p>Click OK.</p> </li> </ol> <p>The following table describes the fields and options on the Proxy Options tab.</p> HTTP Object Description Recording proxy options Proxy port The port number for the WebLOAD Recorder proxy-recorder. The default value is 9884. When you record scripts, your browser must use the default value. Use transparent proxy Select this option to enable WebLOAD Recorder to record from any Web client that does not support proxy configurations. When selected, the Proxy port field is disabled. For more information, see Recording Desktop Web Applications on page 59. Application proxy options Use the following definitions for the application\u2019s proxy server Select this option if you use a proxy server to access the Internet. When selected, the HTTP proxy/Port, SSL proxy/Port and the Proxy authentication area fields are enabled and updated with the current settings from your Internet browser. (This is only relevant for Internet Explorer and Mozilla Firefox. If you are using a different Internet browser, update these fields manually). For additional information on determining if your browser is configured with a proxy, see Troubleshooting (on page 62). HTTP proxy/Port The address and port number of your organization\u2019s proxy, if one exists (for example, to access the Internet beyond a company firewall). Modifying these fields automatically updates your default browser\u2019s proxy settings and restores the original settings when the recording process is complete. SSL proxy/Port The address and port number of your organization\u2019s Secure proxy, if one exists (for example, to access the Internet beyond a company firewall). Use these fields in conjunction with the HTTP Proxy/Port fields to define a double proxy. Modifying these fields automatically updates your default browser\u2019s proxy settings and restores the original settings when the recording process is complete. <p>Use browser\u2019s settings</p><p>when recording</p> Select this option to enable WebLOAD Recorder to use your default browser\u2019s proxy settings when recording a script. When selected, WebLOAD Recorder copies your default browser\u2019s proxy settings into the HTTP Proxy/Port and SSL Proxy/Port fields. (This is only relevant for Internet Explorer and Mozilla Firefox. If you are using a different Internet browser, this is irrelevant). Proxy authentication User name The user name used for proxy authentication purposes. Password The password used for proxy authentication purposes. Proxy exceptions Do not use proxy server for addresses beginning with <p>Enter the address of complex addresses you wish to bypass.</p><p>A proxy bypass entry can begin with a protocol type such as http:// or https://. If a protocol type is used, the exception entry applies only to requests for that protocol. Note that the protocol value is not case sensitive. Multiple entries should be separated by a semicolon (;).</p><p>Next, enter an Internet address, an IP address, or domain name. If no protocol is specified, any request using the address is bypassed. If a protocol is specified, requests with the address are bypassed only if they are of the indicated protocol type. Both address entries and protocol types are not case sensitive.</p><p>This field allows a wildcard character ( * ) to be used in place of zero or more characters.</p> User Authentication User Name The user name used for user authentication purposes. Password The password used for user authentication purposes."},{"location":"recorder-user-guide/configuring_recorder_options/#configuring-a-double-proxy","title":"Configuring a Double Proxy","text":"<p>A double proxy configuration is a way to instruct the recorder to use two application proxies: one for non-secure HTTP traffic and one for SSL traffic. When you define only an HTTP proxy as the application proxy in the Proxy Options tab in the Recording and Script Generation Options dialog box, the recorder uses the same definition for both traffic types.</p> <p>In order to instruct the recorder to use a separate proxy for secured HTTP traffic, define the SSL Proxy and Port values.</p> <p>WebLOAD Recorder also enables you to set authentication information for accessing the proxy. In the SSL proxy configuration, the User Name and Password values (in the Proxy Authentication frame) are used for both HTTP and SSL proxies. In order to set different authentication information for the SSL proxy, add the following lines to wlproxyinclude.js (which can be found in the WebLOAD include directory):</p> <p><code>ProxyObject.RSecondarySSLProxyUserName = \u201cradview\u201d</code></p> <p><code>ProxyObject.RSecondarySSLProxyPassword=\u201crad1\u201d</code></p> <p>Finally, using this configuration will generate JavaScript code to indicate to the playback engine that it needs to use two proxies:</p> <p><code>wlHttp.UseSameProxyForSSL = false</code></p> <p><code>wlHttp.HttpProxy = wlHttp.HttpsProxy =</code></p> <p>The engine will fit the relevant proxy to the request.</p>"},{"location":"recorder-user-guide/configuring_recorder_options/#setting-the-proxy-certificates","title":"Setting the Proxy Certificates","text":"<p>Use the Proxy Certificates tab in the Recording and Script Generation Options dialog box to configure the Server Side and Client Side certificates.</p> <p>To set the proxy certificates:</p> <ol> <li>Click Recording and Script Generation Options in the Tools tab of the ribbon. </li> </ol> <p>Or- </p> <p>Select Recording and Script Generation Options from the WebLOAD Recorder Home tab of the ribbon. </p> <p>The Recording and Script Generation Options dialog box appears (see Figure 114).</p> <ol> <li> <p>Select the Proxy Certificates tab.</p> </li> <li> <p>The Proxy Certificates tab moves to the front of the dialog box. </p> </li> </ol> <p></p> <ol> <li> <p>Fill in the fields.</p> </li> <li> <p>Click OK.</p> </li> </ol> <p>The following table describes the fields and options on the Proxy Certificates tab.</p> Field Description Server side certificates Certificate file name Browse to the server certificate file that will be used to emulate a server certificate for the user client application. Default: The certificate supplied with the WebLOAD installation. Certificate password Type the password for the supplied certificate file. Default: password of the supplied by RadView certificate. Trusted CA file name <p>Browse to a Trusted CA file that is a certificate file with the list of trusted certificate authorities.</p><p>Note: We recommend that you use the file supplied with the WebLOAD installation.</p> Client side certificates Certificate file name Browse to the client certificate file that will be used by the proxy to connect to Internet sites. Certificate password Type the password for the supplied certificate file."},{"location":"recorder-user-guide/configuring_recorder_options/#setting-security-options","title":"Setting Security Options","text":"<p>Use the Security tab in the Recording and Script Generation Options dialog box to mask passwords in the script.</p> <p>There are two kinds of passwords you can mask:</p> <ul> <li>Protocol passwords \u2013 WebLOAD protocol password fields. These are the various possible password fields of the wlHttp object. They include the five following fields:</li> <li>ProxyNTPassWord</li> <li>ProxyPassWord</li> <li>HttpsProxyPassWord</li> <li>PassWord</li> <li>NTPassWord</li> <li>Form passwords \u2013 Password fields in form data. These can vary, depending on the form. You can list the names of the passwords fields whose contents you wish to encrypt.</li> </ul> <p>In the JavaScript code, the encrypted password is replaced with a \u2018decrypt\u2019 statement for the encrypted value, as shown in the following example:</p> <p></p> <p>Note that the purpose of the masking operation is to make sure passwords are not visible in plain text.</p> <p>To set the password encryption options:</p> <ol> <li>Click Recording and Script Generation Options in the Tools tab of the ribbon. </li> </ol> <p>Or- </p> <p>Select Recording and Script Generation Options from the WebLOAD Recorder Home tab of the ribbon. </p> <p>The Recording and Script Generation Options dialog box appears (see Figure 114).</p> <ol> <li> <p>Select the Security tab.</p> </li> <li> <p>The Security tab moves to the front of the dialog box.</p> </li> </ol> <p></p> <ol> <li> <p>Fill in the fields, as described in Table 31.</p> </li> <li> <p>Click OK.</p> </li> </ol> <p>The following table describes the fields and options on the Security tab.</p> Field Description Protocol Passwords Encrypt Protocol Passwords Select this option to instruct WebLOAD to encrypt all WebLOAD protocol passwords. Form Passwords Encrypt Form Passwords Select this option to instruct WebLOAD to encrypt all form passwords specified in the Form Password Fields List. Form Password Fields List Lists the form passwords that WebLOAD will encrypt. Add new form password name Type the name of a form password field to add it to the Form Password Fields List. Add Click to add a form password field to the Form Password Fields List. Remove Click to delete a selected password field from the Form Password Fields List."},{"location":"recorder-user-guide/configuring_recorder_options/#configuring-the-settings","title":"Configuring the Settings","text":"<p>WebLOAD Recorder enables you to specify settings for WebLOAD Recorder.</p>"},{"location":"recorder-user-guide/configuring_recorder_options/#opening-the-settings","title":"Opening the Settings","text":"<p>To open the Settings dialog box:</p> <ul> <li>Click Settings in the Tools tab of the ribbon. </li> </ul> <p>Or-</p> <ul> <li>Select Settings from the WebLOAD Recorder Home tab of the ribbon. The Settings dialog box opens.</li> </ul> <p></p> <p>The following table describes the options in the Settings dialog box.</p> Setting Description Playback Set the number of iterations to run when running scripts with WebLOAD Recorder (Default:1) and determine when to be prompted to save the session file. File Locations Define the default file locations during a test session. Diff Viewer Define which program is used for comparing recordings to playbacks. The default is WinMerge. Merge Tool Define which program is used for resolving code conflicts by editing the JavaScript code. The default is WinMerge."},{"location":"recorder-user-guide/configuring_recorder_options/#setting-playback-options","title":"Setting Playback Options","text":"<p>Set the number of iterations to be run during a test session and whether to prompt to save the session file before returning from debug mode to edit mode.</p> <p>To set Playback iterations:</p> <ol> <li>In the Settings dialog box (Figure 128), click Playback. The Playback Options screen is displayed (see Figure 128).</li> <li>Specify the number of iterations to run during script playback. The default value is 1.</li> <li>Select Prompt to save the debugging session file if you wish to be prompted to save the session file before switching to edit mode. When this is not selected, you are prompted to save the session file only when closing a script or exiting WebLOAD Recorder.</li> <li>Click OK.</li> </ol>"},{"location":"recorder-user-guide/configuring_recorder_options/#setting-file-locations","title":"Setting File Locations","text":"<p>Define the default file locations during a test session.</p> <p>To set the file locations:</p> <ol> <li>In the Settings dialog box (Figure 128), click File Locations. The File Locations screen is displayed.</li> </ol> <p></p> <p>The Description area at the bottom of the dialog provides a short explanation of each file location item.</p> <p>The following file locations can be defined:</p> <ul> <li>Sessions, scripts, and Templates: Default storage location for WebLOAD Recorder session, project, and script files.</li> <li>User Include Files: Default path for user Include files.</li> <li>User Copy Files: Default path for user Copy files.</li> <li>User PostData Files: Default path for user PostData files.</li> <li> <p>User Certificate Files: Default path for user Certificate files.</p> </li> <li> <p>Double-click the file location option that you wish to reset, and select a new file location.</p> </li> <li> <p>Click OK.</p> </li> </ul>"},{"location":"recorder-user-guide/configuring_recorder_options/#defining-the-difference-viewer-application","title":"Defining the Difference Viewer Application","text":"<p>Define which application is used for comparing and displaying the differences which may exist between a recording and its playback.</p> <p>To define the difference viewer application:</p> <ol> <li>In the Settings dialog box (Figure 128), click Diff Viewer. The Diff Viewer screen is displayed.</li> </ol> <p> </p> <p>By default, WinMerge is selected.</p> <ol> <li> <p>Optionally, select External and enter the relevant information into the corresponding field to specify a different application. Enter the following information:</p> </li> <li> <p>The path to the application\u2019s executable file. (Mandatory.)</p> </li> <li>% rname \u2013 Represents the name for the dialog box which displays the recording file. (Optional.)</li> <li>% pname \u2013 Represents the name for the dialog box which displays the playback file. (Optional.)</li> <li>% record \u2013 Represents the path of the recording file. (Optional.)</li> <li>% playback \u2013 Represents the path of the playback file. (Optional.)</li> </ol> <p>Examples:</p> <ul> <li> <p>ExamDiff Pro:</p> <p>C:\\Program Files\\ExamDiff Pro\\ExamDiff.exe % record % playback -- left_display_name:% rname --right_display_name:% pname</p> </li> <li> <p>KDiff:</p> <p>C:\\Program Files\\KDiff\\kdiff3.exe % record % playback --L1 % rname --L2 % pname</p> </li> <li> <p>Araxis</p> <p>C:\\Program Files\\Araxis\\compare.exe /max /wait /title1:% rname /title2:% pname % record % playback</p> </li> <li> <p>Click OK.</p> </li> </ul>"},{"location":"recorder-user-guide/configuring_recorder_options/#defining-the-merge-tool-application","title":"Defining the Merge Tool Application","text":"<p>Define which application is used for resolving conflicts between user changes and correlation changes made to the JavaScript code.</p> <p>To define the merge tool application:</p> <ol> <li>In the Settings dialog box (Figure 128), click Merge Tool. The Merge Tool screen is displayed. </li> </ol> <p></p> <p>By default, WinMerge is selected. WinMerge enables 2-way merging.</p> <ol> <li> <p>Optionally, select External and enter the relevant information into the corresponding field to specify a different application such as Araxis or TortoiseSVN which enable 3-way merging. Enter the following information:</p> </li> <li> <p>%basefile \u2013 Represents the path of the base file, before user and correlation changes.</p> </li> <li>%corrfile \u2013 Represents the path of the file with the correlation changes.</li> <li>%userfile \u2013 Represents the path of the file with the user changes.</li> <li>%outfile \u2013 Represents the outcome of the merge file.</li> </ol> <p>##### Examples:</p> <ul> <li> <p>Perforce Merge:</p> <p><code>C:\\Path-To\\P4Merge.exe %basefile %corrfile %userfile %outfile</code></p> </li> <li> <p>KDiff3:</p> <p><code>C:\\Path-To\\kdiff3.exe %basefile %userfile %corrfile -o %outfile --L1 Base --L2 User --L3 Correlation</code></p> </li> <li> <p>Araxis:</p> <p><code>C:\\Path-To\\compare.exe /max /wait /3 /title1:Correlation /title2:Base /title3:User %corrfile %basefile %userfile %outfile /a2</code></p> </li> <li> <p>WinMerge (2.8 or later):</p> <p><code>C:\\Path-To\\WinMerge.exe %outfile DiffMerge:</code></p> <p><code>C:\\Path-To\\DiffMerge.exe -caption=%mname -result=%outfile \u2013merge -nosplash -t1=%yname -t2=%bname -t3=%tname %userfile %basefile %corrfile</code></p> </li> <li> <p>Click OK.</p> </li> </ul>"},{"location":"recorder-user-guide/configuring_recorder_options/#customizing-the-quick-access-toolbar","title":"Customizing the Quick Access Toolbar","text":"<p>You can use the Customize Quick Access Toolbar option in the Quick Access toolbar to customize the Quick Access toolbar.</p>"},{"location":"recorder-user-guide/configuring_recorder_options/#configuring-the-parameterization-manager","title":"Configuring the Parameterization Manager","text":"<p>The Parameterization Manager enables you to edit a script containing static values and transform it into a script that will run multiple variations of the static values.</p> <p>When recording a script, WebLOAD captures the data that is being sent, including login details, user selections, and entered text. When running the script under load, simulating many users, it is desirable to use variations in the data, so as to simulate the</p> <p>application more realistically. To do so, you can replace the static values with parameters.</p> <p>Parameter values can come from a file, or be automatically generated numbers, strings and dates.</p> <p>The Parameterization Manager enables you to specify how the script should select values from the data file. For example:</p> <ul> <li>Order considerations \u2013 Whether to randomly select values from the data file, or use them in the order they appear.</li> <li>Uniqueness considerations \u2013 Whether the same value can be used at the same time by different virtual clients.</li> </ul> <p>You can also specify the update policy, which defines when a new value will be read or calculated. For example, whether to update the value on each round, or once at the beginning of the test.</p>"},{"location":"recorder-user-guide/configuring_recorder_options/#opening-the-parameterization-manager","title":"Opening the Parameterization Manager","text":"<p>To open the Parameterization Manager dialog box:</p> <ul> <li>Click Parameterization Manager in the Home tab of the ribbon. The Parameterization Manager dialog box opens.</li> </ul> <p></p>"},{"location":"recorder-user-guide/configuring_recorder_options/#setting-parameters-in-the-parameterization-manager","title":"Setting Parameters in the Parameterization Manager","text":"<ol> <li>In the Parameterization Manager Dialog Box (Figure 132), click Add.</li> <li>In the Name field, enter a name for the parameter.</li> <li> <p>In the Type field, select the parameter type:</p> </li> <li> <p>Date/Time \u2013 Defines a date/time parameter. For more information see *Defining a Date/Time Parameter* (on page 215).</p> </li> <li> <p>File \u2013 Defines a data file parameter. For more information see *Defining a Data File* (on page 218). To create a new data file, see Creating a Data File (on</p> <p>page 222).</p> </li> <li> <p>Number \u2013 Defines a number parameter. For more information see *Defining a Number Parameter* (on page 222).</p> </li> <li> <p>Random String \u2013 Defines a random string parameter. For more information see</p> <p>Defining a Random String Parameter (on page 226).</p> <p>The parameters definitions are stored with the script. You can change the parameters\u2019 definition at any time by using the Parameterization Manager again.</p> </li> </ol>"},{"location":"recorder-user-guide/configuring_recorder_options/#defining-a-datetime-parameter","title":"Defining a Date/Time Parameter","text":"<p>To define a date/time parameter:</p> <ol> <li> <p>In the Parameterization Manager Dialog Box (Figure 132), click Add. The Parameterization Manager dialog box opens.</p> </li> <li> <p>In the Type field, select Date/Time. The fields appropriate for defining a date/time parameter appear in the dialog box.</p> </li> </ol> <p></p> <ol> <li> <p>In the Description field, optionally enter a description for the date/time parameter.</p> </li> <li> <p>Fill in the fields as described in Table 33.</p> </li> <li> <p>Click OK.</p> </li> </ol> <p>The following table describes the fields and buttons in the Parameterization Manager \u2013 Date/Time dialog box.</p> Setting Description Date/Time Format Sample (current time) Shows the current time in the format you select in Date/Time format. Date/Time format Various predefined date/time formats. Select the desired format. Custom format <p>Enables you to define a custom date/time format using the supported field types. The valid field options are:</p><p>- %a \u2013 Abbreviated weekday name (such as, Fri).</p><p>- %A \u2013 Full weekday name (such as, Friday).</p><p>- %b \u2013 Abbreviated month name (such as, Oct).</p><p>- %B \u2013 Full month name (such as, October).</p><p>- %c \u2013 Standard date and time string (Sun Oct 17 04:41:13 2010).</p><p>- %d \u2013 Day of the month (1-31).</p><p>- %H \u2013 Hour, in 24-hour format (00-23).</p><p>- %I \u2013 Hour, in 12-hour format (1-12).</p><p>- %j \u2013 Day of the year (1-366).</p><p>- %m \u2013 Month in numerical format (1-12).</p><p>- %M \u2013 Minute (0-59).</p><p>- %p \u2013AM/PM.</p><p>- %S \u2013 Second (0-59).</p><p>- %U \u2013 Week of the year, (0-53), where week 1 has the first Sunday.</p><p>- %w \u2013 Weekday in numerical format (0-6), where Sunday is 0.</p><p>- %W \u2013 Week of the year, (0-53), where week 1 has the first Monday.</p><p>- %x \u2013 Date representation, as preferred in your locale.</p><p>- %X \u2013 Time representation, as preferred in your locale.</p><p>- %y \u2013 Abbreviated year (0-99).</p><p>- %Y \u2013 Full year (such as 2011).</p><p>- %Z \u2013 Time zone name.</p><p>- %% \u2013 Percent sign.</p><p>In addition, you can enter any kind of separator between fields, including spaces, dashes, underscores, slashes, and periods.</p> Verify Format <p>After entering a custom format, click this button to verify whether the format is valid:</p><p>- If it is valid, a sample of the format\u2019s output is displayed in the</p><p> Sample (current time) field.</p><p>- If it is invalid, a popup window appears indicating that you must enter a valid value.</p> Offset Specifies that the date/time parameter will not consider the current date and time but another date and time, in the future or in the past. Offset parameter by Determines by how many days and how much time to offset the current date. Prior to current date Specifies a negative offset (prior to the current day and time). Update Policy Defines when to update the parameter. Update value on each Round The virtual clients update the parameter once per round. Thus, if the same parameter appears again in the same round, it will get the same value. Update value on each use The virtual clients update the parameter\u2019s value each time it is used. Update value per Virtual Client The virtual clients update the parameter\u2019s value once at the beginning of the test (when running the InitClient function). All usage of the parameter by that virtual client will always use the same value."},{"location":"recorder-user-guide/configuring_recorder_options/#defining-a-data-file","title":"Defining a Data File","text":"<p>To select a data file:</p> <ol> <li> <p>In the Parameterization Manager Dialog Box (Figure 132), click Add.</p> </li> <li> <p>In the Type field, select File. The fields appropriate for selecting a data file and configuring its settings appear in the dialog box.</p> </li> </ol> <p></p> <ol> <li> <p>In the Description field, optionally enter a description of the file.</p> </li> <li> <p>Fill in the fields as described in Table 34.</p> </li> <li> <p>Click OK.</p> </li> </ol> <p>The following table describes the fields and buttons in the Parameterization Manager \u2013 File dialog box.</p> Setting Description Select Input File File Name Enables selecting the data file. Click  to select a data file. File Delimiter** The character separating the fields in each row of the data file. Create New Data File <p>Enables creating a new data file. For information, see Creating a Data File</p><p>(on page 222).</p> Select access method Defines the method for reading the next value/row from the file. The predefined methods are the most common and useful methods. Use values from the file <p>Use rows from the file without any specific restrictions. This is the recommended method to use when applicable.</p><p>This method corresponds to the following Custom settings: Scope \u2013 local, Order \u2013 random, When Out of Values \u2013 cycle.</p><p>For the explanations of Scope, Order and When Out of Values, see the explanations of the Custom (Advanced) option.</p> Use values, ensure that virtual clients do not use the same value at the same time <p>Use unique rows from the file so that a row cannot be used by two virtual clients at the same time. This is useful for example if the value is the login name, and the system under test does not allow the same user to be logged in twice.</p><p>This method corresponds to the following Custom settings:</p><p>Scope \u2013 global unique, Order \u2013 random, When Out of Values \u2013 cycle.</p><p>For the explanations of Scope, Order and When Out of Values, see the explanations of the Custom (Advanced) option.</p> Use all values once and stop the virtual clients <p>Use each row once. When all rows have been used, the virtual clients will be stopped.</p><p>This method corresponds to the following Custom settings:</p><p>Scope \u2013 global unique, Order \u2013 random, When Out of Values \u2013 stop virtual client.</p><p>For the explanations of the Scope, Order and When Out of Values parameters, see the explanations of the Custom (Advanced) option.</p> Custom (Advanced) Enables selecting any combination of Scope, Order and When Out of Value settings. Scope <p>Defines the scope (sharing policy) of values.</p><p>- Local \u2013 Each virtual client reads rows from its own copy of the pool.</p><p>- Global unique \u2013 All virtual clients read a unique row from a global pool, which is shared by all virtual clients on all load generators. A row cannot be used by two virtual clients at the same time.</p><p>- Global \u2013 All virtual clients in the session read rows from the shared (global) pool. However, the rows are not necessarily unique \u2013 two virtual clients may happen to use the same row at the same time. Note that if you select Global, there is not much point in enforcing order on the values because all virtual clients run at the same time, so it is not possible to read the values efficiently in a certain order. Therefore, specify Random or Not-ordered in the Order field.</p> Order <p>Defines the method for reading the next row from the file:</p><p>- Random \u2013 Every virtual client gets a random row from the file. All available rows have the same probability of being selected at any given point.</p><p>- Not Ordered \u2013 Every virtual client gets a random row from among the rows that have been used less times. Over time, all rows are used approximately the same number of times.</p><p>- Ordered \u2013 Every virtual client gets the next row from the file (sequential order). If necessary, the file is read through many times. Select this option only if sequential order is crucial for the application. When running more than one virtual client concurrently, the order of execution is anyway not defined, therefore this option is discouraged.</p><p></p><p>Note that specifying Ordered in conjunction with a Global or Global Unique Scope and Cycle When Out of Values, has unavoidable performance costs.</p> When out of values <p>Defines whether the rows can be used any number of times, or only once.</p><p>- Cycle values \u2013 Each row can be used any number of times.</p><p>- Stop virtual client \u2013 After each row was used once, stop any virtual client that requests another row. An error message is written to the monitor log window.</p><p>- Keep last value \u2013 After each row was used once, keep re-using the last value.</p> Update Policy <p>Defines when a parameter is updated, meaning when a new row is read.</p><p>- Update value on each Round \u2013 A virtual client reads a new row from the file per round. Thus, if the same parameter appears again in the same round, it will get the same value.</p><p>- Update value on each use \u2013 A virtual client reads a parameter\u2019s row each time it is used.</p><p>- Update value per Virtual Client \u2013 A virtual clients reads a new row from the file when initialized (when running the InitClient function). All usage of a parameter by that virtual client will always use the same value.</p> <p>Show all file rows /</p><p>Show first 10 rows only</p> Determines which rows the grid displays. Use first row as title row Uses the first row of the file as the title row. If you select this option, the values of the first row are not used as data but as parameter names. For further explanations, refer to *Inserting User-Defined Parameters in a Script* (on page 228)."},{"location":"recorder-user-guide/configuring_recorder_options/#creating-a-data-file","title":"Creating a Data File","text":"<p>You can create a new data file.</p> <p>To create a data file:</p> <ol> <li>From the Parameterization Manager \u2013 File dialog box (Figure 134), click Create New Data File. </li> </ol> <p>The Create Data File dialog box appears.</p> <p></p> <ol> <li> <p>Select a file delimiter from the drop-down list.</p> </li> <li> <p>Type the number of rows in the Rows field. The default is 10 rows.</p> </li> <li> <p>Type the number of columns in the Columns field. The default is 10 columns.</p> </li> <li> <p>If you did not use the default values, click OK.</p> </li> <li> <p>In the table, type a value in each cell.</p> </li> <li> <p>Click OK.</p> </li> <li> <p>A Save As dialog box appears. Save the new data file.</p> </li> </ol>"},{"location":"recorder-user-guide/configuring_recorder_options/#defining-a-number-parameter","title":"Defining a Number Parameter","text":"<p>To define a number parameter:</p> <ol> <li> <p>In the Parameterization Manager Dialog Box (Figure 132), click Add. The Parameterization Manager dialog box opens.</p> </li> <li> <p>In the Type field, select Number. The fields appropriate for defining a number parameter appear in the dialog box. </p> </li> </ol> <p></p> <ol> <li> <p>In the Description field, optionally enter a description of the number parameter.</p> </li> <li> <p>Fill in the fields as described in Table 35.</p> </li> <li> <p>Click OK.</p> </li> </ol> <p>The following table describes the fields and buttons in the Parameterization Manager \u2013 Number dialog box.</p> Setting Description Number range Min The minimum value for the number range. Max The maximum value for the number range. Select access method <p>Defines the method for determining the next number value.</p><p>The predefined methods are the most common and useful methods.</p> Random <p>Use random numbers freely.</p><p>This method corresponds to the following Custom settings: Scope \u2013 local, Order \u2013 random, When Out of Values \u2013 cycle.</p><p>For the explanations of Scope, Order and When Out of Values, see the explanations of the Custom (Advanced) option.</p> Random Unique, ensures that virtual clients do not use the same value at the same time <p>Use unique numbers. A number cannot be used by two virtual clients at the same time.</p><p>This method corresponds to the following Custom settings:</p><p>Scope \u2013 global unique, Order \u2013 random, When Out of Values \u2013 cycle.</p><p>For the explanations of Scope, Order and When Out of Values, see the explanations of the Custom (Advanced) option.</p> Use all values from the range once and stop the virtual clients <p>Use each number once. When all numbers in the range have been used, the virtual clients will be stopped.</p><p>This method corresponds to the following Custom settings:</p><p>Scope \u2013 global unique, Order \u2013 random, When Out of Values \u2013 stop virtual client.</p><p>For the explanations of Scope, Order and When Out of Values, see the explanations of the Custom (Advanced) option.</p> Local counter, each Virtual Client takes values sequentially from its own pool. <p>Each virtual client will pass through the numbers in the range.</p><p>This method corresponds to the following Custom settings: Scope \u2013 local, Order \u2013 ordered, When Out of Values \u2013 cycle.</p><p>For the explanations of Scope, Order and When Out of Values, see the explanations of the Custom (Advanced) option.</p> Global counter, all Virtual Clients take values sequentially from a shared pool <p>Use increasing integer values. Each value can be used only once. When the whole range is used, the virtual clients are stopped.</p><p>This method corresponds to the following Custom settings:</p><p>Scope \u2013 global unique, Order \u2013 ordered, When Out of Values \u2013 stop virtual client.</p><p>For the explanations of Scope, Order and When Out of Values, see the explanations of the Custom (Advanced) option.</p> Custom (Advanced) Enables selecting any combination of Scope, Order and When Out of Value settings. Scope <p>Defines the scope (sharing policy) of values.</p><p>- Local \u2013 Each virtual client reads values from its own copy of the pool.</p><p>- Global unique \u2013 All virtual clients read a unique value from a global pool, which is shared by all clients on all load generators. A value cannot be used by two virtual clients at the same time.</p><p>- Global \u2013 All virtual clients in the session read values from the shared (global) pool. However, the values are not necessarily unique \u2013 two virtual clients may happen to use the same value at the same time. Note that if you select Global, there is not much point in enforcing order on the values because all virtual client run at the same time, so it is not possible to read the values efficiently in a certain order. Therefore, specify Random or Not-ordered in the Order field.</p> Order <p>Defines the method for determining the next number value:</p><p>- Random \u2013 Every virtual client gets a random number value. All available values have the same probability of being selected at any given point.</p><p>- Not Ordered \u2013 Every virtual client gets a random number value from among the values that have been used less times. Over time, all rows are used approximately the same number of times.</p><p>- Ordered \u2013 Every virtual client gets the next number value. If necessary, the sequence of numbers is gone through many times. Select this option only if sequential order is crucial for the application. In general, this option is not recommended</p><p>\u2003Note that specifying Ordered in conjunction with a Global or Global Unique scope and Cycle When Out of Values, has unavoidable performance costs.</p> When out of values <p>Defines whether the values can be used any number of times, or only once.</p><p>- Cycle values \u2013 Each value can be used any number of times.</p><p>- Stop virtual client \u2013 After each value was used once, stop any virtual client that requests another value. An error message is written to the monitor log window.</p><p>- Keep last value \u2013 After each value was used once, keep re-using the last value.</p> Update Policy <p>Defines when a parameter is updated, meaning when a new value is read.</p><p>- Update value on each Round \u2013 A virtual client reads a new value per round. Thus, if the same parameter appears again in the same round, it will get the same value.</p><p>- Update value on each use \u2013 A virtual client reads a parameter\u2019s value each time it is used.</p><p>- Update value per Virtual Client \u2013 A virtual clients reads a new value when initialized (when running the InitClient function). All usage of a parameter by that virtual client will always use the same value.</p>"},{"location":"recorder-user-guide/configuring_recorder_options/#defining-a-random-string-parameter","title":"Defining a Random String Parameter","text":"<p>To define a random string parameter:</p> <ol> <li> <p>In the Parameterization Manager Dialog Box (Figure 132), click Add. The Parameterization Manager dialog box opens.</p> </li> <li> <p>In the Type field, select Random String. The fields appropriate for defining a random string parameter appear in the dialog box.</p> </li> </ol> <p></p> <ol> <li> <p>In the Description field, optionally enter a description of the random string parameter.</p> </li> <li> <p>Fill in the fields as described in Table 36.</p> </li> <li> <p>Click OK.</p> </li> </ol> <p>The following table describes the fields and buttons in the Parameterization Manager \u2013 Random String dialog box.</p> Setting Description String length Min The minimum length of the string, in number of characters. Max The maximum length of the string, in number of characters. Update Policy <p>Defines when to update the parameter, meaning when the virtual clients get a new value for the parameter.</p><p>- Update value on each Round \u2013 A virtual clients reads a new value per round. Thus, if the same parameter appears again in the same round, it will get the same value.</p><p>- Update value on each use \u2013 A virtual clients reads a parameter\u2019s value each time it is used.</p><p>- Update value per Virtual Client \u2013 A virtual clients reads a new value when initialized (when running the InitClient function). All usage of the parameter by that virtual client will always use the same value.</p> <p>Note: Using a random string parameter in a script does not provide unique values. If you need unique values, or special formatting of the string, create a data file with unique values and use File parameterization (see Defining a Data File on page 218).</p>"},{"location":"recorder-user-guide/configuring_recorder_options/#inserting-user-defined-parameters-in-a-script","title":"Inserting User-Defined Parameters in a Script","text":"<p>WebLOAD Recorder enables you to edit parameters having static values and replace the static values with a call to a set of specified values. During runtime, the script runs the parameter using values from the set.</p> <p>The first step is to use the Parameterization Manager to define the set of values (see Configuring the Parameterization Manager on page 213). The set of values is a type of parameter (Number parameter, String parameter, Date/Time parameter or Data File parameter). The second step, described in this section, is to replace a static value in the script with a call to the defined parameter.</p> <p>To insert a user-defined parameter in a script:</p> <ol> <li> <p>In the main window, click Open in the File tab of the ribbon, and open the script you want to edit.</p> </li> <li> <p>In the JavaScript View pane, select the static value you want to replace. For example, in the line : </p> </li> </ol> <p><code>wlHttp.FormData[\"name\"] = \"john\"</code> </p> <p><code>select \"John\".</code></p> <ol> <li>Right-click and select Insert Variable.</li> </ol> <p>The Insert Variable menu appears (Figure 54).</p> <ol> <li>Select the parameter you defined in the Parameterization Manager.</li> </ol> <p>The selected parameter replaces the static value in the script. In our example, if you selected Users_firstname.getValue()from the Insert Variable menu, the line now shows:</p> <p><code>wlHttp.FormData[\"name\"] = Users\\_firstname.getValue();</code></p> <p>Note that if you are using a parameter from a data file, the parameter name reflects whether the data file includes a title row.</p> <ul> <li> <p>If the data file includes a title row, the parameter name is of type:</p> <p><code>{Parameter name}\\_{column title}.getValue().</code></p> </li> <li> <p>If the data file does not include a title row, the column number is used, and the parameter name is of type:</p> <p><code>{Parameter name}\\_Col{column number}.getValue()</code></p> </li> </ul> <p>Note: To replace multiple occurrences of a static value, you can use the Edit &gt; Replacetool.</p>"},{"location":"recorder-user-guide/configuring_recorder_options/#example-of-using-user-defined-parameters-in-a-script","title":"Example of Using User-Defined Parameters in a Script","text":"<p>If the original recorded script includes:</p> <p><code>wlHttp.FormData[\"first\\_name\"] = \"John\"</code> <code>wlHttp.FormData[\"last\\_name\"] = \"Smith\"</code></p> <p><code>wlHttp.FormData[\"age\"] = \"47\"</code></p> <p>and you wish to replace the static values (John, Smith, 47) with parameters, you can define a random number parameter \u2018Age\u2019, and a file parameter that calls the \u2018Users\u2019 data file having columns \u2018firstName\u2019 and \u2018lastName\u2019.</p> <p>Using the Insert Variable menu, modify the script as follows:</p> <p><code>wlHttp.FormData[\"first\\_name\"] = Users\\_firstName.getValue();</code> </p> <p><code>wlHttp.FormData[\"last\\_name\"] = Users\\_lastName.getValue();</code> </p> <p><code>wlHttp.FormData[\"age\"] = Age.getValue();</code></p>"},{"location":"recorder-user-guide/correlating_scripts/","title":"Correlating Scripts","text":"<p>This section provides instructions for correlating scripts with WebLOAD Recorder. The WebLOAD correlation engine helps you overcome one of the main challenges of recording or replaying Web application load tests: dynamic data.</p> <p>Dynamically generated data changes every time you run a Web application. For example, the session ID that uniquely identifies a user\u2019s active session is allocated by the Web server or the application every time such a session is initiated. (The session ID is also used for session management. For more information, see Session Management on page 107.) Such dynamic data cannot simply be recorded as is and played back, because the playback will inevitably fail.</p> <p>WebLOAD enables you to correlate the most common methods used to pass dynamic data between a server and a client. The methods are:</p> <ul> <li>Cookies \u2013 This method is mostly used for session management, but cookies may also contain additional dynamic data sent from a server. In most situations, the browser returns the sent cookie in subsequent requests. This scenario is handled automatically by WebLOAD and no additional correlation activities are required. WebLOAD also supports cases where a value received in a cookie is sent as request data or a cookie is created in the client-side JavaScript.</li> <li>URL rewriting \u2013 This method is most commonly resolved by assigning the returned Session ID to a local variable and using this variable throughout the rest of the script.</li> <li>Hidden form fields \u2013 This method is most commonly used for passing localized dynamic data that is not necessarily within the scope of the full session.</li> <li>Any response content \u2013 Some applications return dynamic data within various types of HTTP responses, including client-side JavaScript and XML content.</li> </ul>"},{"location":"recorder-user-guide/correlating_scripts/#about-correlating-scripts-with-webload-recorder","title":"About Correlating Scripts with WebLOAD Recorder","text":"<p>WebLOAD contains a powerful rule based correlation engine. You can define rules that describe how dynamic values should be extracted in their application.</p> <p>WebLOAD also provides automatic discovery of potential correlation rules. Using auto-discovery of rules eliminates the need to manually define correlation rules in some common cases.</p> <p>WebLOAD Recorder identifies dynamic data using correlation rules. These rules can be configured to suit your correlation needs. For more information on correlation rules, see Configuring the Correlation Rules (on page 98).</p> <p>The WebLOAD correlation engine enables you to:</p> <ul> <li>Automatically discover potential correlation rules \u2013 WebLOAD can automatically suggest correlation rules for common scenarios, based on the values sent and received in the script, or for a specific value.</li> <li>Reuse correlation logic \u2013 Once the rules are defined or discovered, the correlation engine uses the rules to make all necessary changes to the script. The rules can be used unchanged in all future scripts with the same scenarios.</li> <li>Re-run correlation at any time \u2013 You can run the correlation process multiple times on previously recorded scripts. For example, if you perform correlation based on a particular set of rules, you can correlate that script another time based on a different set of rules, without re-recording the script.</li> <li>Add comments to your JavaScript \u2013 When dynamic data is correlated according to the correlation rules you define, WebLOAD Recorder can add comments to your JavaScript to help you keep track of the changes made by the correlation engine.</li> <li>Keep a detailed correlation log \u2013 The correlation engine can keep track of all the correlation operations performed on your script in the form of a textual log file. You can determine the location of this log file as well as the level of information it stores. Either you or RadView Technical Support can use the correlation log file to identify, investigate, and solve correlation problems.</li> </ul>"},{"location":"recorder-user-guide/correlating_scripts/#correlating-to-and-from-cookies","title":"Correlating To and From Cookies","text":"<p>WebLOAD enables correlating to and from cookies.</p> <p>Most cookies get their values from a previous response\u2019s Set-Cookie header, originating from the server. These values are handled automatically by WebLOAD and do not require any action. They do not appear in the script.</p> <p>Client-side cookies are created by the client using JavaScript in response to a user preference, client-side generated content, such as a random number, or for some other reason. These cookies appear in the script as wlCookie.Set() commands. The values of these cookies can be correlated like any other dynamic data.</p>"},{"location":"recorder-user-guide/correlating_scripts/#performing-correlation","title":"Performing Correlation","text":"<p>Correlation is performed on your script, based on the correlation rules. Correlation rules are defined in one of the following ways:</p> <ul> <li>Auto-discovery of correlation rules \u2013 When performing correlation with</li> </ul> <p>auto-discovery of correlation rules, the correlation engine compiles a list of the suggested correlation rules, enabling you to select the rules that are applicable to your application. For more information, see *Approving the Correlation Engine Rules* (on page 94).</p> <ul> <li>In the Correlation Rules Editor \u2013 Before running the correlation engine, you can use the correlation rules editor to add and edit the rules.</li> </ul> <p>Note: You can turn discovered rules into permanent rules and then edit the rules in the correlation rules editor.</p> <p>For more information, see Configuring the Correlation Rules (on page 98).</p> <p>Note: Correlation cannot be performed on scripts that were not recorded.</p>"},{"location":"recorder-user-guide/correlating_scripts/#performing-auto-discovery-correlation","title":"Performing Auto-discovery Correlation","text":"<p>To perform correlation with auto-discovery of rules:</p> <ol> <li>Click Correlation in the Home tab of the ribbon and select Correlate Script and Discover Rules from the drop-down list.</li> </ol> <p>The Perform Script Correlation dialog box appears.</p> <p></p> <ol> <li>Click Save and Continue to save the changes in your script and perform correlation.</li> </ol> <p>-Or-</p> <p>Click Don\u2019t Save and Continue to perform correlation without saving the changes in your script.</p> <p>-Or-</p> <p>Click Cancel to close the Perform Script Correlation dialog box without performing correlation in your script.</p>"},{"location":"recorder-user-guide/correlating_scripts/#performing-auto-discovery-correlation-for-specific-values","title":"Performing Auto-discovery Correlation for Specific Values","text":"<p>WebLOAD enables you to perform correlation with auto-discovery of rules for any value you select in a script. This provides correlation when normal auto-discovery is not sufficient. Auto-discovery correlation for specific values can be used instead of normal auto-discovery in the following cases:</p> <ul> <li>Partial values \u2013 Since auto-discovery only searches for exact matches, if the dynamic value you wish to correlate is part of the sent value, it is not found. For example, in <code>wlHttp.FormData[\u201cdata\u201d]=\u201dsession\\*1234\u201d or wlHttp.FormData[\u201cdata\u201d]=\u201d&lt;xml&gt;&lt;data sessionid= 1234/&gt;&lt;xml&gt;\u201d</code>, if only 1234 is dynamic, normal auto-discovery does not find this value.</li> </ul> <p>Note: The only exception is in POST and GET commands, where the parameter name or values are replaced.</p> <ul> <li>Dynamic URLs \u2013 Similar to partial values, if a URL contains a dynamic value, it is not found. For example, in http://www.mydomain.com/2131231/something.asp, if only 2131231 is dynamic, normal auto-discovery does not find this value..</li> <li>Non-standard query strings \u2013 Similar to partial values and dynamic URLs, if a value appears to be a URL but uses a different encoding method, it is not found. For example, in http://www.domain.com;strange=4342?normal=44&amp;other=222, normal auto-discovery finds normal=44 and other=222, but does not find strange=4342.</li> <li>Using the referer header \u2013 When available, auto-discovery uses the referer header and only searches for values there. Values that need to be correlated may be elsewhere.</li> <li>Filter noise \u2013 By default, auto-discovery filters out values that are too short or have a low score. In some cases, required rules may also be filtered out.</li> </ul> <p>To perform correlation with auto-discovery of rules for a specific value:</p> <ol> <li> <p>Select the value you wish to correlate in the script.</p> </li> <li> <p>Click Correlation in the Home tab of the ribbon and select Correlation Script for Specific Value from the drop-down list.</p> </li> </ol> <p>-Or-</p> <p>Right-click and select Correlate Specific Value.</p> <p>The Correlation Specific Value dialog box appears, displaying the selected value.</p> <ol> <li> <p>Click OK.</p> </li> <li> <p>WebLOAD performs a regular correlation with auto-discovery of rules. The Perform Script Correlation dialog box appears (Figure 61).</p> </li> <li> <p>Click Save and Continue to save the changes in your script and perform correlation.</p> </li> </ol> <p>-Or-</p> <p>Click Don\u2019t Save and Continue to perform correlation without saving the changes in your script.</p> <p>-Or-</p> <p>Click Cancel to close the Perform Script Correlation dialog box without performing correlation in your script.</p>"},{"location":"recorder-user-guide/correlating_scripts/#setting-the-default-correlation-action","title":"Setting the Default Correlation Action","text":"<p>You can control the default correlation action that WebLOAD should perform after recording.</p> <p>To control which correlation action is performed after recording:</p> <ol> <li>Click Recording and Script Generation Options in the Tools tab of the ribbon. The Recording and Script Generation Options dialog box appears (Figure 114).</li> <li>Select the Correlation Options tab.</li> </ol> <p>The Correlation Options tab moves to the front of the dialog box (Figure 120).</p> <ol> <li> <p>In the Correlation level drop-down, select one of the following:</p> </li> <li> <p>Do not run \u2013 When recording is complete, go directly to the script without performing correlation. You can run the correlation engine at a later time.</p> </li> <li>Use existing rules \u2013 Run the correlation engine once the script recording is complete, only using the existing rules (do not try to auto-discover new rules).</li> <li>Discover rules \u2013 Run the correlation engine using existing rules and try to discover new rules.</li> <li>Prompt \u2013 A dialog that provides you with all of the options is displayed when the recording is complete. This is the default setting. For more information on using the Recording Complete dialog box, see Recording a script (on page 34).</li> </ol>"},{"location":"recorder-user-guide/correlating_scripts/#automatic-discovery-of-correlation-rules","title":"Automatic Discovery of Correlation Rules","text":"<p>WebLOAD enables you to automatically discover potential correlation rules.</p> <p>The discovery process is based on reverse scanning of the script. The auto-discovery module searches for the sent values in previous responses and tries to formulate rules to extract the values.</p> <p>Notes:</p> <ul> <li>Not all of the suggested rules are usually needed. Select the rules that are appropriate for your application. You can run auto-discovery as many times as</li> </ul> <p>needed, and try different rules.</p> <ul> <li>There are some rule types that are not automatically discovered and you must manually define a rule for them. </li> </ul> <p>When running correlation with auto-discovery, the correlation engine uses the existing defined rules and does not discover them again. Inactive rules are also not rediscovered or used. Making a rule inactive can be used to prevent discovering rules that you already know are unneeded.</p> <p>When the correlation process is complete, a review form is displayed for the user to choose which rules to use. For more information see *Approving the Correlation Engine Rules* on page 94.</p>"},{"location":"recorder-user-guide/correlating_scripts/#approving-the-correlation-engine-rules","title":"Approving the Correlation Engine Rules","text":"<p>When performing Auto-discovery correlation, the correlation engine compiles a list of the suggested correlation rules according to the dynamic values that were recorded in the script. This enables you to determine which rules to approve and use during the correlation.</p> <p>To approve the correlation engine rules:</p> <ol> <li>After running correlation with auto-discovery of rules, the Correlation engine results dialog box appears.</li> </ol> <p></p> <ol> <li>Edit the rules in the Correlation Engine Results dialog box according to the following table and click OK.</li> </ol> Column / Field Description Use <p>Select the rules to use in this script. You can click Use All to select all of the rules in the Use and Add as permanent columns, or Use None to deselect all of the rules in both columns.</p><p></p><p>Note: You can use the rule in the current script, without adding it as a permanent rule.</p> Field Name <p>The field name that was used to send the value in the request.</p><p>This field may be empty if it is defined in the rule.</p> Value The value extracted or replaced. Node ID <p>The node ID in the script. Each script node is marked with a comment indicating the node ID, for example:</p><p>/***** WLIDE - URL : http://ww.mydomain.com/ - ID:42</p><p>*****/</p> Node URL The GET or POST request of the value extracted or replaced. Rule Group The name of the group to which the correlation rule belongs. Rule Name The name of the correlation rule. Add as permanent <p>Specify how to use this rule:</p><p>- Never use \u2013 Do not use this rule in any script</p><p>- Add as rule \u2013 Add the rule to the permanent rules (always use)</p><p>- Temporary \u2013 Use the rule only in this run</p> Rule details Rule Type <p>The method used to find the dynamic data to be correlated, according to the selected rule\u2019s definition. To modify the rule, see *Defining Correlation Rules* on page 101.</p><p>Possible values are:</p><p>- All body text</p><p>- Form field values</p><p>- User defined</p><p>- Replace with expression</p><p>- Search in cookies</p> \u2026 Additional rule type fields. These fields change according to the rule type. Description A summary of the selected rule\u2019s details."},{"location":"recorder-user-guide/correlating_scripts/#resolving-conflicts-between-manual-changes-and-correlation-changes","title":"Resolving Conflicts between Manual Changes and Correlation Changes","text":"<p>Starting from WebLOAD 10.1, when you run correlation all the manual changes you may have made in the original JavaScript code are preserved by default (see Configuring the Correlation Options on page 189). However, the process of correlation also introduces some changes into the original JavaScript. Sometimes your manual changes conflict with the correlation changes. When this happens, a Conflict Resolution window appears in which you are asked to resolve the conflict.</p> <p>Figure 63 shows a sample Conflict Resolution window.</p> <p></p> <p>The left side of the Conflict Resolution window displays the correlated version without any user changes, and the right side displays the user version without any correlation changes. You must do one of the following:</p> <ul> <li>Click Use correlated version \u2013 This keeps all correlation changes and discards all user changes.</li> <li>Click Use user version \u2013 This keeps all user changes and discards all correlation changes.</li> <li>Click Edit conflict \u2013 This enables editing the JavaScript to your satisfaction. When you select this option, a WinMerge window appears by default. For information, refer to Editing Conflicts between Manual Changes and Correlation Changes below. When you finish editing, click Resolved in the Conflict Resolution window.</li> </ul>"},{"location":"recorder-user-guide/correlating_scripts/#editing-conflicts-between-manual-changes-and-correlation-changes","title":"Editing Conflicts between Manual Changes and Correlation Changes","text":"<p>When you select to edit conflicts between manual changes and correlation changes, a merge tool is automatically launched, displaying the two conflicting versions.</p> <p>The default merge tool is the WinMerge application. Note that you can optionally specify a different merge tool, as described in Defining the Merge Tool Application (on page 212).</p> <p></p> <ol> <li>Select the lines you wish to edit, and edit them as desired.</li> <li>Save your changes.</li> <li>Exit the WinMerge application.</li> </ol>"},{"location":"recorder-user-guide/correlating_scripts/#configuring-the-correlation-rules","title":"Configuring the Correlation Rules","text":"<p>WebLOAD Recorder enables you to configure the correlation rules used to define the correlation actions in your script with the Correlation Rules Editor. You can modify, create, and rename the correlation rules and groups.</p>"},{"location":"recorder-user-guide/correlating_scripts/#opening-the-correlation-rules-editor","title":"Opening the Correlation Rules Editor","text":"<p>Open the Correlation Rules Editor to view, create or edit correlation rules.</p> <p>To open the Correlation Rules Editor:</p> <ul> <li>Click Correlation in the Home tab of the ribbon and select Correlation Rules Editor from the drop-down list.</li> </ul> <p>The Correlation Rules Editor opens, displaying application- and development framework-specific correlation rules by groups.</p> <p></p> <p>The following table describes the options in the Correlation Rules Editor.</p> Field Description Default rule set <p>Displays a tree of the correlation rules. Each node represents a correlation rule group. You can expand the group nodes to view the associated correlation rules.</p><p>The order of the correlation rules in the tree determines the order of their execution.</p><p>You can configure the correlation rules by selecting the checkbox adjacent to the rule that you want to apply in the correlation. You can expand or compress the tree using the +/- buttons. If an upper level component is selected, all of the subcomponents in that tree will be selected. If only some subcomponents in a tree are selected, the upper level component is selected and greyed.</p> Description Displays a description of the correlation group or rule. The type of information displayed in this area depends on the node selected in the Default rule set area. New Group Create a new correlation rule group below the selected group. If no group is selected, the new correlation rule group is created after the last group node. New Rule Create a new correlation rule below the selected rule. If no rule is selected, the new correlation rule is created after the last rule in the selected group. Move Up Move the selected correlation rule up inside its group or move the selected correlation group up in the tree. Move Down Move the selected correlation rule down inside its group or move the selected correlation group down in the tree. Delete Delete the selected correlation rule or group. Rename Rename the selected correlation rule or group. OK Accept your changes and close the Correlation Rules Editor dialog box. Cancel Discard your changes and close the Correlation Rules Editor dialog box."},{"location":"recorder-user-guide/correlating_scripts/#creating-correlation-rules","title":"Creating Correlation Rules","text":"<p>You can create correlation rules and groups to better suit your correlation requirements.</p>"},{"location":"recorder-user-guide/correlating_scripts/#to-create-a-correlation-rule","title":"To create a correlation rule:","text":"<ol> <li>Click Correlation in the Home tab of the ribbon and select Correlation Rules Editor from the drop-down list.</li> </ol> <p>The Correlation Rules Editor dialog box opens (see Figure 65).</p> <ol> <li>In the Default rule set area, select the correlation rule under which you wish to create your correlation rule and click New Rule,</li> </ol> <p>-Or-</p> <p>Right-click the correlation rule under which you wish to create your correlation rule and select New Rule from the pop-up menu.</p> <p>A new rule is created in the tree, at the specified location.</p> <ol> <li> <p>Modify the correlation rule parameters, as described in Defining Correlation Rules</p> </li> <li> <p>Click OK. The new correlation rule is added to the Default rule set.</p> </li> </ol>"},{"location":"recorder-user-guide/correlating_scripts/#to-create-a-correlation-group","title":"To create a correlation group:","text":"<ol> <li>Click Correlation in the Home tab of the ribbon and select Correlation Rules Editor from the drop-down list.</li> </ol> <p>The Correlation Rules Editor dialog box opens (see Figure 65).</p> <ol> <li>In the Default rule set area, select the correlation group under which you wish to create your group and click New Group,</li> </ol> <p>-Or-</p> <p>Right-click the correlation group under which you wish to create your group and select New Group from the pop-up menu.</p> <p>A new group is created in the tree, at the specified location.</p> <ol> <li>Click OK.</li> </ol>"},{"location":"recorder-user-guide/correlating_scripts/#defining-correlation-rules","title":"Defining Correlation Rules","text":"<p>You can modify the existing correlation rules and groups to better define your correlation requirements.</p>"},{"location":"recorder-user-guide/correlating_scripts/#to-modify-an-existing-correlation-rule","title":"To modify an existing correlation rule:","text":"<ol> <li>Click Correlation in the Home tab of the ribbon and select Correlation Rules Editor from the drop-down list.</li> </ol> <p>The Correlation Rules Editor dialog box opens (see Figure 65).</p> <ol> <li>In the Default rule set area, expand a correlation rule group. The correlation rules belonging to the group are displayed.</li> </ol> <p></p> <ol> <li>Click a correlation rule. The Correlation Rules Properties appear.</li> </ol> <p></p> <p>Note: The Match by fields vary according to the value selected in the Rule type field.</p> <ol> <li>Modify the correlation rule properties according to the information in the following table:</li> </ol> Field Search Scope Value Match by Field Description Description A free text description of the selected rule. Rule type <p>Determines the method used to find the dynamic data to be correlated. Possible rule type values are:</p><p>- All body text</p><p>- Form field values</p><p>- User defined</p><p>- Replace with expression</p><p>- Search in cookies</p> All body text Prefix A text string that is used together with the Suffix parameter to uniquely identify the dynamic data string. The dynamic string should start immediately after the Prefix parameter. Suffix A text string that is used together with the Prefix parameter to uniquely identify the dynamic data string. The dynamic string should end immediately before the Suffix parameter. Prefix Instance The occurrence instance of the Prefix in the search scope. That is, if the Prefix parameter appears multiple times in the body text and you want to correlate only the second instance, select 2 Reverse <p>Search for dynamic data from the end of the search scope.</p><p>Note that if Reverse is selected, then Prefix Instance is also reversed. Thus, a value of 2 in Prefix Instance indicates the second from last occurrence instance.</p> All instances <p>Search for all occurrences of the dynamic data.</p><p>When All Instances is selected, both Prefix Instance and Reverse are not meaningful and are disabled.</p> Form Field values Search for dynamic data in specific form fields, regardless of if they are hidden. You can specify either a form field name or ID. For example, if you specify a form field ID, then the correlation engine will only search for form field IDs and not for form field names. By ID Specify a form field ID to be searched. By Name Specify a form field name to be searched. User defined Search for dynamic data according to your own search criteria. JavaScript expression <p>Specify a JavaScript expression to be used as an extraction logic. This can be a valid regular expression, DOM access function, or any other function call. For example:</p><p>extractValue (\u201cprefix\u201d, \u201csuffix\u201d,</p><p>document.wlSource )</p><p>To call a custom JavaScript function, the function must be accessible for both the execution engine and the correlation engine, so it should be included as an auto-discovered JavaScript code.</p><p>For more information on the auto-discovery of JavaScript files, see JavaScript Language Extension, in the WebLOAD Extensibility SDK.</p> Save Source Select this option if your JavaScript expression refers to the response body (document.wlSource). Replace with expression Expression <p>Replace data according to the Field name, regardless of the value. Replace the value with the value in Expression.</p><p>For example:</p><p>Rule type = Replace with expression</p><p>Expression = new Date().getTime() Field name = timestamp</p><p>During correlation, the timestamp value is replaced with \u201cnewDate().getTime()\u201d instead of the date on which the script was recorded.</p> Search in cookies Cookie name <p>Search for dynamic data among the received cookies, according to the Cookie name.</p><p>Replace the dynamic data in the query string or post data request.</p><p>Note: In most cases, cookies sent by the server (in a Set-Cookie header) are echoed back by the client (in a Cookie header). WebLOAD\u2019s engine automatically handles these cases and they do not require correlation.</p><p>Select this rule type when the value received in the cookie is used elsewhere in the request (using JavaScript) and correlation is necessary.</p> Correlation settings Minimum Length Define the minimum length of the value to be considered for correlation. Shorter values, even if matched by a rule, are ignored. Maximum Length Define the maximum length of the value to be considered for correlation. Longer values, even if matched by a rule, are ignored. Correlate exact matches only <p>Select this option to replace the identified dynamic value with a variable only when the values are a complete match. If the value found is only a part of the sent value, the rule will be ignored.</p><p>For example, if the dynamic value found is \u201c1234\u201dand the variable replacing the dynamic value contains \u201c123\u201d:</p><p>- When Correlate exact matches only is unchecked, the value \u201c1234\u201d will be replaced by the variable and then a \u201c4\u201d.</p><p>- When Correlate exact matches only is checked, the value will not be replaced since it is not an exact match.</p><p> Note: The values within a query string are also considered a complete match. For example, if the dynamic value is found in the following string, wlHttp.Get(http://domain?field=123), the dynamic value \u201c123\u201d will be replaced by the variable regardless of whether the Correlate exact matches only is checked.</p><p>By default this is selected.</p> Field name <p>Replace the dynamic value only when the value is sent with this field name.</p><p>Note: The Field name limits where the value can be replaced and is applicable to all rule types. Do not confuse this with the Search in: Form field values: by name field, which controls how the value is extracted</p><p>This field is optional, unless Replace with Expression is selected, in which case, this field is mandatory.</p> <ol> <li>Click OK.</li> </ol> <p>The correlation rule is modified.</p>"},{"location":"recorder-user-guide/correlating_scripts/#renaming-correlation-rules","title":"Renaming Correlation Rules","text":"<p>You can rename correlation rules and groups to better organize the correlation rules according to your specific correlation requirements.</p>"},{"location":"recorder-user-guide/correlating_scripts/#to-rename-a-correlation-rule","title":"To rename a correlation rule:","text":"<ol> <li>Click Correlation in the Home tab of the ribbon and select Correlation Rules Editor from the drop-down list.</li> </ol> <p>The Correlation Rules Editor dialog box opens (see Figure 65).</p> <ol> <li> <p>Expand the correlation group to which your correlation rule is associated.</p> </li> <li> <p>Slow double-click the correlation rule,</p> </li> </ol> <p>-Or-</p> <p>Right-click the correlation rule and select Rename from the pop-up menu. The correlation rule\u2019s name becomes editable.</p> <ol> <li>Rename the correlation rule and click anywhere in the Default rule set area. The correlation rule is renamed.</li> </ol>"},{"location":"recorder-user-guide/correlating_scripts/#to-rename-a-correlation-group","title":"To rename a correlation group:","text":"<ol> <li>Click Correlation in the Home tab of the ribbon and select Correlation Rules Editor from the drop-down list.</li> </ol> <p>The Correlation Rules Editor dialog box opens (see Figure 65).</p> <ol> <li>Slow double-click a correlation group.</li> </ol> <p>-Or-</p> <p>Right-click a correlation group and select Rename from the pop-up menu. The correlation group\u2019s name becomes editable.</p> <ol> <li>Rename the correlation group and click anywhere in the Default rule set area. The correlation group is renamed.</li> </ol>"},{"location":"recorder-user-guide/correlating_scripts/#session-management","title":"Session Management","text":"<p>The HTTP protocol has no built-in method of uniquely identifying or tracking a particular user or session within an application, without transmitting some data between the client and the server. The most common method for an internet</p> <p>application developer to track a user\u2019s interaction with a website is by providing the user with a unique session ID. This process is referred to as session management. Most Web servers generate such session IDs for internet application developers. In such cases, the Web servers can communicate the session IDs between the user\u2019s internet browser and the server through:</p> <ul> <li>Cookies \u2013 When a server receives a request to create a session, it creates a session object and associates this object with a session ID. The session ID is then transmitted back to the browser as part of a response header and is stored with the rest of the cookies in the browser. On subsequent requests from the browser, the session ID is transmitted as part of the request header, which enables the application to associate each request for a session ID with the previous requests from that user. The entire interaction between the browser, application server, and the application is transparent to the end user.</li> <li>URL rewriting \u2013 The session ID information is embedded by the server in the URL and is then received by the application with the HTTP GET command (for example, when the client clicks on an embedded link within a page).</li> <li>Hidden form fields \u2013 The session ID information is stored within the fields of a form and submitted to the application. Typically, the session ID information is embedded within the form as a hidden field and is submitted with the HTTP GET/POST command.</li> </ul> <p>The following sections provide information on how some of the most commonly used Web and application servers perform session management.</p>"},{"location":"recorder-user-guide/correlating_scripts/#ibm-websphere-application-server","title":"IBM WebSphere Application Server","text":"<p>The IBM WebSphere Application Server (WAS) supports all the session management methods listed in Session Management (on page 107), but works best with cookies (which is its default method). The WAS implementation of this method differs from a pure cookie-based method by using only one cookie, JSESSIONID, that contains only the session ID information. (A pure cookie-based method would use multiple cookies, containing possibly sensitive user state information, such as an account number or user ID.) JSESSIONID is used by the server to associate the request with the information already stored on the server for that session ID.</p> <p>In an HTTP session, all the attributes associated with a user\u2019s request are stored on the server. Since the only information transmitted between the server and the browser is the session ID cookie, which has a limited lifetime, an HTTP session can provide a much more secure session management method than cookies, when configured in conjunction with SSL.</p>"},{"location":"recorder-user-guide/correlating_scripts/#microsoft-aspnet","title":"Microsoft ASP.NET","text":"<p>Microsoft ASP.NET uses HTTP cookies to send a user a unique session key. For example, an ASP.NET application that uses sessions can respond to a user\u2019s request with the following HTTP header:</p> <p><code>Set-Cookie: ASPSESSIONID=PUYQGHUMEAAJPUYL; path=/Webapp</code></p> <p>Any subsequent request made by this browser to the same server, in the virtual directory /Webapp, includes the following HTTP cookie header:</p> <p><code>Cookie: ASPSESSIONID=PUYQGHUMEAAJPUYL</code></p> <p>Each active ASP.NET session is identified and tracked using a 120-bit session ID string containing only the ASCII characters that are permitted in URLs. These session ID values are generated using an algorithm that guarantees a unique and random result. Such a guarantee is required to ensure that sessions do not collide and to prevent malicious user interference. These session ID strings are communicated between the client and server either by means of an HTTP cookie or a modified URL with the session ID string embedded, depending on how the application is configured.</p>"},{"location":"recorder-user-guide/correlating_scripts/#apache-server","title":"Apache Server","text":"<p>An Apache server (version 1.3 onwards) uses cookies to identify a new user and then records access to the application identified by this unique ID, through the mod_usertrack module. When a user first visits the application, that user is sent a cookie with a unique ID. This unique ID is maintained until a predetermined timeout, thus enabling the server to track the user. This method enables the identification of different users even if they appear to originate from the same IP address. With Apache servers, the CookieName directive configures the name of the cookie that is stored.</p>"},{"location":"recorder-user-guide/editing_scripts/","title":"Editing Scripts","text":"<p>This section provides instructions for editing scripts with WebLOAD Recorder.</p>"},{"location":"recorder-user-guide/editing_scripts/#about-editing-scripts-with-webload-recorder","title":"About Editing Scripts with WebLOAD Recorder**","text":"<p>WebLOAD Recorder is both flexible and extendable to fit all of your script editing needs, from the most basic to the most advanced. On the simplest level, you use the WebLOAD Recorder GUI to record your basic script. You can edit your script either while it is being recorded or after it has finished recording to add functionality through the options available in the GUI. In most cases, the options available through the GUI meet all testing needs. For advanced functionality where programming is required, the JavaScript Editor is available to add further functionality to your script.</p> <p>In the script, each request and event is based on previous input, tying the entire script into a whole, making many actions interdependent. Items such as JavaScript Objects, Comments, Messages, and Sleeps can be added to the script, but changing the sequence of items in effect means changing the sequence of activities, and may destroy the functionality of the script. For more information on recording scripts, see *Recording Scripts* (on page 33).</p> <p>When editing your script, you can work at whatever level you prefer. The following script editing tools are discussed:</p> <ul> <li>Editing a Script in the Script Tree (on page 70) describes how to add script items and JavaScript Objects, and edit a script by right-clicking in the Script Tree.</li> <li>Editing a Script in the JavaScript View Pane (on page 72) describes how to use JavaScript objects to create scripts with the full functionality of JavaScript code programs. The WebLOAD Recorder JavaScript Editor includes a set of context- sensitive prompts that help you code your script more effectively.</li> <li>Editing your Script Using the WebLOAD Recorder Toolbox Set (on page 85) describes how to use the WebLOAD Recorder toolbox that contains drag-and-drop items to create a script with minimal coding.</li> </ul>"},{"location":"recorder-user-guide/editing_scripts/#editing-a-script-in-the-script-tree","title":"Editing a Script in the Script Tree","text":"<p>This section describes how to edit a script in the Script Tree. If you are editing your script while it is being recorded, you can focus on any specific node in the Script Tree and edit its JavaScript in the JavaScript view pane.</p> <p>Note: You must be in Visual Editing mode.</p>"},{"location":"recorder-user-guide/editing_scripts/#adding-script-items-and-javascript-objects-to-a-script","title":"Adding Script Items and JavaScript Objects to a Script","text":"<p>WebLOAD Recorder contains shortcuts to frequently performed actions. This section describes how to place script items and JavaScript Objects from the Insert menu into a script. For guidelines for replacing the placeholder variables with your own, see Guidelines for Editing JavaScript Code (on page 83).</p> <p>To add items and JavaScript Objects to a script:</p> <ol> <li> <p>In the main window, click Open in the File tab of the ribbon and open the script you want to edit.</p> </li> <li> <p>Make sure that you are in Visual Editing mode.</p> </li> <li> <p>Right-click the Agenda root node or the script item where you want to place the new script item.</p> </li> </ol> <p>A pop-up menu appears.</p> <ol> <li>From the pop-up menu, click Insert. The following list of shortcuts appears.</li> </ol> <p></p> <ol> <li>Select a script item or JavaScript Object.</li> </ol> <p>The script item or JavaScript is inserted on a new line in the script, immediately after the selected node.</p> <p>The script items and JavaScript Objects that you can insert are also available through the WebLOAD Recorder toolbox, see *Editing your Script Using the WebLOAD Recorder Toolbox Set* (on page 85).</p>"},{"location":"recorder-user-guide/editing_scripts/#editing-a-script-by-right-clicking-in-the-script-tree","title":"Editing a Script by Right-Clicking in the Script Tree","text":"<p>You can edit directly in the Script Tree using the right mouse button. When you right- click a script item, a menu gives you options that vary according to the script item selected and the mode.</p> <p>To right-click menus in Edit mode:</p> <ol> <li>In the main window, click Open in the File tab of the ribbon and open the script you want to edit.</li> <li>Make sure that you are in Visual Editing mode.</li> <li>In the Script Tree, right-click the Agenda root node or right-click a script item in the tree.</li> </ol> <p>A pop-up menu appears. The menu for the Agenda root differs slightly from the menu for a script item, as described in Table 7.</p> <p>The following table describes the menu options:</p> <p>Table 7: Menu Options</p> Right-Click Menu Option Purpose <p>Synchronize</p><p>(Agenda root menu only)</p> <p>Synchronize the Script Tree, with the edits made to the JavaScript code in Visual Editing mode In most cases, synchronization is performed automatically.</p><p>Only available at the Agenda root level.</p> Insert <p>Insert a script item or JavaScript Object into the script (see</p><p>Adding Script Items and JavaScript Objects to a Script on page 70).</p><p>The script items and JavaScript Objects that you can insert are also available through the WebLOAD Recorder toolbox, described in *Editing your Script Using the WebLOAD Recorder Toolbox Set* (on page 85).</p> Paste <p>Paste the script item you cut or copied, after the current script item.</p><p>Note: If you copied a script item, you can paste it more than once. Each time you paste, the node ID automatically changes.</p><p></p><p>If you cut a script item, you can paste it only once, and the node ID does not change.</p> <p>Cut</p><p>(script item menu only)</p> Cut the script item from the tree to paste elsewhere. <p>Copy</p><p>(script item menu only)</p> Copy the script item from the tree to paste elsewhere. <p>Delete</p><p>(script item menu only)</p> Delete the script item from the tree. Toggle Breakpoint Add or remove a breakpoint at the selected script item in the Script Tree. For more information, see Setting Breakpoints (on page 121). Current Project Options Display the Current Project Options dialog box. Only available at the script level. For more information, see *Configuring the Default and Current Project Options* (on page 155). Regenerate Script Regenerate the script. For more information, see *Performing Script Regeneration* (on page 55). Response Validation Add response validation to the script. For more information, see Validating Responses (on page 139)"},{"location":"recorder-user-guide/editing_scripts/#editing-a-script-in-the-javascript-view-pane","title":"Editing a Script in the JavaScript View Pane","text":"<p>You can edit directly in the JavaScript View pane using the right mouse button. When you right-click a script item, a menu gives you options that vary according to the mode.</p>"},{"location":"recorder-user-guide/editing_scripts/#editing-the-javascript-code-for-a-script-item","title":"Editing the JavaScript Code for a Script Item","text":"<p>You can edit the JavaScript code generated by WebLOAD Recorder for any item in the script.</p> <p>Note: When you select the Agenda root node, the entire script appears in the JavaScript View pane as read only. To edit the entire script, see Using the JavaScript Editor (on  page 75).</p> <p>To edit the JavaScript code for a script item:</p> <ol> <li> <p>In the main window, click Open in the File tab of the ribbon and open the script you want to edit.</p> </li> <li> <p>Make sure that you are in Visual Editing mode.</p> </li> <li> <p>Select the JavaScript View checkbox in the View tab to open the JavaScript View pane.</p> </li> <li> <p>Select the item in the Script Tree.</p> </li> </ol> <p>The JavaScript script code for that item appears in the JavaScript View pane.</p> <p></p> <ol> <li>Edit the script (see Editing the JavaScript Code on page 79).</li> </ol> <p>Important: The ID number is automatically generated by WebLOAD Recorder and is the connection between the script node and the specific header. It is recommended that you do not change the contents of this comment. If you do, important data might be lost.</p>"},{"location":"recorder-user-guide/editing_scripts/#editing-the-javascript-code-functions","title":"Editing the JavaScript Code Functions","text":"<p>A script includes a few sections of code, including functions. At the Agenda root node only, you can select these sections from the Function Name drop-down list.</p> <p>When you select the NodeScript for the Agenda root node, the entire script appears in the JavaScript View pane as read only. You can only edit the script as a whole file when in JavaScript Editing mode (see Using the JavaScript Editor on page 75).</p> <p>When you select a section other than NodeScript for the Agenda root node, the code appears in the JavaScript View pane. In the JavaScript View pane, you can edit the JavaScript code for functions called in the script. By default, WebLOAD Recorder calls the InitAgenda(), InitClient(), TerminateClient(), and TerminateAgenda() functions ?for each script.</p> <p>Table 8: WebLOAD Functions</p> Function Description InitAgenda Optional. Creates a JavaScript function InitAgenda to begin the script. InitAgenda is typically where global variables are defined. InitClient <p>Optional. Creates a JavaScript function InitClient to begin a client process.</p><p>Usually there will be only one client in a WebLOAD Recorder session; WebLOAD uses multiple clients.</p> TerminateClient <p>Optional. Creates a JavaScript function TerminateClient to end a client process.</p><p>Usually there will be only one client in a WebLOAD Recorder session; WebLOAD uses multiple clients.</p> TerminateAgenda Optional. Creates a JavaScript function TerminateAgenda to end the script. <p>The function properties do not need to be edited unless you want to make special customizations, such as including a function from a different file and using the IncludeFile() function.</p> <p>To edit the JavaScript code for functions:</p> <ol> <li> <p>In the main window, click Open in the File tab of the ribbon and open the script you want to edit.</p> </li> <li> <p>Make sure that you are in Visual Editing mode.</p> </li> <li> <p>Select the JavaScript View checkbox in the View tab to open the JavaScript View pane.</p> </li> <li> <p>Select the script item in the Script Tree.</p> </li> </ol> <p>The JavaScript script code for the script item appears in the JavaScript View pane. The JavaScript for the Agenda root node will include the whole script.</p> <ol> <li>From the Function Name drop-down list, located at the top of the JavaScript View pane, select the name of the function.</li> </ol> <p>The JavaScript code for the function appears in the JavaScript View pane. </p> <p></p> <ol> <li>Type the JavaScript code to include in the InitClient, InitAgenda, TerminateClient, or TerminateAgenda (see Editing the JavaScript Code on page 79).</li> </ol> <p>Note: You cannot add a WebLOAD Recorder protocol block in the middle of a function. When in Visual Editing mode, this option is disabled.</p>"},{"location":"recorder-user-guide/editing_scripts/#using-the-javascript-editor","title":"Using the JavaScript Editor","text":"<p>Although represented visually, all scripts are written in JavaScript. The JavaScript code within a script is created from the actions you record and the verification tests you place in the script. You can add JavaScript Objects to your recorded script, allowing you to add additional written code directly to your script. The JavaScript Editor is both a viewer and an editor for adding and editing JavaScript code in the script.</p> <p>WebLOAD Recorder provides the following features for manually editing a script:</p> <ul> <li>Import JavaScript Files</li> </ul> <p>WebLOAD Recorder enables you to import JavaScript files into your script.</p> <ul> <li>WebLOAD Recorder Protocol Block</li> </ul> <p>WebLOAD Recorder enables you to add code to your script which is then represented visually in the Script Tree.</p> <ul> <li>An IntelliSense Editor mode for the JavaScript View pane</li> </ul> <p>Add new lines of code to your script or edit existing JavaScript functions through the IntelliSense Editor mode of the JavaScript View pane. The IntelliSense Editor helps you write the JavaScript code for a new function by formatting new code and prompting with suggestions and descriptions of appropriate code choices and</p> <p>syntax as programs are being written. IntelliSense supports the following shortcut keys:</p> <ul> <li>Period (\u201c.\u201d) \u2013 Enter a period after the object name, to display a drop-down list of the object\u2019s available properties that can be added to the script (see</li> </ul> <p>Figure 52).</p> <ul> <li>  \u2013 While typing the name of an object, you can type  <p> to display a drop-down list of the available objects that begin with the letters that you entered. For example, if you type wl the IntelliSense Editor displays a drop-down list of all of the objects that begin with wl (such as wlhttp). <p>In addition, the IntelliSense Editor gives a structure to the code with the outline bar and line numbering.</p> <p>Collapsing the code enables you to view the heading of the section, without seeing the code within the section. To expand or collapse different sections of the code:</p> <ul> <li>Click the plus sign (+) or minus sign (-) on the outline bar,</li> </ul> <p>-Or-</p> <ul> <li>Right-click within the IntelliSense Editor and select Outlining from the pop-up menu. The available outlining options are:</li> <li>Toggle outline \u2013 collapses or expands the section at the mouse location.</li> <li>Toggle all outline \u2013 collapses or expands all outlines.</li> <li>Collapse to definition \u2013 collapses all outlines.</li> </ul> <p>You can enable or disable both the outline bar and line numbering features by:</p> <ul> <li>Right-clicking within the IntelliSense Editor and selecting Enable Outlining or</li> </ul> <p>Line Numbers from the pop-up menu.</p> <p>When these features are enabled, a checkmark appears next to the name in the pop-up menus. By default, these features are enabled, but WebLOAD opens with the settings that were saved during the previous WebLOAD session. During playback and debug modes, all outlines are expanded.</p> <p>Use WebLOAD Recorder\u2019s predefined delimiters to keep your code structured and organized. The available delimiters include:</p> <ul> <li>For JavaScript functions, use \u201c{\u201c as the start delimiter and \u201c}\u201d as the end delimiter.</li> <li>For Script Tree nodes, insert a WLIDE comment from the General WebLOAD Recorder toolbox. This automatically inserts a start delimiter \u201c//\u201d and end</li> </ul> <p>delimiter \u201cEnd WLIDE\u201d.</p> <p>For more information, see the WebLOAD Scripting Guide.</p> <p></p> <ul> <li>A selection of the most commonly used functions and commands, available through the Insert menu.</li> </ul> <p>You can choose to program your own JavaScript Object code within your script and take advantage of the WebLOAD Recorder GUI to simplify your programming efforts. Rather than manually typing out the code for each command, with the risk of making a mistake, even a trivial typographical error, and adding invalid code to the script file, you may select an item from the Insert menu, illustrated in the following figure, to bring up a list of available commands and functions for the selected item. WebLOAD Recorder automatically inserts the correct code for the selected item into the JavaScript Object currently being edited. You may then change specific parameter values without any worries about accidental mistakes in the function syntax.</p> <p></p> <p>In addition to the Insert menu, you may select an item from the Insert Variable menu, to add system and user-defined parameters to the script. This eliminates the need for manual coding. For more information about adding user-defined parameters to the script, see Inserting User-Defined Parameters in a Script (on</p> <p>page 228).</p> <p></p> <ul> <li>![ref7]A Syntax Checker that checks the syntax of the code in your script file and catches simple syntax errors before you spend any time running a test session. While standing in the JavaScript View pane of the WebLOAD Recorder desktop, click Syntax Checker in the Edit tab of the ribbon, or right-click and select Check Syntax from the pop-up menu to check the syntax of the code in your script file.</li> </ul> <p>Important: WebLOAD Recorder scripts should be edited only within the confines of WebLOAD Recorder, not within an external editor. If you use an external editor to modify the JavaScript code in a script file generated by WebLOAD Recorder, your visual script will be lost.</p>"},{"location":"recorder-user-guide/editing_scripts/#editing-the-javascript-code","title":"Editing the JavaScript Code","text":"<p>Note: Any part of the code that is edited in the JavaScript Editing mode is inserted into the script as a JavaScript block, which cannot be edited in the Visual Editing mode.</p> <p>To edit the JavaScript code for the script:</p> <ol> <li> <p>In the main window, click Open in the File tab of the ribbon and open the script you want to edit.</p> </li> <li> <p>Select Full Script in the Home tab of the ribbon to open the script in JavaScript Editing mode.</p> </li> </ol> <p>The entire script appears.</p> <ol> <li>Position the cursor where you want to edit the JavaScript code.</li> </ol> <p>Note: To add a new JavaScript node, place the cursor after the END WLIDE comment of the previous node before you start writing your JavaScript code. When you switch back to Visual Editing mode a JavaScript node is automatically created, containing your code.</p> <ol> <li> <p>Type the JavaScript code that you want this item to contain.</p> </li> <li> <p>Add functions and commands from the Insert menu (see *Adding Commands and Functions to a Script* on page 82).</p> </li> <li> <p>Import a JavaScript file:</p> </li> <li> <p>Right-click in the script.</p> </li> <li> <p>Click Import JavaScript File from the pop-up menu. The JavaScript code is added to the script.</p> </li> <li> <p>Add a WebLOAD Recorder protocol block from the pop-up menu (see *Adding WebLOAD Recorder Protocol Blocks* on page 80).</p> </li> <li> <p>Perform a syntax check:</p> </li> <li> <p>Right-click in the script.</p> </li> <li>Select Check Syntax from the pop-up menu.</li> </ol> <p>WebLOAD Recorder performs a syntax check and displays the errors.</p> <ol> <li>Toggle a breakpoint (for more information, see Setting Breakpoints on page 121).</li> </ol> <p>Note: To clear the JavaScript View pane, click Clear JavaScript Editor in the Edit tab of the ribbon.</p>"},{"location":"recorder-user-guide/editing_scripts/#adding-webload-recorder-protocol-blocks","title":"Adding WebLOAD Recorder Protocol Blocks","text":"<p>To add WebLOAD Recorder Protocol Blocks to a script:</p> <ol> <li> <p>In the main window, click Open in the File tab of the ribbon and open the script you want to edit.</p> </li> <li> <p>Click Full Script in the Home tab to edit the script in full screen editing mode.</p> </li> <li> <p>In the JavaScript View pane, position the cursor where you want to place the WebLOAD Recorder protocol block.</p> </li> <li> <p>Right-click in the script, and click Add WebLOAD Recorder Block from the pop- up menu.</p> </li> </ol> <p>A WebLOAD Recorder protocol block header is inserted on a new line in the script, immediately after the line where the cursor is located, and a script item is added to the Script Tree.</p> <p></p> <ol> <li> <p>Replace the placeholder  with a description. For example: Replace  with URL. <li> <p>Add the JavaScript code after the WebLOAD Recorder protocol block header. The code is added to the script.</p> </li> <p></p>"},{"location":"recorder-user-guide/editing_scripts/#adding-commands-and-functions-to-a-script","title":"Adding Commands and Functions to a Script","text":"<p>WebLOAD Recorder contains shortcuts to frequently performed actions. This section describes how to place Commands, and functions from the Insert menu in a script. For guidelines for replacing the placeholder variables with your own, see *Guidelines for Editing JavaScript Code* (on page 83).</p> <p>To add commands and functions to a script:</p> <ol> <li> <p>In the main window, click Open in the File tab and open the script you want to edit.</p> </li> <li> <p>In the JavaScript View pane, position the cursor where you want to place the command or function.</p> </li> <li> <p>Right-click in the script and click Insert. The list of shortcuts appears.</p> </li> </ol> <p></p> <ol> <li>Select a command or function.</li> </ol> <p>The command or function selected is inserted on a new line in the script, immediately after the line where the cursor is located.</p>"},{"location":"recorder-user-guide/editing_scripts/#guidelines-for-editing-javascript-code","title":"Guidelines for Editing JavaScript Code","text":"<p>Use the following guidelines to edit commands and functions you have placed in a script through the JavaScript Editor:</p> <ul> <li>Placeholders between brackets &lt; &gt; that appear in generic examples must be replaced with the literal name of a variable.</li> </ul> <p>For example, the generic example:</p> <p><code>wlHttp.PassWord = \u201c&lt;Password&gt;\u201c</code></p> <p>must be replaced with the string:</p> <p><code>wlHttp.PassWord = \u201cBlue\u201d</code></p> <ul> <li>Placeholders between square brackets within parentheses ([ ]) are optional function parameters. It is not mandatory to include them in the command.</li> </ul> <p>For example, the generic example:</p> <p><code>&lt;Line\\_Array&gt; = GetLine(\u201c&lt;File\\_Name&gt;\u201c [,\u201d&lt;Separator&gt;\u201c])</code></p> <p>can be replaced with the string:</p> <p>MyFile = GetLine(\u201cC:\\InputFile.txt\u201d)`</p> <ul> <li>Placeholders between square brackets [ ] are array variables and must be replaced with the literal name of a variable, enclosed with square brackets.</li> </ul> <p>For example:</p> <p><code>wlHttp.Header[\u201c&lt;Key&gt;\u201c]= \u201c&lt;Value&gt;\u201c</code></p> <p>must be replaced with the string:</p> <p><code>wlHttp.Header[\u201cproxy-connection\u201d]=\u201cKeep-Alive\u201d</code></p> <ul> <li>In a WebLOAD Recorder protocol block, replace the placeholder with a description.  <p>For example:</p> <p> <p>can be replaced with:</p> <p><code>SSL Certificate</code></p>"},{"location":"recorder-user-guide/editing_scripts/#editing-your-script-using-the-webload-recorder-toolbox-set","title":"Editing your Script Using the WebLOAD Recorder Toolbox Set","text":"<p>The WebLOAD Recorder provides a set of objects, such as Sleep, that you can drag and drop to add script items in the Script Tree while recording or viewing your script. The WebLOAD Recorder bar is referred to as the toolbox.</p> <p></p> <p>Use the WebLOAD Recorder toolboxes to add the following items to your script:</p> <ul> <li>General objects, such as Message or Sleep timers. These objects are used in all test scripts, run in both WebLOAD Recorder and WebLOAD. General toolbox tools are described in The WebLOAD Recorder General Toolbox (on page 233).</li> <li>Load objects, such as transactions and synchronization points used in WebLOAD tests. Load toolbox tools are described in The WebLOAD Recorder Load Toolbox (on page 237).</li> <li>Internet Protocols functionality, such as downloading data from an FTP site for a WebLOAD Recorder test. Internet Protocols Building Blocks are described in *The WebLOAD Recorder Internet Protocols Toolbox* (on page 247).</li> <li>JMS functionality, such as sending and receiving JMS message. JMS Building Blocks are described in The JMS Toolbox (on page 354).</li> <li>IoT Protocols functionality, such as connecting to a broker. IoT Protocols Building Blocks are described in The WebLOAD Recorder IoT Protocols Toolbox (on page 300).</li> <li> <p>Real Clients functionality, such as Selenium actions and a Perfecto Mobile script. Real Clients building blocks are described in The Real Clients Toolbox (on page 361).</p> </li> <li> <p>Web Service functionality, such as adding web service calls or HTTP requests to your test session script. Web Services Building Blocks are described in *The WebLOAD Recorder Web Services Toolbox* (on page 348).</p> </li> <li>Database actions, such as opening and getting data from a database for a WebLOAD Recorder test. Database Building Blocks are described in *The WebLOAD Recorder Database Toolbox* (on page 309).</li> <li>Verification functionality, such as verifying specific elements within HTTP responses in your script. Verifications Building Blocks are described in *The WebLOAD Recorder Verifications Toolbox* (on page 337).</li> <li>WebSocket functionality, such as creating a WebSocket connection to a specific URL address. WebSocket building blocks are described in *The WebLOAD Recorder WebSocket Toolbox* (on page 345).</li> </ul>"},{"location":"recorder-user-guide/editing_scripts/#adding-script-items-from-a-webload-recorder-toolbox","title":"Adding Script Items from a WebLOAD Recorder Toolbox","text":"<p>To drag and drop a WebLOAD Recorder toolbox item into your script:</p> <ol> <li>Place the mouse over the item in the WebLOAD Recorder toolbox that you want to add.</li> <li>Press and hold the mouse button (just \u201cclicking\u201d has no effect).</li> <li>Drag the item into the Script Tree, highlighting the item after which you want to add the new item.</li> <li>Release the script item you have inserted.</li> <li>For many of the items, such as Message, Comments, and Sleep objects, additional dialog boxes are used to prompt you for the information necessary to add messages, comments, and pause times. Enter the necessary information, and click OK.</li> </ol> <p>The item with its toolbox icon appears in the Script Tree at the point where you placed the item.</p> <ol> <li>For JavaScript Objects, add JavaScript code to the script (see *Using the JavaScript Editor* on page 75).</li> </ol>"},{"location":"recorder-user-guide/editing_scripts/#working-with-javascript-files","title":"Working with JavaScript Files","text":"<p>WebLOAD Recorder enables you to open a JavaScript file and convert it to a WebLOAD Recorder project file or continue working with the file as a JavaScript file.</p> <p>You may want to save it as a JavaScript file if it is an Include file (component of a whole script) and not the main script.</p> <p>We recommend that you convert the JavaScript file to a WebLOAD Recorder project file for the following reasons:</p> <ul> <li>The project file is better suited to the WebLOAD Recorder visual environment.</li> <li>Enables you to save additional information to the script, such as the Current Project options.</li> </ul> <p>Note: When you convert a JavaScript file to a WebLOAD Recorder project file, the original JavaScript file is not deleted. If you convert it to the new format, you can always save it as a regular JavaScript file, using the Save As option.</p> <p>To work with a JavaScript File:</p> <ol> <li> <p>In the main window, click Open in the File tab.</p> </li> <li> <p>Select a JavaScript file.</p> </li> </ol> <p>The Open message appears.</p> <p></p> <ol> <li>Click Yes to convert the JavaScript file to a WebLOAD Recorder project file,</li> </ol> <p>-Or-</p> <p>Click No to continue working with the file as a JavaScript file.</p> <p>If you continue working with the file as a JavaScript file, the file appears in the JavaScript View pane as a JavaScript file, and the WebLOAD Recorder block shows that it is a JavaScript file.</p> <p></p> <p>Important: If you save the file as a JavaScript file, the next time you open the file, the Open message will not appear.</p>"},{"location":"recorder-user-guide/introduction/","title":"Introduction","text":"<p>Welcome to WebLOAD, the premier performance, scalability, and reliability testing solution for internet applications.</p> <p>WebLOAD is easy to use and delivers maximum testing performance and value. WebLOAD verifies the scalability and integrity of internet applications by generating a load composed of Virtual Clients that simulate real-world traffic. Probing Clients let you refine the testing process by acting as a single user that measures the performance of targeted activities, and provides individual performance statistics of the internet application under load.</p> <p>This section provides a brief introduction to WebLOAD technical support, including both documentation and online support.</p>"},{"location":"recorder-user-guide/introduction/#webload-documentation","title":"WebLOAD Documentation","text":"<p>WebLOAD is supplied with the following documentation:</p> <p>WebLOAD\u2122 Installation Guide</p> <p>Instructions for installing WebLOAD and its add-ons.</p> <p>WebLOAD\u2122 Recorder User\u2019s Guide</p> <p>Instructions for recording, editing, and debugging load test Scripts to be executed by WebLOAD to test your Web-based applications.</p> <p>WebLOAD\u2122 Console User\u2019s Guide</p> <p>A guide to using WebLOAD console, RadView\u2019s load/scalability testing tool to easily and efficiently test your Web-based applications. This guide also includes a quick start section containing instructions for getting started quickly with WebLOAD using the RadView Software test site.</p> <p>WebLOAD\u2122 Analytics User\u2019s Guide</p> <p>Instructions on how to use WebLOAD Analytics to analyze data and create custom, informative reports after running a WebLOAD test session.</p> <p>WebRM\u2122 User\u2019s Guide</p> <p>Instructions for managing testing resources with the WebLOAD Resource Manager.</p> <p>WebLOAD\u2122 Scripting Guide</p> <p>Complete information on scripting and editing JavaScript scripts for use in WebLOAD and WebLOAD Recorder.</p> <p>WebLOAD\u2122 JavaScript Reference Guide</p> <p>Complete reference information on all JavaScript objects, variables, and functions used in WebLOAD and WebLOAD Recorder test scripts.</p> <p>WebLOAD\u2122 Extensibility SDK</p> <p>Instructions on how to develop extensions to tailor WebLOAD to specific working environments.</p> <p>WebLOAD\u2122 Automation Guide</p> <p>Instructions for automatically running WebLOAD tests and reports from the command line, or by using the WebLOAD plugin for Jenkins</p> <p>WebLOAD\u2122 Cloud User Guide</p> <p>Instructions for using RadView\u2019s WebLOAD Cloud to view, analyze and compare load sessions in a web browser, with full control and customization of the display.</p> <p>The guides are distributed with the WebLOAD software in online help format. The guides are also supplied as Adobe Acrobat files. View and print these files using the Adobe Acrobat Reader. Install the Reader from the Adobe website http://www.adobe.com.</p>"},{"location":"recorder-user-guide/introduction/#where-to-get-more-information","title":"Where to Get More Information","text":"<p>This section contains information on how to obtain technical support from RadView worldwide, should you encounter any problems.</p>"},{"location":"recorder-user-guide/introduction/#online-help","title":"Online Help","text":"<p>WebLOAD provides a comprehensive on-line help system with step-by-step instructions for common tasks. You can press the F1 key on any open dialog box for an explanation of the options or select Help &gt; Contents to open the on-line help contents and index.</p>"},{"location":"recorder-user-guide/introduction/#technical-support-website","title":"Technical Support Website","text":"<p>The technical support page on our website provides:</p> <ul> <li>The option of opening a ticket</li> <li>Links to WebLOAD documentation</li> </ul>"},{"location":"recorder-user-guide/introduction/#technical-support","title":"Technical Support","text":"<p>For technical support in your use of this product, contact:</p> North  American Headquarters International  Headquarters e-mail: support@RadView.com Phone: 1-888-RadView  (1-888-723-8439) (Toll Free)  908-526-7756  Fax:    908-864-8099 e-mail: support@RadView.com Phone: +972-3-915-7060  Fax:    +972-3-915-7011 <p>Note: We encourage you to use e-mail for faster and better service. When contacting technical support please include in your message the full name of the product, as well as the version and build number.</p>"},{"location":"recorder-user-guide/overview/","title":"Overview of the WebLOAD Integrated Development Environment","text":"<p>This section provides a brief overview to the WebLOAD Integrated Development Environment.</p>"},{"location":"recorder-user-guide/overview/#about-webload-recorder","title":"About WebLOAD Recorder","text":"<p>WebLOAD Recorder is an easy-to-use tool for recording, creating, and authoring protocol test scripts for the WebLOAD environment.</p> <p>WebLOAD Recorder is a visual environment for creating protocol test scripts (referred to as scripts) that provides the following features:</p> <ul> <li>Recording scripts</li> <li>Editing scripts</li> <li>Running and Debugging scripts</li> </ul> <p>WebLOAD Recorder records your action in a Web browser and saves it as a JavaScript script. WebLOAD Recorder provides two editing modes, the Visual Editing mode and the JavaScript Editing mode, that enable you to edit your JavaScript script.</p> <p>WebLOAD Recorder enables you run and play back the script in a number of ways, such as full playback without any breakpoints, with breakpoints, or step-by-step. After the script is run, WebLOAD Recorder returns response data from the Web server.</p> <p>WebLOAD Recorder provides various views of the response data to help you debug and edit the script. These views include a Web Page view, HTTP Header view, JavaScript view, DOM view, and HTML view.</p> <p>The script can then be used in the WebLOAD environment to test the performance of your Web application.</p>"},{"location":"recorder-user-guide/overview/#the-user-flow","title":"The User Flow","text":"<p>As you develop a Web application, you and your organization will usually do the following:</p> <ol> <li> <p>Plan your session to include the basic tasks that you want the test to perform.</p> </li> <li> <p>Create the Test script in WebLOAD Recorder.</p> </li> <li> <p>Test the application in WebLOAD using the script created in WebLOAD Recorder.</p> </li> </ol> <p>You do not need to modify the test script as it can run from WebLOAD Recorder to WebLOAD seamlessly.</p> <p>WebLOAD emulates multiple users on a network or server, testing to be sure the application scales as needed. These tests ensure that your application operates \u201cnormally\u201d under load and stress, and your application appears as per your</p> <p>specifications and to your visitors\u2019 expectations.</p> <p>The scripts are executed during WebLOAD test sessions by multiple Virtual Clients in parallel, achieving simultaneous access to the SUT and generating the load burden necessary for effective testing. Each execution of the script generates an independent instance running in parallel during your WebLOAD test session.</p> <p>Note: Refer to the WebLOAD documentation for more information about using WebLOAD.</p>"},{"location":"recorder-user-guide/overview/#script-creation","title":"Script Creation","text":"<p>You create a JavaScript script in WebLOAD Recorder so that you can test applications by running the JavaScript script in WebLOAD to simulate the actions of real users.</p> <p>A Script is a test script written in JavaScript code that is used to test the functionality of a Web application under a load. It contains a sequence of HTTP protocol calls sent by Virtual Clients to your System Under Test (SUT). For example, if you want to test the performance of your Web application when clients access a certain page, your script must contain the code for accessing the page.</p> <p>A script can be generated automatically using the recording tools supplied with WebLOAD Recorder, or it can be created manually by writing a script. This guide describes the recording tools supplied with WebLOAD Recorder for developing test scripts automatically and provides instructions for developing test scripts manually.</p> <p>Before creating a script, you should consider and plan which actions you want to include in a test session.</p> <p>Create a script by carrying out the following steps:</p> <ol> <li>Recording the script.</li> <li>Editing / enhancing the script.</li> <li>Running and debugging the script.</li> </ol> <p>The first step of creating a script is recording. As you execute a typical sequence of activities, WebLOAD Recorder records your accesses, creating a precise, detailed record of all your activities and application responses that occur during a recording session.</p> <p>WebLOAD Recorder operates in conjunction with a Web browser, such as Microsoft\u2019s Internet Explorer. The basic \u2018Building Blocks\u2019 of a test session are your actions. As you work with a test application in the browser, (navigating between pages, typing text into a form, clicking the mouse, and so on), WebLOAD Recorder stores information about you actions in a script file. Externally, your activities are represented in WebLOAD Recorder by a set of icons arranged in a Visual Script Tree. Internally, WebLOAD Recorder records these actions and automatically creates scripts that act as scripts, recreating the actions and verifying the functionality of Web sites under realistic conditions.</p> <p>The second step of creating a script is editing the code of the recorded script. This can be done in Visual Editing mode and/or JavaScript Editing mode. For example, if you want a script to vary a sequence of accesses, submit randomized data read from a file, or work with Java or COM components, a certain degree of programming is required. This guide describes how to edit the code in your scripts to add more complex functionality to your testing sessions.</p> <p>The last step is to run your script in WebLOAD Recorder to perform testing so you can emulate how your script will run when executed in WebLOAD. You can then use the debugging tools to correct or modify your script so that it acts as you expected.</p> <p>After completing these basic steps, you can incorporate your script into a WebLOAD test.</p> <p>Note: For examples of basic scripts, see the WebLOAD Scripting Guide. </p>"},{"location":"recorder-user-guide/overview/#the-recording-tool","title":"The Recording Tool","text":"<p>WebLOAD Recorder is supplied with a recording tool to perform the following:</p> <ul> <li>Recording on any site, including sites that use SSL security.</li> <li>Recording in any browser that supports a configurable proxy.</li> </ul> <p>The recording tool runs independently of the WebLOAD Recorder. It runs under Microsoft Windows 2000, XP, 2003 and 2007.</p> <p>For detailed instructions on using WebLOAD Recorder to record scripts, see *Recording [Scripts ]</p>"},{"location":"recorder-user-guide/overview/#the-editing-modes","title":"The Editing Modes","text":"<p>WebLOAD Recorder provides two modes in which to write lines of code:</p> <ul> <li>Visual Editing mode</li> <li>JavaScript Editing mode</li> </ul> <p>You can switch between modes while customizing scripts.</p>"},{"location":"recorder-user-guide/overview/#visual-editing-mode","title":"Visual Editing Mode","text":"<p>In Visual Editing mode, rather than writing numerous lines of code to describe the actions you want to test, you simply record the actions in a browser without programming. Your interactions with your Web application are captured, recorded, and presented graphically in the Script Tree.</p> <p>When editing a script, you can also drag and drop items from the WebLOAD Recorder toolboxes into the script Tree. This makes programming easier by building the code behind an intuitive drag-and-drop interface.</p> <p></p> <p>Each node in the Script Tree is a graphical representation of the JavaScript code. JavaScript code that cannot be edited appears grayed out.</p> <p></p>"},{"location":"recorder-user-guide/overview/#javascript-editing-mode","title":"JavaScript Editing Mode","text":"<p>WebLOAD Recorder provides complete testing flexibility with the JavaScript Editor, enabling you to add your own code into the recorded script or import a JavaScript file. Each block of code is presented graphically in the Script Tree.</p> <p></p> <p>WebLOAD Recorder provides the following programming assistance to manually edit a script:</p> <ul> <li>IntelliSense Editor mode for the JavaScript View pane.</li> <li>Insert menu with commonly used functions and commands.</li> <li>Syntax Checker that checks the syntax of the code in your script file and catches simple syntax errors before you spend any time running a test session.</li> <li>![ref9]Import JavaScript files.</li> </ul> <p>Note: For detailed information about the JavaScript language, see The Core JavaScript Language in the Netscape JavaScript Guide. This guide is supplied in Adobe Acrobat format with the WebLOAD software. You may also learn the elements of JavaScript programming from many books on Web publishing. Keep in mind that some specific JavaScript objects relating to Web publishing do not exist in the WebLOAD test environment.</p>"},{"location":"recorder-user-guide/overview/#the-run-mode","title":"The Run Mode","text":"<p>WebLOAD Recorder enables you to run the script and view the results. You can then debug the script.</p> <p>WebLOAD Recorder provides a debugger that enables you to correct or modifying your script so that is acts as you expected. It includes a variety of tools to help with the task of debugging your script, such as setting breakpoints and specifying watch variables and expressions.</p>"},{"location":"recorder-user-guide/quick_start/","title":"WebLOAD Recorder Quick Start","text":"<p>Welcome to WebLOAD Recorder, part of the premier load testing tool that helps you quickly and easily test the functionality of your application under load. WebLOAD Recorder serves as the recorder for WebLOAD. Using an intuitive visual interface, WebLOAD Recorder helps you create, edit and debug your own test scripts, and prepare them for automatically testing your Web based applications.</p> <p>WebLOAD Recorder\u2019s visual environment gives you easy-to-use editing tools. Once you understand the components of the product and a few basic techniques, you can use these methods throughout WebLOAD Recorder.</p> <p>This Quick Start explains how to start the program and use the features of the WebLOAD Recorder interface.</p>"},{"location":"recorder-user-guide/quick_start/#getting-started","title":"Getting Started","text":"<p>This section shows you how you can get started quickly, using the RadView Software test site at www.webloadmpstore.com.</p> <p>You will be working with a test script. The basic steps are:</p> <ol> <li> <p>Recording your script \u2013 describes the steps in recording a basic script (see *Creating a* on page 20).</p> </li> <li> <p>Editing your script \u2013 explains how to edit and modify your script, insert new items into your script, and parameterize form data to create data driven tests (see *Editing Your Script* on page 26).</p> </li> <li> <p>Running and debugging your script \u2013 explains run and debug your script (see</p> </li> </ol> <p>Note: We recommend that you follow the steps in order. All examples are interrelated and dependent on earlier steps.</p>"},{"location":"recorder-user-guide/quick_start/#creating-a-script","title":"Creating a Script","text":"<p>The first step in creating a script is to record your actions as you interact with your Web application.</p> <p>To create a script:</p> <ol> <li>Start WebLOAD Recorder by selecting Start &gt; Programs &gt; RadView &gt; WebLOAD&gt; WebLOAD Recorder. </li> </ol> <p>WebLOAD Recorder opens.</p> <p></p> <ol> <li>Select Create a new project.</li> </ol> <p>The WebLOAD Recorder main window opens in Visual Editing Mode, for you to begin creating your script.</p> <p>When the WebLOAD Recorder main window first opens, it opens in Visual Editing Mode. In this mode, there are several active panes. The Script Tree appears on the left, and various view panes appear on the right: JavaScript View, Page View, HTML View, and HTTP headers View.</p> <p>In Visual Editing mode, you can simply record the actions in a browser without programming. Your interactions with your Web application are captured, recorded, and presented graphically in the Script Tree.</p> <p>Each node in the Script Tree is actually a visual representation of JavaScript code. You can view the contents of the nodes in the JavaScript view pane.</p> <p>To the left of the Script Tree are WebLOAD Recorder toolboxes that can be used to edit a script by dragging and dropping items from the WebLOAD Recorder toolboxes into the Script Tree. This makes programming easier by building the code behind an intuitive drag-and-drop interface.</p> <p>To the right of the View panes is the Assistant pane, which contains simple instructions to help you create your load test script. Click a link in the Assistant to go to the relevant item.</p> <p></p> <ol> <li>In the main window, in Visual Editing Mode, click Start in the Home tab of the ribbon to begin recording.</li> </ol> <p>The following dialog appears:</p> <p></p> <ol> <li>Click OK.</li> </ol> <p>WebLOAD Recorder begins recording all of the actions you perform in the browser, as indicated by the recording notification in the WebLOAD Recorder status bar.</p> <p></p> <p>A blank browser window opens.</p> <ol> <li>In the address bar, enter the Web address www.webloadmpstore.com to go to the WebLOAD test site.</li> </ol> <p></p> <ol> <li> <p>Navigate through the site, performing the actions you want to test. For example:</p> </li> <li> <p>Click a product to view the product details.</p> </li> <li> <p>Click Add to Cart.</p> <p>Your actions are recorded and appear in the Script Tree as you navigate the site. (If you see more nodes in the Script Tree with different URLs, this may be traffic generated by browser plug-ins or extensions, for example, third-party toolbars.)</p> <p></p> </li> <li> <p>Click Stop Recording in the Home tab of the WebLOAD Recorder ribbon to stop the recording.</p> </li> <li> <p>Click Save in the Home tab of the WebLOAD Recorder ribbon to save your script.</p> </li> <li> <p>Type in QuickStart for the name of the script in the Save As dialog box and click Save.</p> </li> </ol> <p>The script is saved with the extension *.wlp.</p> <p>You now have a basic script that can be used in a WebLOAD template. For complete information on creating, editing, modifying scripts, and adding functionality to your script, see the rest of the WebLOAD Recorder User\u2019s Guide.</p>"},{"location":"recorder-user-guide/quick_start/#viewing-your-script","title":"Viewing Your Script","text":"<p>You can view the recorded script in four views:</p> <ul> <li>JavaScript View</li> </ul> <p>When the WebLOAD Recorder main window first opens, it opens in Visual Editing Mode. In this mode, there are several active panes. The Script Tree appears on the left, and various view panes appear on the right: JavaScript View, Page View, HTML View, and HTTP headers View.</p> <p>When recording, your interactions with your Web application are captured, recorded, and presented graphically in the Script Tree.</p> <p>Each node in the Script Tree is actually a visual representation of JavaScript code. You can view the contents of the nodes in the various View panes.</p> <p>In the JavaScript view pane, you can do the following:</p> <ul> <li> <p>Display the code for each node individually.</p> </li> <li> <p>View code for the entire script as a whole.</p> </li> <li> <p>View the code for different sections in the script, by clicking the Agenda root node in the Script Tree and selecting a section from the Function Name list at the top of the JavaScript view pane.</p> </li> </ul> <p></p> <ul> <li>HTTP Headers View</li> </ul> <p>Each node in the Script Tree also has a visual representation of response headers. These response headers were received when the script was recorded. You can view the headers of the nodes in the HTTP Headers view pane. Since each node has a correlated response header, but not all nodes contain HTTP methods, some headers will not have a response header. These nodes will have the message \u201cThis object does not have HTTP Headers\u201d associated with them.</p> <p>In the HTTP Headers view pane, you can do the following:</p> <ul> <li> <p>Display the header for each node individually.</p> </li> <li> <p>View headers for the entire script as a whole.</p> </li> </ul> <p></p> <ul> <li>HTML View \u2013 See Viewing the Recorded Script in the HTML View Pane (on page 55).</li> <li>Page View \u2013 See Using the Page View to View Results (on page 132).</li> </ul>"},{"location":"recorder-user-guide/quick_start/#editing-your-script","title":"Editing Your Script","text":"<p>To edit your script:</p> <ol> <li> <p>Edit the runtime settings using the Default and Current Project Options.</p> </li> <li> <p>Toggle between Visual Editing mode and JavaScript Editing mode. The default setting is the Visual Editing mode.</p> </li> <li> <p>In Visual Editing mode, you can edit the Script Tree:</p> </li> <li>Drag and drop items from the WebLOAD Recorder toolbox into the Script Tree.</li> <li> <p>Right-click to insert new items.</p> </li> <li> <p>In JavaScript Editing mode:</p> </li> <li> <p>Modify the JavaScript code.</p> <p>Important: Each block of code starts with a comment that contains \u201cWLIDE\u201d, description, and ID number. The ID number is automatically generated by WebLOAD Recorder and is the connection between the script node and the specific header. It is recommended that you do not change the contents of this comment. If you do, important data might be lost.</p> </li> <li> <p>Right-click to insert functions and commands.</p> </li> <li> <p>Use the Syntax Checker to check the syntax of the code in your script file.</p> </li> <li> <p>Import JavaScript files.</p> </li> </ol> <p>Note: For complete reference information on all JavaScript objects, variables, and functions used in WebLOAD Recorder scripts, see the WebLOAD JavaScript Reference Guide.</p>"},{"location":"recorder-user-guide/quick_start/#toggling-between-edit-modes","title":"Toggling Between Edit Modes","text":"<p>You can toggle between Visual mode and Full Script mode. The default setting is the Visual Editing mode.</p> <p>To toggle between Edit Modes:</p> <ul> <li>Click Visual Mode in the Home tab of the ribbon,</li> </ul> <p>-Or-</p> <p>\u200b       Click the Full Script in the Home tab of the ribbon.</p>"},{"location":"recorder-user-guide/quick_start/#basic-editing-techniques","title":"Basic Editing Techniques","text":"<p>WebLOAD Recorder is designed for you to be able to create and edit your script easily, using the visual interface. Once you understand the basic techniques, you can use them throughout the WebLOAD Recorder interface.</p> <p>Here are some simple techniques, described in this section, that you can use in WebLOAD Recorder:</p> <ul> <li>Drag and drop items into your Script Tree.</li> <li>Right-click within the script and select an available option from the Insert menu.</li> </ul>"},{"location":"recorder-user-guide/quick_start/#drag-and-drop","title":"Drag and Drop","text":"<p>WebLOAD Recorder enables you to drag script items from the WebLOAD Recorder toolbox and drop them into your Script Tree.</p> <p>To drag and drop items into your script:</p> <ol> <li> <p>Place the mouse pointer over the item in the WebLOAD Recorder toolbox that you want to add to your script, such as a Message.</p> </li> <li> <p>Press and hold the left mouse button.</p> </li> <li> <p>Drag the item into the Script Tree, and place the mouse pointer at the step in the script after which you want to add the item.</p> </li> <li> <p>Release the mouse button.</p> </li> </ol> <p>A dialog box to enter the parameters opens or the item appears in the Script Tree.</p> <ol> <li>Click the script item in the Script Tree to view and/or edit the JavaScript code in the JavaScript view pane.</li> </ol>"},{"location":"recorder-user-guide/quick_start/#right-click-menus","title":"Right-Click Menus","text":"<p>Throughout WebLOAD Recorder, context-sensitive menus appear when you click the right mouse button, giving you the appropriate options to select at that point.</p> <p>You can also right-click any script item in the Script Tree to display a menu.</p> <p>To insert a new item:</p> <ol> <li>Right-click the script item and click Insert from the menu.</li> <li>Select an item from the options available.</li> </ol>"},{"location":"recorder-user-guide/quick_start/#adding-script-items","title":"Adding Script Items","text":"<p>You can drag and drop an item, such as Message, from the WebLOAD Recorder toolbox. For the list of toolboxes, see The WebLOAD Recorder Toolbox Items (on page 231).</p> <p>In the following instructions, adding a Message is used as an example. While running a test session, WebLOAD Recorder and WebLOAD Recorder\u2019s Log windows display information about session execution. You can include Message nodes in your script, defining points at which to send error and/or notification messages to the Log window.</p> <p>To add a Message script item:</p> <ol> <li> <p>Place the mouse pointer over the Message  icon in the WebLOAD Recorder toolbox.</p> </li> <li> <p>Press and hold the left mouse button.</p> </li> <li> <p>Drag the Message item into the script, and place the mouse pointer after the Web page to which you want to add the message.</p> </li> <li> <p>Release the mouse button.</p> </li> </ol> <p>The Message dialog box opens.</p> <p></p> <ol> <li> <p>Enter the text you want to appear in the message.</p> </li> <li> <p>To add a global variable to the message text, click the globe icon ( ) to the right of the input text box and select a global variable from the drop-down list.</p> </li> </ol> <p>Note: When entering a string value to the message, the string must be enclosed in quotation marks, for example, \u201cSample Message\u201d.</p> <ol> <li> <p>Select a severity level for the message from the drop-down list. The following severity levels are available:</p> </li> <li> <p>Information message (WLInfoMessage)</p> </li> <li>Minor error message (WLMinorError)</li> <li>Error message (WLError)</li> <li> <p>Severe error message (WLSevereError)</p> </li> <li> <p>Click OK.</p> </li> </ol> <p>The Message item appears in the Script Tree.</p>"},{"location":"recorder-user-guide/quick_start/#running-and-debugging-your-script","title":"Running and Debugging Your Script","text":"<p>After your script has been developed, you run it to test for errors in your application. You can then debug your script.</p>"},{"location":"recorder-user-guide/quick_start/#running-your-script","title":"Running Your Script","text":"<p>To run your script:</p> <ol> <li>Click Run in the Debug tab of the ribbon.</li> </ol> <p>As the script is running:</p> <ul> <li>A yellow arrow points to the node being executed in the Script Tree.</li> <li>If the JavaScript View tab is open, you will also see the yellow arrow pointing to the script.</li> <li>If the Page View tab is open, you will see the pages that return from the Web server.</li> <li>Nodes are added to the Execution Tree as they occur.</li> <li>The GET and POST HTTP protocol commands are displayed in the HTTP Headers view pane.</li> <li> <p>Messages and errors generated by the test appear in the Log Window at the bottom of the screen.</p> </li> <li> <p>At the prompt asking whether to save the changes to the project, click Yes and enter a file name to save your script file.</p> </li> </ul> <p>Note: If there is more than one tester and the tests are to be shared between testers, the root directory (test plans and the results of the test plans) and the tests must be saved to a network drive.</p>"},{"location":"recorder-user-guide/quick_start/#debugging-your-script","title":"Debugging Your Script","text":"<p>WebLOAD Recorder provides an integrated debugger with a variety of tools to help locate bugs in your script. The debugger provides special menus, windows, dialog boxes, and grids of fields for debugging. You can pause the debugger and trigger WebLOAD Recorder to wait for user input before proceeding with running the script. In the script, you can set breakpoints and step into / over / out. You can also abort the debugger without executing the TerminateClient and TerminateAgenda functions, as opposed to stopping it completely.</p> <p>To debug your script:</p> <ul> <li>Click Step Into or click Run in the Debug tab of the WebLOAD Recorder ribbon,</li> </ul> <p>-Or-</p> <p>Add breakpoints by clicking Toggle Breakpoint in the Debug tab of the WebLOAD Recorder ribbon, and then clicking Run to run the script.</p> <p>Note: If you stop the debugger prematurely (for example, by closing the WebLOAD Recorder or returning to edit mode), you can instruct WebLOAD, in the Settings dialog box, to prompt you to save the debugging session file. For more information about the Settings dialog box, see Configuring the Settings (on page 208).</p>"},{"location":"recorder-user-guide/quick_start/#debugging-using-the-watch-window","title":"Debugging Using the Watch Window","text":"<p>You can use the Watch window to specify variables and expressions that you want to watch while debugging your program.</p> <p>To debug using the Watch window:</p> <ol> <li>Start debugging.</li> <li>Select the Watch Window checkbox in the Debug tab</li> </ol> <p></p> <p>In the Name column, plus sign (+) or minus sign (-) boxes may appear. These appear if you added an array or object variable to the Watch window. Use these boxes to expand or collapse your view of the variable.</p>"},{"location":"recorder-user-guide/quick_start/#debugging-using-the-variables-window","title":"Debugging Using the Variables Window","text":"<p>The Variables window provides quick access to variables that are important in the scripts current context.</p> <p>To debug using the Variables Window:</p> <ol> <li>Start debugging.</li> <li>Check the Variables Window checkbox in the Debug tab of the ribbon.</li> </ol> <p></p> <p>The Variables window displays variables used in the current statement and in the previous statement. It also displays return values when you step over or out of a function.</p> <p>The Variables window contains a grid with fields for the variable name and value. The debugger automatically fills in these fields. You cannot add variables or expressions to the Variables window. The Context dropdown list displays the current scope of the variables displayed.</p>"},{"location":"recorder-user-guide/quick_start/#debugging-using-the-call-stack-window","title":"Debugging Using the Call Stack Window","text":"<p>The Call Stack window lists the function calls that led to the current statement, with the current function on the top of the stack.</p> <p>To debug using the Call Stack Window:</p> <ol> <li>Start debugging.</li> <li>Select the Call Stack checkbox in the Debug tab of the ribbon.</li> </ol> <p></p> <p>This Quick Start has shown you an example of how to record, create, edit, run, and debug a script in WebLOAD Recorder. For more information about all the options available in WebLOAD Recorder, see the rest of the WebLOAD Recorder User\u2019s Guide and the WebLOAD Recorder Online Help.</p>"},{"location":"recorder-user-guide/recording_scripts/","title":"Recording Scripts","text":"<p>This section provides instructions for recording scripts with WebLOAD Recorder.</p>"},{"location":"recorder-user-guide/recording_scripts/#about-recording-scripts-with-webload-recorder","title":"About Recording Scripts with WebLOAD Recorder","text":"<p>Use WebLOAD Recorder to create test scripts as a baseline for testing your Web application in the WebLOAD Console. As you navigate through a Web application, WebLOAD Recorder records your actions, automatically generating a script that reflects your actions in JavaScript. WebLOAD Recorder creates your scripts for you, writing GET and POST HTTP protocol commands automatically.</p> <p>As your actions are recorded, WebLOAD Recorder displays them in the Script Tree, which is a tree hierarchy with visual indications of the information recorded.</p> <p>WebLOAD Recorder records only HTTP protocol calls that place a load on the System Under Test (SUT). Activities that are not relevant to the script, such as moving windows for a more comfortable display or opening another application, are not recorded. While your script is being recorded, you can edit it with the WebLOAD Recorder Toolbox set. For information on editing your script using the WebLOAD Recorder Toolbox set, see *Editing your Script Using the WebLOAD Recorder Toolbox Set* (on page 85).</p> <p>This process creates the basic script. You can then view the recorded script as JavaScript code in the JavaScript view pane, revise the script to test more objects in more detail, and run and debug the script. For information on editing your script, see Editing Scripts (on page 69). For information on running and debugging your script, see Running and Debugging Scripts (on page 111).</p> <p>The script can then be used with WebLOAD for load and scalability testing of your application.</p>"},{"location":"recorder-user-guide/recording_scripts/#starting-webload-recorder","title":"Starting WebLOAD Recorder","text":"<p>To start WebLOAD Recorder:</p> <ol> <li>Select Start &gt; Programs &gt; RadView &gt; WebLOAD &gt; WebLOAD Recorder. WebLOAD Recorder opens.</li> </ol> <p></p> <ol> <li> <p>Check or uncheck Don\u2019t ask me again.</p> </li> <li> <p>Click one of the following options:</p> </li> <li> <p>Create a new project \u2013 Opens a new project. WebLOAD supports several types of projects, the default project being Internet Protocol Project. The new project type is set according to the type of project which was last open. To create a different type of project, select New Project in the File tab of the WebLOAD Recorder ribbon and select the desired project type.</p> </li> <li>Open an existing project \u2013 Browse to the project.</li> <li>Open a saved session \u2013 Browse to the session.</li> </ol> <p>The WebLOAD Recorder main window opens in Editing Mode (Figure 5), enabling you to begin creating or editing your script.</p>"},{"location":"recorder-user-guide/recording_scripts/#recording-a-script","title":"Recording a script","text":"<p>You can either start working with WebLOAD Recorder immediately, or you can configure the recording options first. For more information about configuring the recording options, see Configuring the Recording and Script Generation Options (on page 174).</p> <p>When you record a script, WebLOAD Recorder displays the script being created in real time. You can watch WebLOAD Recorder record your actions as you navigate in the Web browser.</p> <p>If you start and stop recording more than once during a single recording session (for example, to skip an irrelevant step in the application you plan to test) each subsequent set of JavaScript commands is appended to the end of the script. If you open an existing script and start recording new Web activity, WebLOAD Recorder also appends the new JavaScript commands to the end of the script.</p> <p>To record a script:</p> <ol> <li>Start WebLOAD Recorder (see Starting WebLOAD Recorder on page 34).</li> </ol> <p>-Or-</p> <p>Start WebLOAD Recorder from your Explorer by double-clicking the WebLOAD Recorder project file (.wlp) or session WebLOAD Recorder session file (.wls).</p> <p>The WebLOAD Recorder main window opens in Editing Mode, enabling you to begin recording your script.</p> <ol> <li> <p>To create a new script, click New Project in the File tab of the ribbon.</p> </li> <li> <p>To open an existing script:</p> </li> <li> <p>Click Open in the File tab of the ribbon.</p> </li> <li> <p>Select a file.</p> </li> <li> <p>Click Start in the Home tab of the ribbon.</p> </li> </ol> <p>By default, the Recording dialog box appears.</p> <p></p> <p>The Recording dialog box enables you to quickly define the basic settings for the default Web browser which you will be using during the recording.</p> <p>Note: Any changes to the settings in the Recording dialog box affect the settings of the Browser Settings tab of the Recording and Script Generation Options dialog box (Figure 114). For more information, see Configuring the Default Browser (on page 186).</p> <ol> <li>Optionally change the browser settings:</li> </ol> Field Description Open <p>Select one of the following options as your default browser:</p><p>- Microsoft Internet Explorer.</p><p>- Mozilla Firefox.</p><p>- Google Chrome.</p><p>- Native Mobile Recording. For further explanations, refer to *Recording Mobile Applications* (on page 375).</p><p>- None \u2013 No default browser.</p><p>If you selected Mozilla Firefox as your browser, and Mozilla Firefox was installed on the machine after WebLOAD Recorder was installed, a message appears recommending that you install the Firefox extension responsible for setting the proxy definitions automatically. If you accept, the extension is installed.</p> URL address <p>Enter an address of a web page if you wish to open that specific page in the browser you selected.</p><p>This option is useful if you wish to open the same page multiple times.</p> Clear browser cache Select this option to clear the browser cache before recording. This option is selected, by default. Clear cookies Select this option to clear the browser\u2019s cookie history before recording. This option is selected, by default. Identify as Select this option to simulate a mobile web application. Browser Select the browser type you wish to simulate. Version Select the browser version you wish to simulate. Alternatively, click the Change button  to edit the browser version definition. See *Editing Browser Version Definitions* (on page 164). <p>Don\u2019t show</p><p>again</p> Select this checkbox if you do not wish to see this dialog box every time you select Start Recording. <p>In addition, you can optionally click More Options to open the Browser Settings tab of the Recording and Script Generation Options dialog box (Figure 119) and define the default browser settings in full detail.</p> <ol> <li>Click OK. The Recording dialog box closes.</li> </ol> <p>A floating WebLOAD Recording toolbar appears. Throughout any recording session, the WebLOAD Recording toolbar always appears on top of the active window.</p> <p></p> <p>The following table describes the function of each button in the WebLOAD Recording toolbar:</p> <p>Table 4: WebLOAD Recording Toolbar Buttons</p> Button Purpose <p></p><p></p> Start recording. <p></p><p></p> End recording. Pause or resume recording. Insert message. Insert comment. <p>Begin transaction.</p><p>Adds named transactions to the script to measure the performance of logical actions in your script, such as a Login process. By inserting named transactions into your script, you can take a series of simple actions, define them as a single transaction, and set success or failure criteria for the complete transaction.</p> End transaction. <p>Define concurrent.</p><p>Defines a starting point after which the WebLOAD engine collects all Post and Get HTTP requests, but does not execute them until an Execute Concurrent function is run.</p> <p>Execute concurrent.</p><p>Defines a starting point after which the WebLOAD engine stops collecting and begins executing all the Post and Get HTTP requests that were defined since the last Define Concurrent function, concurrently (using multithreading).</p> <p>WebLOAD Recorder begins recording all actions you perform in the browser, as indicated by the recording notification in the WebLOAD Recorder status bar.</p> <p></p> <p>If this is the first time that you are recording after WebLOAD Recorder was launched, the default browser opens automatically with its predefined home page. This enables you to start recording and then access a page.</p> <p></p> <ol> <li> <p>In the Web browser window, access the System Under Test (SUT).</p> </li> <li> <p>Perform the steps that you want to test, retrieving and submitting information found on different site pages and locations. Try to emphasize the actions whose performance you need to measure in your test sessions.</p> </li> </ol> <p>Watch how WebLOAD Recorder adds nodes to the script as you work. Your actions are recorded and appear in the Script Tree as you navigate the site. (If you see more nodes in the Script Tree with different URLs, this may be traffic generated by browser plug-ins or extensions, for example, third-party toolbars.)</p> <p></p> <ol> <li> <p>Click the JavaScript View tab to watch the JavaScript of the pages as they are being recorded.</p> <p>Note: During recording, the InitAgenda and TerminateAgenda sections of the script are not generated and therefore are not visible.</p> </li> <li> <p>Click the HTTP Headers View tab to watch the response headers of the pages as they are being recorded.</p> </li> <li> <p>Click the HTML View tab to watch the HTTP data as it is being recorded.</p> </li> </ol> <p>Note: When switching between the JavaScript, HTTP Headers, Browser, and HTML Views, the new view displays the node that is selected in the Script Tree (during edit mode) or Execution Tree (during debug mode). These views are available during recording, after the recording is finished, and after opening a saved script.</p> <ol> <li> <p>When you are finished, select WebLOAD Recorder.</p> </li> <li> <p>Click Stop Recording in the WebLOAD Recorder recording floating toolbar or in the Home tab of the WebLOAD Recorder ribbon.</p> </li> </ol> <p>WebLOAD Recorder stops recording.</p> <ol> <li> <p>Click Save in the File tab of the WebLOAD Recorder ribbon.</p> </li> <li> <p>In the File name field in the Save As dialog box, type a descriptive name for the script, and then click Save.</p> </li> </ol> <p>Your script is saved with the file extension *.wlp.</p> <ol> <li>Close the Browser window to work in WebLOAD Recorder. The Recording Complete dialog box opens.</li> </ol> <p></p> <ol> <li> <p>Select one of the following:</p> </li> <li> <p>Automatically discover rules and correlate script to run the correlation engine using the existing rules, and apply auto-discovery correlation to find potential correlation rules. For more information, see *Automatic Discovery of Correlation Rules* (on page 94.)</p> </li> <li>Correlate script using only the existing rules to run the correlation engine using the existing defined rules. For more information, see *Configuring the Correlation Rules* (on page 98).</li> <li>Don\u2019t correlate now to view the recorded script without correlating the script. You can manually correlate the script later.</li> </ol> <p>Notes: Although by default the Recording Complete dialog box appears, this depends on your settings in the Correlation Options tab of the Recording and Script Generations options dialog box. For more information, see Setting the Default Correlation Action (on page 93).</p> <p>You can customize the script in a variety of ways or you can run your script as recorded. For information on editing your script, see Editing Scripts (on page 69). For information on running your script, see Running and Debugging Scripts (on page 111).</p> <p>Notes: If actions that you are interested in were not recorded, check the cache settings in your browser. WebLOAD Recorder may be skipping steps that you want to record because your browser is using a system cache file. For more information, see Clearing the Cache and Cookies in Your Browser (on page 13).</p> <p>When you stop the recording, if no actions were recorded (that is, the script is blank), WebLOAD Recorder automatically displays the recording troubleshooting information. </p>"},{"location":"recorder-user-guide/recording_scripts/#pausing-a-recording","title":"Pausing a Recording","text":"<p>WebLOAD Recorder enables you to pause a recording so that you can edit the script.</p> <p>To pause a recording:</p> <ol> <li>Click  from the WebLOAD Recording toolbar</li> </ol> <p>-Or-</p> <p>Click Pause in the Home tab of the ribbon. The recording pauses.</p> <ol> <li>To restart the recording, click  from the WebLOAD Recording toolbar,</li> </ol> <p>-Or-</p> <p>Click Start in the Home tab of the ribbon. </p> <p>The recording restarts.</p>"},{"location":"recorder-user-guide/recording_scripts/#inserting-messages-in-a-recording","title":"Inserting Messages in a Recording","text":"<p>WebLOAD Recorder enables you to insert messages while recording, defining points at which to send error and/or notification messages to the Log window.</p> <p>To insert a message:</p> <ol> <li>Click  from the WebLOAD Recording toolbar at the desired location in the recording.</li> </ol> <p>The Message dialog box opens.</p> <p></p> <ol> <li>Create a text message by typing the text you want to appear in the message in the input text box.</li> </ol> <p>Note: When you enter a string value in the message, you must enclose it in quotation marks; for example, \u201cSample Message\u201d.</p> <ol> <li> <p>To add a global variable to the message text, click the globe icon to the right of the input text box, and select a global variable from the drop-down list.</p> </li> <li> <p>Select a severity level for the message from the drop-down list. The following severity levels are available:</p> </li> <li> <p>Information message (WLInfoMessage)</p> </li> <li>Minor error message (WLMinorError)</li> <li>Error message (WLError)</li> <li>Severe error message (WLSevereError)</li> <li> <p>Debug message (WLDebugMessage)</p> </li> <li> <p>Click OK.</p> </li> </ol> <p>The Message item appears in the Script Tree, and the JavaScript code is added to the script. To see the new JavaScript code, view the script in JavaScript Editing mode.</p>"},{"location":"recorder-user-guide/recording_scripts/#inserting-comments-in-a-recording","title":"Inserting Comments in a Recording","text":"<p>WebLOAD Recorder enables you to insert comments while recording to describe an activity or provide information about a specific operation.</p> <p>To insert a comment:</p> <ol> <li>Click  from the WebLOAD Recording toolbar at the desired location in the recording.</li> </ol> <p>The Comment dialog box opens.</p> <p></p> <ol> <li> <p>Enter the text you want to appear in the comment.</p> </li> <li> <p>Click OK.</p> </li> </ol> <p>The Comment item appears in the Script Tree, and the JavaScript code is added to the script. To see the new JavaScript code, view the script in JavaScript Editing mode.</p>"},{"location":"recorder-user-guide/recording_scripts/#inserting-begin-and-end-transactions-in-a-recording","title":"Inserting Begin and End Transactions in a Recording","text":"<p>In addition to the automatic transactions provided by WebLOAD, you can add named transactions during a recording to measure the performance of logical actions in your script, such as a Login process. By inserting named transactions into your script, you can take a series of simple actions, define them as a transaction, and set success or failure criteria for the transaction. Each transaction can be a simple action, such as a query, or a complex action that may include several steps.</p> <p>To measure transactions, you must mark the beginning and end of the transaction in your script. During runtime, WebLOAD measures the time it takes to complete the transaction and reports the results in the WebLOAD Integrated reports, Statistics reports, and Data Drilling report.</p> <p>Note: You can add an unlimited number of transactions into your script. Each transaction must have a different name.</p> <p>To mark the beginning of a transaction:</p> <ol> <li>Click ![ref24] from the WebLOAD Recording toolbar just before the first action you want to include in the transaction.</li> </ol> <p>The Begin Transaction dialog box opens.</p> <p></p> <ol> <li> <p>Enter a logical name for the transaction; for example, \u201cLogin\u201d.</p> </li> <li> <p>Click OK.</p> </li> </ol> <p>The Begin Transaction item appears in the Script Tree, and the JavaScript code is added to the script. To see the new JavaScript code, view the script in JavaScript Editing mode.</p> <p>To mark the end of a transaction:</p> <ol> <li>Click  from the WebLOAD Recording toolbar directly after the last action you want included in the script.</li> </ol> <p>The End Transaction dialog box opens.</p> <p></p> <ol> <li> <p>Select the transaction to end from the Select Opened Transaction drop-down list.</p> </li> <li> <p>Select a return value for the transaction from the Select Return Value drop-down list.</p> </li> </ol> <p>You can select from the return values provided, or select Custom Function to create your own verification function to call when the transaction is complete.</p> <p>For information on creating custom functions, see the WebLOAD Scripting Guide.</p> <ol> <li> <p>To set WebLOAD to save the results of all transaction instances, successes, and failures for later analysis with Data Drilling, select true in the Save transaction information for Data Drilling field. Select false (default) to save only results of failed transaction instances that triggered some sort of error flag.</p> </li> <li> <p>Optionally, enter a text string to specify a possible reason for a transaction failure within your transaction verification function in the Failure Reason field. This reason will also appear in the Statistics Report.</p> </li> <li> <p>Click OK.</p> </li> </ol> <p>The End Transaction item appears in the Script Tree, and the JavaScript code is added to the script. To see the new JavaScript code, view the script in JavaScript Editing mode.</p>"},{"location":"recorder-user-guide/recording_scripts/#defining-concurrent-in-a-recording","title":"Defining Concurrent in a Recording","text":"<p>WebLOAD Recorder enables you to collect Post and Get HTTP requests and simultaneously execute them by two or more threads, as defined in the MultiThread Virtual Clients number. This is configured in the Browser Parameters tab in WebLOAD Console\u2019s Script Options dialog box.</p> <p>![ref13]Note: WebLOAD Recorder does not perform the Post and Get HTTP requests concurrently.</p> <p>To simultaneously execute Post and Get HTTP requests, you must define where in the script to begin collecting the requests and where to stop collecting and begin executing them. The HTTP requests are collected until the engine encounters an Execute Concurrent function in the script. For more information about the Execute Concurrent Building Block, see Executing Concurrent Definition in a Recording (on</p> <p>page 46).</p> <p>To define when to start collecting HTTP requests in a script:</p> <ul> <li>Click from the WebLOAD Recording toolbar at the desired location in the recording.</li> </ul> <p>The Define Concurrent Building Block is added to the Script Tree. The JavaScript code is added to the script. To see the new JavaScript code, view the script in JavaScript Editing mode.</p>"},{"location":"recorder-user-guide/recording_scripts/#executing-concurrent-definition-in-a-recording","title":"Executing Concurrent Definition in a Recording","text":"<p>WebLOAD Recorder enables you to define the Execute Concurrent function. Then in WebLOAD Console, you can simultaneously execute all the Post and Get HTTP requests that were defined since the last Define Concurrent function by two or more threads, as defined by the MultiThread Virtual Clients number. This is configured in the Browser Parameters tab in WebLOAD Console\u2019s Script Options dialog box.</p> <p>Note: The Execute Concurrent function can only be inserted in your script after a Define Concurrent function. For more information about the Define Concurrent function, see Define Concurrent (on page 246).</p> <p>When the engine encounters the Execute Concurrent function, it stops collecting the HTTP requests in the script and starts their execution.</p> <p>To insert concurrently executing HTTP requests in a script:</p> <ul> <li>Click from the WebLOAD Recording toolbar at the desired location in the recording.</li> </ul> <p>The Execute Concurrent Building Block is added to the Script Tree. The JavaScript code is added to the script. To see the new JavaScript code, view the script in JavaScript Editing mode.</p>"},{"location":"recorder-user-guide/recording_scripts/#viewing-the-recorded-script","title":"Viewing the Recorded Script","text":"<p>WebLOAD Recorder creates scripts by recording your actions as you interact with your Web application or System Under Test (SUT). Your recorded script serves as a baseline, which is subsequently used in the WebLOAD environment to test the performance of your Web application.</p> <p>WebLOAD Recorder presents each recorded action visually in the Script Tree and as code in the JavaScript View pane.</p> <p></p>"},{"location":"recorder-user-guide/recording_scripts/#viewing-the-recorded-script-in-the-script-tree","title":"Viewing the Recorded Script in the Script Tree","text":"<p>As you navigate through a Web application, WebLOAD Recorder records your actions.</p> <p></p> <p>WebLOAD Recorder displays the following as nodes in the Script Tree:</p> <ul> <li>Pages accessed</li> <li>Sleep time</li> <li>Messages</li> <li>Comments</li> <li>Begin Transaction</li> <li>End Transaction</li> <li>Define Concurrent</li> <li>Execute Concurrent</li> </ul> <p>When navigating to a new page in the Web application, WebLOAD Recorder inserts a node with the URL into the Script Tree.</p> <p></p> <p>When you pause while navigating in the Web application, WebLOAD Recorder inserts a Sleep node into the Script Tree. The Sleep node represents your thinking time.</p> <p></p> <p>When you insert a message while recording, WebLOAD Recorder inserts a Message node into the Script Tree.</p> <p></p> <p>When you insert a comment while recording, WebLOAD Recorder inserts a Comment node into the Script Tree.</p> <p></p> <p>When you begin a transaction while recording, WebLOAD Recorder inserts a BeginTransaction node into the Script Tree. All actions that occur during the Transaction appear on a lower hierarchical level in the Script Tree. You can collapse or expand this node by clicking  or   respectively.</p> <p></p> <p>When you end a transaction while recording, WebLOAD Recorder inserts an EndTransaction node into the Script Tree.</p> <p></p> <p>When you define concurrent while recording, WebLOAD Recorder inserts a DefineConcurrent node into the Script Tree.</p> <p></p> <p>When you define concurrent while recording, WebLOAD Recorder inserts an ExecuteConcurrent node into the Script Tree.</p> <p></p> <p>After the script is recorded, you can edit the script (see Editing a Script in the Script Tree on page 70).</p> <p>After your script has been developed, you can run and debug it. While the script is running, you can view it in the Script Tree (see *Viewing the Execution Sequence in the Script Tree* on page 112).</p>"},{"location":"recorder-user-guide/recording_scripts/#viewing-the-recorded-script-in-the-javascript-view-pane","title":"Viewing the Recorded Script in the JavaScript View Pane","text":"<p>Each node in the Script Tree is actually a visual representation of JavaScript code. You can view the contents of the nodes in the JavaScript view pane.</p> <p></p> <p>In the JavaScript view pane, you can do the following:</p> <ul> <li>Display the code for each node individually.</li> <li>View code for the entire script as a whole.</li> <li>View the code for different sections in the script, by clicking the Agenda root node in the Script Tree and selecting a section from the Function Name list at the top of the JavaScript view pane.</li> </ul> <p>Each block of code starts with a header that contains \u201cWLIDE\u201d, description, and ID number, and ends with the \u201cEND WLIDE\u201d closing comment. The ID number is automatically generated by WebLOAD Recorder and is the connection between the script node and the specific header. The comments in the script are a light grey color.</p> <p></p> <p>After the script is recorded, you can edit the script (see *Editing a Script in the JavaScript View Pane* on page 72).</p> <p>After your script has been developed, you can run and debug it. While the script is running, you can view it in the JavaScript View pane (see *Viewing the Execution Sequence in the JavaScript View Pane* on page 113).</p>"},{"location":"recorder-user-guide/recording_scripts/#viewing-the-recorded-script-in-the-http-headers-view-pane","title":"Viewing the Recorded Script in the HTTP Headers View Pane","text":"<p>Each node in the Script Tree is also a visual representation of response headers. You can view the headers of the nodes in the HTTP Headers view pane.</p> <p></p> <p>In the HTTP Headers view pane, you can do the following:</p> <ul> <li>Display the header for each node individually.</li> <li>View headers for the entire script as a whole.</li> </ul> <p>When you click a node in the Script Tree, you can view the header for that node.</p> <p></p> <p>You can expand the header to view all of the gets and posts for that node.</p> <p></p> <p>For an object that does not have a header, such as a Sleep node, the following is displayed:</p> <p></p> <p>The Post command involves sending data to the HTTP server, as opposed to the Get command, which is used only for retrieving data. In the HTTP Headers View, the Post command also includes the actual data that was sent to the server. This part of the HTTP message is marked by a special icon:</p> <p></p> <p>After the script is recorded, you can edit the script (see *Editing a Script in the JavaScript View Pane* on page 72).</p> <p>After your script has been developed, you can run and debug it. While the script is running, you can view it in the JavaScript View pane (see *Viewing the Execution Sequence in the JavaScript View Pane* on page 113).</p>"},{"location":"recorder-user-guide/recording_scripts/#viewing-the-recorded-script-in-the-html-view-pane","title":"Viewing the Recorded Script in the HTML View Pane","text":"<p>Each node in the Script Tree is actually a visual representation of HTML code. You can view the HTML preview of each page and frame requested in the script in the HTML view pane.</p> <p></p> <p>In the HTML view pane, you can display the code for each node individually. After your script has been developed, you can run and debug it. For more information on debugging with the HTML View, see Using the HTML View to View Results (on page 133).</p>"},{"location":"recorder-user-guide/recording_scripts/#performing-script-regeneration","title":"Performing Script Regeneration","text":"<p>When a script is recorded, all of the HTTP traffic is saved even if not all of it is used to generate the script (the recorded traffic is saved to the .wle file of the script). The script is created according to the settings defined in the Script Generation tab in the Record and Script Generation Options dialog box. You can regenerate the script any time after recording, to include additional traffic information that was originally recorded. This is done by modifying the settings in the Script Generation tab and then regenerating the script.</p> <p>For example, by default when a script is recorded, the HTTP headers settings for the HTTP requests are not displayed in the script even though they are recorded. After selecting the Generate All Headers checkbox in the Script Generation tab and regenerating the script, the script includes the wlHttp headers property. For more information on the script content that can be regenerated, see *Specifying the Script Content to be Generated* on page 176.</p> <p>In addition, script regeneration is affected by changes in the settings defined in the Post Data tab in the Record and Script Generation Options dialog box. You can record a script with content type x in the DATA list, DATAFile list, or not in any list, (which means it will be recorded as FORMDATA) and then change the settings and regenerate the script and it will play back according to the new settings.</p> <p>To perform script regeneration:</p> <ol> <li>Click Correlation in the Home tab of the ribbon and select Regenerate Script from the drop-down list.</li> </ol> <p>-Or-</p> <p>Right-click a node in the Script Tree and select Regenerate Script from the pop-up menu. This regenerates only the selected node.</p> <p>Note: If your script was created manually, and not recorded, WebLOAD informs you that your script does not contain any recorded nodes and cannot regenerate the script. When performing script regeneration, any modifications to the script\u2019s originally recorded nodes are lost. Any nodes that were added after the recording will remain in the script after the script is regenerated.</p> <p>The Perform Script Regeneration dialog box appears.</p> <p></p> <ol> <li>Click Save and Continue to save the changes in your script and regenerate the script.</li> </ol> <p>-Or-</p> <p>Click Don\u2019t Save and Continue to regenerate the script without saving the changes in your script.</p> <p>-Or-</p> <p>Click Cancel to close the Perform Script Regeneration dialog box without regenerating the script.</p> <p>Note: Click Edit &gt; Undo to discard the newly regenerated script and revert back to the previous script.</p>"},{"location":"recorder-user-guide/recording_scripts/#saving-a-script","title":"Saving a Script","text":"<p>You must save your scripts so that you can use them in test sessions.</p> <p>To save a script:</p> <ol> <li> <p>Click Save in the File tab of the ribbon and select Save or Save As. The Save As dialog box appears.</p> </li> <li> <p>Type the script name in the File name field.</p> </li> <li> <p>Click Save.</p> </li> </ol> <p>Your script is saved with the file extension *.wlp. You may now run a test using the script.</p>"},{"location":"recorder-user-guide/recording_scripts/#saving-additional-project-information","title":"Saving Additional Project Information","text":"<p>The Additional Information dialog box provides details about the project that help identify it; for example:</p> <ul> <li>A descriptive title</li> <li>The author name</li> <li>The subject of the test</li> <li>The system under test</li> <li>Other important information about the project</li> </ul> <p>Use the Additional Information dialog box to save information about the project.</p> <p>To save additional information properties for the project:</p> <ol> <li>Select Additional Information from the WebLOAD Recorder Home tab of the ribbon.</li> </ol> <p>The Project Additional Information dialog box opens.</p> <p></p> <ol> <li> <p>Fill in the fields to save additional information, useful for later reference, with the project.</p> </li> <li> <p>Click OK.</p> </li> </ol> <p>The following table describes the fields of the Project Additional Information dialog box.</p> <p>Table 5: Project Additional Information Dialog Box Fields</p> Field Description Title Provides a space for you to type a title for this project. The title can be different then the project file name. Subject Provides a space for you to type a description of the subject of the project. Use this property to group similar projects together. Created by Provides a space for you to type the name of the person who authored this project. Test description Provides a space for you to type a description of the test objectives and what the project is designed to test. Version and build of the System Under Test Provides a space for you to type the name, version and build number of the System Under Test (SUT). Comments Provides a space for you to type any comments regarding the project. Custom Provides a space for you to type any comments you want saved with this project."},{"location":"recorder-user-guide/recording_scripts/#recording-desktop-web-applications","title":"Recording Desktop Web Applications","text":"<p>Desktop web applications, such as Rich Internet Applications (RIAs), are web based applications that have the features and functionality of local desktop applications. A desktop web application can run either in a web browser or in software that is installed and run locally on the user\u2019s desktop (for example, Adobe AIR applications).</p> <p>Recording desktop web applications in scripts using WebLOAD Recorder, involves configuring the web applications to use a specific proxy setting. This proxy setting is usually configured automatically when opening WebLOAD Recorder for browser- based applications in Internet Explorer or Mozilla Firefox. To record any other web application that does not run within the browser, configure the web application to pass the traffic to the server through the WebLOAD Recorder proxy server, using one of the following methods:</p> <ul> <li>Recording WebLOAD Scripts Using the Client\u2019s Proxy Setting (on page 59).</li> <li>Recording WebLOAD Scripts Using the LAN Settings (on page 59).</li> <li>Recording WebLOAD Scripts Using Proxy Tunneling (on page 61).</li> </ul>"},{"location":"recorder-user-guide/recording_scripts/#recording-webload-scripts-using-the-clients-proxy-setting","title":"Recording WebLOAD Scripts Using the Client\u2019s Proxy Setting","text":"<p>Web applications that support working through a proxy server can be configured to pass the traffic to the server through the WebLOAD Recorder proxy server. Follow the web application\u2019s proxy setting instructions to specify the WebLOAD Recorder proxy server as the application\u2019s proxy server.</p> <p>WebLOAD Recorder\u2019s default proxy server settings are:</p> <ul> <li> <p>Host: localhost.</p> </li> <li> <p>Port: 9884.</p> </li> </ul>"},{"location":"recorder-user-guide/recording_scripts/#recording-webload-scripts-using-the-lan-settings","title":"Recording WebLOAD Scripts Using the LAN Settings","text":"<p>Some operation systems provide the ability to configure the proxy setting of the LAN</p> <p>connection. The following example demonstrates configuring the Internet application\u2019s proxy setting of the LAN connection in Windows XP:</p> <p>To configure the proxy setting in Windows XP:</p> <ol> <li> <p>From the Start menu, select Settings &gt; Control Panel. The Control Panel dialog box appears.</p> </li> <li> <p>Select Internet Properties and then select the Connections tab.</p> </li> </ol> <p>The Internet Properties \u2013 Connections tab appears.</p> <p></p> <ol> <li>In the Local Area Network (LAN) settings, click LAN settings. The Local Area Network (LAN) Settings dialog appears.</li> </ol> <p></p> <ol> <li> <p>In the Proxy server area check Use a proxy server for your LAN.</p> </li> <li> <p>In the Address and Port fields enter WebLOAD Recorder\u2019s proxy server setting. By default, this is localhost:9884.</p> </li> </ol> <p>Note: This setting is necessary for the recording process only and should be removed before the load test execution.</p> <ol> <li>Click OK.</li> </ol> <p>The proxy setting of the LAN connection in Windows XP is configured.</p>"},{"location":"recorder-user-guide/recording_scripts/#recording-webload-scripts-using-proxy-tunneling","title":"Recording WebLOAD Scripts Using Proxy Tunneling","text":"<p>Proxy tunneling is a general method to handle desktop web applications that do not support working through a proxy server. Proxy tunneling involves using an external utility to redirect the outgoing web traffic on the client machine. The redirection enforces the traffic to pass through WebLOAD\u2019s proxy recorder, which is listening on port 9884, during the recording stage.</p> <p>To record scripts using Proxy Tunneling:</p> <ol> <li> <p>Enable a port interception service on the client machine. Configure the service to redirect the outgoing traffic from the application to pass through WebLOAD\u2019s proxy. The following are possible methods for intercepting web application traffic:</p> </li> <li> <p>Use an external utility that is capable of controlling and rerouting HTTP traffic. For example, the Proxifier application, which is available at: http://www.proxifier.com.</p> </li> <li>Configure your firewall. Some firewalls provide advanced services of traffic manipulation.</li> <li> <p>Configure your hardware. Four to seven layer switches may be used for controlling and routing web based traffic.</p> </li> <li> <p>Configure WebLOAD Recorder\u2019s recording options as follows:</p> </li> <li> <p>Click Recording and Script Generation Options in the Tools tab of the ribbon. The Recording and Script Generation Options dialog appears (see Figure 114).</p> </li> <li> <p>Select the Browser Settings tab.</p> </li> <li> <p>The Browser Settings tab appears (see Figure 119).</p> </li> <li> <p>In the Automatic Browser Settings area, uncheck Set the Proxy definitions automatically.</p> </li> <li> <p>Select the Proxy Options tab.</p> <p>The Proxy Options tab appears (see Figure 125).</p> </li> <li> <p>In the Recording Proxy Options area, check Use Transparent Proxy. This enables WebLOAD Recorder to record from any Web client that does not support proxy configurations.</p> </li> <li> <p>Start recording your script.</p> </li> <li> <p>Run the web application. While the web application is running, all the http traffic generated on the client machine is directed to WebLOAD Recorder. WebLOAD handles this traffic as if it is received from a browser client and generates the appropriate script.</p> </li> <li> <p>Stop recording the script when the application is finished running.</p> </li> <li> <p>Disable the interception service.</p> </li> </ol> <p>Note: Before starting the test and running the generated script, the interception service must be stopped. Otherwise, the load traffic generated by the Console will be directed back to the recorder.</p> <p>The script is recorded successfully. You can now run the test in WebLOAD Console.</p> <p>In certain cases, the WebLOAD Proxy Recorder may timeout during recording. This may be due to a slow network and/or SUT. The default timeout is 60. To avoid this situation, you can increase the default timeout.</p> <p>To change the default timeout:</p> <ol> <li> <p>Right-click the <code>wlproxyinclude.js</code> file in {RadView directory}\\Include and select Edit.</p> </li> <li> <p>Add the following line to the file:</p> </li> </ol> <p><code>ProxyObject.RProxyCOptConnectionTimeOut = 300</code></p> <ol> <li>Save the file.</li> </ol>"},{"location":"recorder-user-guide/recording_scripts/#troubleshooting","title":"Troubleshooting","text":"<p>Refer to the following table if you are having recording related problems. Before assuming the problem is with WebLOAD, make sure that your internet settings are correct and that you can access the internet without recording.</p> <p>Table 6: Troubleshooting</p> Problem Possible Options Solution Script is not created while recording Make sure browser opens while recording. Click Recording and Script Generation Options in the Tools tab of the ribbon and select the Browser Settings tab. Ensure that the settings are correct for your browser. See Configuring the Default Browser (on page 186) for more information. Check browser proxy settings. For Internet Explorer:<p>1. From your browser\u2019s menu, select Tools \u0086 Internet Options and select the Connections Options tab.</p><p>2. Click Lan Settings.</p><p>3. If none of the checkboxes are selected, you have a direct connection to the internet and the browser proxy settings are not the problem.</p><p>\u2003If Automatically detect settings and/or Use automatic configuration script are checked, you must disable the automatic settings. Before disabling the automatic settings, contact your system administrator for your proxy server information.</p><p>\u2003If Use a proxy server for your LAN is checked, copy the Address and Port field\u2019s current proxy settings. In WebLOAD, click Recording and Script Generation Options in the Tools tab of the ribbon and select the Proxy Options tab. Check Use the following definitions for the application\u2019s proxy server and enter the current proxy information into the HTTP Proxy/Port and SSL Proxy/Port fields.</p> For Mozilla Firefox:<p>1. From your browser\u2019s menu, select</p><p> Tools &gt; Options.</p><p>2. At the top of the Options dialog box, select the Advanced icon and select the Network tab.</p><p>3. In the Connection area, click Settings.</p><p>4. If Direct connection to the internet is selected, the browser proxy settings are not the problem.</p><p></p><p>If Auto-detect proxy settings for this network or Automatic proxy configuration URL are selected, you must disable the automatic settings. Before disabling the automatic settings, contact your system administrator for your proxy server information.</p><p>If Manual proxy configuration is selected, copy the HTTP Proxy and Port field\u2019s current proxy settings. In WebLOAD, click Recording and Script Generation Options in the Tools tab of the ribbon and select the Proxy Options tab. Check Use the following definitions for the application\u2019s proxy server and enter the current proxy information into the HTTP Proxy/Port and SSL Proxy/Port fields.</p> Recording with a browser other than Internet Explorer or Mozilla Firefox. <p>1. Click Recording and Script Generation Options in the Tools tab of the ribbon and select the Browser Settings tab. Select Other browser or None as the default browser setting.</p><p>2. While recording, you must manually change the client\u2019s proxy setting. In your browser, manually configure the proxy settings to use WebLOAD\u2019s default port: 9884.</p><p>\u2003This points the browser\u2019s proxy settings to the WebLOAD recorder enabling WebLOAD to record the browser\u2019s HTTP clients.</p> LAN settings options for IE are disabled by IT Group Policies Request that your Network Administrator change the policies for the specific machine on which you are recording. For more information about Group Policy see the Microsoft TechNet Library. Advanced options <p>1. While recording, open the task manager and ensure that a single proxynator.exe process is active. If there is no proxynator.exe process or there is more than one proxynator.exe process contact RadView support for further assistance.</p><p>2. WebLOAD uses ports 9884, 9010, and 9000. Enter netstat -a -p tcp in the command line to ensure that the ports are not being used by another application on your machine. A list of the unavailable ports appears.</p><p></p><p>If port 9884 is unavailable, click Recording and Script Generation Options in the Tools tab of the ribbon and select the Proxy Options tab. In the Recording Proxy Options frame, modify the Proxy Port value from 9884 to an available port number.</p><p>If port 9010 or port 9000 are unavailable, open the WebLOAD.ini file in \\bin and locate the following lines:<p>TESTTALK_CLIENT_PORT=\u201c9010\u201d TESTTALK_NETWORK_PORT=\u201c9001\u201d</p><p>Modify the port value of the unavailable port from 9010 and/or 9000 to an available port number.</p> Local sites are not recorded in the Script Proxy settings are set to bypass local addresses <p>1. From your browser\u2019s menu, select Tools &gt; Internet Options and select the Connections Options tab.</p><p>2. Click Lan Settings.</p><p>3. Check Bypass proxy server for local addresses to ensure that the proxy settings are not set to bypass local addresses or any other server that you want to record.</p> WebLOAD does not record from http://localhost <p>For Internet Explorer:</p><p>Use any of the following instead of http://localhost:</p><p>- http://<p>- http://<p>- http://localhost./</p><p>For Mozilla Firefox:</p><p>1. From your browser\u2019s menu, select Tools &gt; Options.</p><p>2. Select the Advanced &gt; Network tab and click Settings.</p><p>3. Clear the No proxy for property checkbox.</p> Secured sites are not recorded in the script Proxy settings do not point to the recorder. <p>For Internet Explorer:</p><p>1. From your browser\u2019s menu, select Tools &gt; Internet Options and select the Connections Options tab.</p><p>2. Click Lan Settings.</p><p>3. Ensure that Use a proxy server for your LAN is checked and modify the port setting to 9884.</p><p></p><p>For Mozilla Firefox:</p><p>1. From your browser\u2019s menu, select Tools &gt; Options.</p><p>2. At the top of the Options dialog box, select the</p><p> Advanced icon and select the Network tab.</p><p>3. In the Connection area, click Settings.</p><p>4. Ensure that Manual proxy configuration is selected and modify the port setting to 9884.</p> A different proxy is needed for SSL <p>You must configure an SSL proxy. For instructions, see</p><p>Setting the Proxy Options on page 200.</p> Certificate Error is displayed in the browser during recording <p>The browser correctly detects the recorder and warns the user. You can safely ignore the warning and continue.</p><p>Note: You can prevent the warning if you configure WebLOAD to use the server\u2019s certificate. Set the proxy certificate options in the Recording and Script Generation Options dialog box. For more information see Setting the Proxy Certificates (on page 204).</p> A partial script is created while recording Browser cache needs to be cleared. <p>For Internet Explorer or Mozilla Firefox:</p><p>1. In WebLOAD Recorder, click Recording and Script Generation Options in the Tools tab of the ribbon.</p><p>2. Select the Browser Settings tab.</p><p>3. In the Automatic Browser Settings area, check Clear the browser cache and click OK.</p><p></p><p>For any other browser:</p><p>- From your browser\u2019s menu, select the command that clears the browser\u2019s cache.</p> Proxy settings need to be modified <p>Modify the proxy setting\u2019s file extensions and content types to record specific extensions, since WebLOAD by default only records top-level URLs, such as HTML, XML, and text.</p><p>1. Click Recording and Script Generation Options in the</p><p> Tools tab of the ribbon.</p><p>2. In the Recording and Script Generation Options dialog box select the Content Types and File Locations tabs.</p><p>3. Add the specific extension and content types that are not being recorded.</p><p></p><p>For more information see *Configuring the Content Types to Record* (on page 198) and Setting File Locations (on page 210).</p> The Internet Explorer proxy settings are locked <p>1. Click Start &gt; Run.</p><p>2. Type Regedit and click OK.</p><p>3. Select HKEY_CURRENT_USER &gt; Software &gt; Policies</p><p>\u2003&gt; Microsoft &gt; Internet Explorer &gt; Control Panel.</p><p>4. Set the data value for each key in this directory to 0.</p>"},{"location":"recorder-user-guide/running_debugging_scripts/","title":"Running and Debugging Scripts","text":"<p>This section provides instructions for running and debugging scripts with WebLOAD Recorder.</p>"},{"location":"recorder-user-guide/running_debugging_scripts/#about-running-and-debugging-scripts-with-webload-recorder","title":"About Running and Debugging Scripts with WebLOAD Recorder","text":"<p>When you run your script, WebLOAD Recorder interacts with your Web application just as a real user would. WebLOAD Recorder runs your script line by line. As your script executes, execution arrows are displayed in the left margin of the Script Tree and the JavaScript View pane, showing your progress.</p> <p>Unless otherwise configured in the project options, the test session will log and continue on Minor Errors encountered during runtime. Severe Errors will cause WebLOAD Recorder to stop the entire test. If WebLOAD Recorder encounters HTTP errors that are undefined by WebLOAD, the test session logs them and continues running.</p> <p>Messages, test failures, and differences are indicated by messages in the Log View Window.</p> <p>After running a script, you can debug it. WebLOAD Recorder enables you to check that the script runs smoothly without errors, offers step controls to run through the script step-by-step, breakpoints, and various view and windows to monitor variables.</p>"},{"location":"recorder-user-guide/running_debugging_scripts/#running-a-script","title":"Running a Script","text":"<p>This section provides instructions for running a script. Before running a script, you can do the following:</p> <ul> <li>Set the number of iterations to run, see Setting Playback Options (on page 209).</li> <li>Set the file locations for a test session, see Setting File Locations (on page 210).</li> <li>Set WebLOAD Recorder to ignore the recorded sleep time, see *Configuring Sleep Time Control Options* (on page 159).</li> </ul>"},{"location":"recorder-user-guide/running_debugging_scripts/#starting-the-execution-of-a-script","title":"Starting the Execution of a Script","text":"<p>To execute the script:</p> <ol> <li> <p>In the main window, click Open in the File tab of the ribbon and open the script you want to edit.</p> </li> <li> <p>Click Run in the Home or Debug tab of the ribbon,</p> </li> </ol> <p>-Or-</p> <p>Click Step Into in the Debug tab of the ribbon to run the script step-by-step. </p> <p>The script runs and displays the following:</p> <ul> <li>A sequence of the events generated by the script in the Execution Tree.</li> <li>The execution sequence in the JavaScript View pane and the Script Tree.</li> <li>If the Page View tab is open, the pages returned from the Web site.</li> </ul> <p>Note: If you specified more than one playback iteration, you are returned to the beginning of the script (for information on playback iteration, see *Setting Playback Options* on page 209). </p>"},{"location":"recorder-user-guide/running_debugging_scripts/#viewing-the-execution-sequence-in-the-script-tree","title":"Viewing the Execution Sequence in the Script Tree","text":"<p>When you run your script, WebLOAD Recorder interacts with your Web application just as a real user would. WebLOAD Recorder runs your script line by line. Execution arrows are displayed in the left margin of the Script Tree. When you select a node in the Script Tree, the corresponding information is displayed in each of the available views. For example, the Page View displays the page you have requested from the server, the HTML View displays the HTML of that page, and the HTTP Headers View displays the request and response\u2019s headers. For more information, see *Viewing and Analyzing the Test Results* (on page 130).</p> <p>WebLOAD Recorder enables you to do the following:</p> <ul> <li>Run through the entire script line by line, and add breakpoints (see *Debugging a Script* on page 120).</li> <li>Display the Current Project Options by right-clicking the Agenda root node and clicking Current Project Options from the pop-up menu,</li> </ul> <p>-Or-</p> <p>Click Current Project Options in the Tools tab of the ribbon (see *Configuring the Default and Current Project Options* on page 155).</p> <p>-Or-</p> <p>Select Current Project Options from the WebLOAD Recorder Home tab of the ribbon (see Configuring the Default and Current Project Options on page 155).</p> <p>To view the Script Tree:</p> <ul> <li>In the main window, click Visual Mode in the Home tab.</li> </ul> <p>By default, the Script Tree pane appears at the top left of the main window, to the right of the WebLOAD Recorder Toolbox pane.</p> <p></p>"},{"location":"recorder-user-guide/running_debugging_scripts/#viewing-the-execution-sequence-in-the-javascript-view-pane","title":"Viewing the Execution Sequence in the JavaScript View Pane","text":"<p>JavaScript View displays the complete JavaScript of your script with an execution arrow tracking its progress during runtime.</p> <p>WebLOAD Recorder enables you to do the following:</p> <ul> <li>Run through the entire script line by line, add breakpoints, and add Watch variables (see Debugging a Script on page 120).</li> <li>Check the syntax by right-clicking in the script and clicking Check Syntax from the pop-up menu.</li> </ul> <p>To view the JavaScript View:</p> <ul> <li>In the main window, select the JavaScript View checkbox in the View tab.</li> </ul> <p></p>"},{"location":"recorder-user-guide/running_debugging_scripts/#viewing-the-response-data-in-the-execution-tree","title":"Viewing the Response Data in the Execution Tree","text":"<p>As you execute a script, WebLOAD Recorder displays the actions performed during runtime in the Execution Tree. The Execution Tree is an interactive tree that you can use to examine the results.</p> <p></p>"},{"location":"recorder-user-guide/running_debugging_scripts/#comparing-recorded-sequence-and-execution-sequence-side-by-side-side-by-side","title":"Comparing Recorded Sequence and Execution Sequence Side by Side side by side","text":"<p>You can view the recorded sequence alongside the execution sequence using the side by side view feature. This can help you manually discover differences between the original recorded session and the playback.</p> <p>Side by side view is available for the Browser, HTTP Headers, and HTML Views.</p> <p>To view the recorded sequence side by side with the execution sequence:</p> <ul> <li>Select Side by Side in the Session tab of the ribbon.</li> </ul> <p>The recorded sequence is displayed to the left of the execution sequence.</p> <p>Note: This feature is only available after complete running an execution sequence, not at the beginning of an execution sequence.</p> <p></p>"},{"location":"recorder-user-guide/running_debugging_scripts/#comparing-a-script-recording-node-to-its-playback","title":"Comparing a Script Recording node to its Playback","text":"<p>After running a script test, you can perform a comparison of the original script recording and its playback for each node in the script.</p> <p>To compare a script node\u2019s recording to its playback:</p> <ol> <li> <p>Select a script node.</p> </li> <li> <p>Click Compare HTML in the Session tab of the ribbon.</p> </li> </ol> <p>-Or-</p> <p>Right-click a node in the Script Tree or the Execution Tree and select Compare html from the pop-up menu.</p> <p>The defined Difference Viewer application launches and automatically compares the selected node in the recording and in the playback. For information about defining the Difference Viewer application, see *Defining the Difference Viewer Application* (on page 211).</p>"},{"location":"recorder-user-guide/running_debugging_scripts/#comparing-a-recorded-sequence-with-the-execution-sequence","title":"Comparing a Recorded Sequence with the Execution Sequence","text":"<p>You can compare an entire original recorded sequence with the current execution sequence using the Compare All feature. This can help you to check and fix any undesirable changes you made to the original recorded session.</p> <p>To compare the current execution with the original sequence:</p> <ul> <li>Select Compare All in the Session tab of the ribbon.</li> </ul> <p></p> <p>The following comparison information and options are provided:</p>"},{"location":"recorder-user-guide/running_debugging_scripts/#execution-tree-pane-in-compare-all-mode","title":"Execution Tree pane in Compare All mode","text":"<p>In the Execution Tree pane, each node\u2019s background color indicates the degree to which the original execution was changed, as follows:</p> <ul> <li> <p> Green \u2013 The current execution is identical with the original execution</p> </li> <li> <p> Yellow \u2013 There is a minor difference between the original and the current execution</p> </li> <li> Red \u2013 There is a major difference between the original and the current execution</li> </ul>"},{"location":"recorder-user-guide/running_debugging_scripts/#compare-pane","title":"Compare pane","text":"<p>The Compare pane that appears at the bottom of the screen lists a digest of the differences between the original and the current execution. The icon at the beginning of each line indicates the level of difference:</p> <ul> <li> <p> Yellow \u2013 indicates a minor change.</p> </li> <li> <p> Red \u2013 indicates a major change.</p> </li> </ul> <p>Double clicking a line, or right-clicking a line and selecting Go to location, opens a side-by-side view of the relevant code in the view pane, with the first difference highlighted in blue. The original recorded sequence is displayed on the left and the current execution is displayed on the right. The side by side comparison can be viewed in the Browser, HTTP Headers, and HTML Views.</p> <p></p> <p>In addition, right-clicking a line and selecting Compare HTML, launches the defined Difference Viewer application that compares the selected node in the original recording with the current execution. For more information see *Comparing a Script Recording node to its Playback* (on page 115).</p>"},{"location":"recorder-user-guide/running_debugging_scripts/#stopping-the-execution-of-a-script","title":"Stopping the Execution of a Script","text":"<p>When debugging a script using a Step Into or breakpoint, the playback session stops immediately upon completion of the current WebLOAD Recorder protocol block.</p> <p>To stop the execution of a script:</p> <ul> <li>Click Stop in the Home tab of the ribbon,</li> </ul> <p>-Or-</p> <p>Use the hotkeys Shift + F5.</p> <p>The playback session is stopped.</p>"},{"location":"recorder-user-guide/running_debugging_scripts/#debugging-scripts","title":"Debugging Scripts","text":"<p>WebLOAD Recorder provides an integrated debugger with a variety of tools to help locate bugs in your script. The debugger provides special menus, windows, dialog boxes, and grids of fields for debugging. You can pause the debugger and trigger WebLOAD Recorder to wait for user input before proceeding with running the script. In the script, you can set breakpoints and step into / over / out. While debugging your script, you can abort the debugger without executing the TerminateClient and TerminateAgenda functions, as opposed to stopping it completely.</p>"},{"location":"recorder-user-guide/running_debugging_scripts/#debug-tab-items","title":"Debug Tab Items","text":"<p>Commands for debugging can be found on the Debug tab of the ribbon.</p> <p></p> <p>The Debug tab contains commands to start the debugging process. The following options are available through the Debug tab.</p> Tab Item Description Execution group Run Starts playback of the script from the current statement until a breakpoint or the end of the script is reached. Stop Stops the playback of the script. Abort <p>Stops the playback of the script without executing the</p><p>TerminateClient or TerminateAgenda functions.</p> Debug group Step Into Starts the play back of the script, a step at a time, entering each function encountered. Step Over Starts the playback of the script, one step at a time. When a function is reached, it is executed without stepping through the function. Step Out Plays through the remaining steps of the called function, and stops on the line in the script immediately following the function call. Using this command you can quickly finish executing the current function after determining that a bug is not present in the function. Break Execution Stops the playback of the script at that point. Toggle Breakpoint Defines a line in the script where WebLOAD Recorder suspends execution. Remove all Breakpoints Eliminates all breakpoints. Disable/Enable all Breakpoints Disable or enable all breakpoints. Edit Breakpoints Displays the Breakpoints dialog box, enabling the setting of breakpoints. Debug Windows group Watch Window Toggles the displays of the Watch window (available only during runtime in debug mode), which displays the names and values of variables and expressions.. Variables Window Toggles the display of the Variables window (available only during runtime in debug mode) which displays information about variables used in the current and previous statements and functions.. Call Stack Toggles the display of the Call Stack window which lists the function calls that led to the current statement, with the current function on the top of the stack.."},{"location":"recorder-user-guide/running_debugging_scripts/#debugging-a-script","title":"Debugging a Script","text":"<p>When debugging a script, you can set the script to run in the following ways:</p> <ul> <li>Step-by-step \u2013 The execution starts at the first line of the script and stops at each subsequent line.</li> <li>Breakpoints \u2013 The execution starts at the first line of the script and stops when it reaches a breakpoint.</li> <li>A combination of step-by-step and breakpoints.</li> </ul> <p>To debug a script:</p> <ol> <li>Click Run or Step Into in the Debug tab of the ribbon.</li> <li>When you reach the end of the script you can:</li> <li>Click Step Into in the Debug tab to return to the beginning of the script.</li> <li>View results (see Viewing and Analyzing the Test Results on page 130).</li> <li>Add breakpoints (see Setting Breakpoints on page 121).</li> <li>Return to Edit mode and revise your script.</li> </ol>"},{"location":"recorder-user-guide/running_debugging_scripts/#starting-the-debugger","title":"Starting the Debugger","text":"<p>To start debugging:</p> <ul> <li>Click Run in the Debug tab to run the script continuously,</li> </ul> <p>-Or-</p> <p>Click Step Into in the Debug tab to run the script step-by-step.</p>"},{"location":"recorder-user-guide/running_debugging_scripts/#setting-breakpoints","title":"Setting Breakpoints","text":"<p>Use breakpoints to define places in the script to suspend execution. Breakpoints can be set in Edit mode and in Debug mode. The breakpoints you set will be saved as a part of your WebLOAD Recorder project.</p> <p>To set multiple breakpoints to a script:</p> <ol> <li> <p>Display the entire script.</p> </li> <li> <p>Select the line of code.</p> </li> <li> <p>Click Edit Breakpoints in the Debug tab. The Breakpoints dialog box opens.</p> </li> </ol> <p></p> <ol> <li>Click the arrow next to the Break at field. The Breakpoint options appear.</li> </ol> <p></p> <ol> <li>Click the Line number.</li> </ol> <p>The Line number is added to the list of breakpoints.</p> <ol> <li>To add context to the breakpoint, click the arrow again, and click Advanced. </li> </ol> <p>The Advanced Breakpoint dialog box opens.</p> <p></p> <ol> <li>Fill in the fields, and click OK.</li> </ol> <p>To set a breakpoint in the Script Tree:</p> <ol> <li>Right-click an item in the Script Tree.</li> <li>From the pop-up menu, click Toggle Breakpoint.</li> </ol> <p>A red dot appears in the left margin of the JavaScript View pane adjacent to the selected code and in the Script Tree adjacent to the visual script element for which the breakpoint is defined, indicating that the breakpoint is set.</p> <p>To set a breakpoint in the JavaScript View pane:</p> <ol> <li>Select the JavaScript View checkbox in the View tab to open the JavaScript View pane.</li> <li>In the Script Tree, click the Agenda root node to display the entire script in the JavaScript View pane.</li> <li>In the JavaScript View pane, select the line of code where you want the script to wait.</li> <li>Right-click and select Toggle Breakpoint from the pop-up menu,</li> </ol> <p>-Or-</p> <p>Click Toggle Breakpoint in the Debug tab.</p> <p>A red dot appears in the left margin of the JavaScript View pane adjacent to the selected code and in the Script Tree adjacent to the visual script element for which the breakpoint is defined, indicating that the breakpoint is set.</p> <p>To set a breakpoint in Debug mode:</p> <ol> <li> <p>Run the script by clicking Step Into in the Debug tab.</p> </li> <li> <p>Continue stepping through the script until reaching the point you want to insert the breakpoint.</p> </li> <li> <p>In the JavaScript View pane, select the code where you want to insert in breakpoint.</p> </li> <li> <p>Click Toggle Breakpoint in the Debug tab.</p> </li> <li> <p>While in debug mode a red dot appears in the left margin of your script code, indicating that the breakpoint is set.</p> </li> </ol>"},{"location":"recorder-user-guide/running_debugging_scripts/#running-to-a-breakpoint","title":"Running to a Breakpoint","text":"<p>To run until a breakpoint is reached:</p> <ol> <li>Set a breakpoint (see Setting Breakpoints on page 121).</li> <li>Click Run in the Debug tab</li> </ol> <p>Click Step Into in the Debug tab to run the script step-by-step.</p>"},{"location":"recorder-user-guide/running_debugging_scripts/#removing-breakpoints","title":"Removing Breakpoints","text":"<p>You can remove individual breakpoints or remove all breakpoints in the script.</p> <p>To remove a breakpoint:</p> <ol> <li> <p>In the Script Tree, click the Agenda root node to display the entire script in the JavaScript View pane.</p> </li> <li> <p>In the JavaScript View pane, select the line containing the breakpoint you want to remove.</p> </li> <li> <p>Click Toggle Breakpoint in the Debug tab. The red dot in the left margin disappears.</p> </li> </ol> <p>To remove all breakpoints:</p> <ol> <li>Select the JavaScript View checkbox in the View tab to open the JavaScript View pane.</li> <li>In the Script Tree, click the Agenda root node to display the entire script in the JavaScript View pane.</li> <li>Click Remove all Breakpoints in the Debug tab The red dot in the left margin disappears.</li> </ol>"},{"location":"recorder-user-guide/running_debugging_scripts/#select-the-javascript-view-checkbox-in-the-view-tab-to-open-the-javascript-view-pane","title":"Select the JavaScript View checkbox in the View tab to open the JavaScript View pane.","text":""},{"location":"recorder-user-guide/running_debugging_scripts/#disabling-and-enabling-all-breakpoints","title":"Disabling and Enabling All Breakpoints","text":"<p>You can disable or enable all breakpoints in the script.</p> <p>To disable or enable all breakpoints:</p> <ol> <li> <p>Select the JavaScript View checkbox in the View tab to open the JavaScript View pane.</p> </li> <li> <p>In the Script Tree, click the Agenda root node to display the entire script in the JavaScript View pane.</p> </li> <li> <p>Click Disable/Enable Breakpoints in the Debug tab.</p> </li> <li> <p>When all of the breakpoints are disabled, the red dots in the left margin turn white.</p> </li> <li> <p>When all of the breakpoints are enabled, the white dots in the left margin turn red.</p> </li> </ol>"},{"location":"recorder-user-guide/running_debugging_scripts/#stepping-into-the-script","title":"Stepping Into the Script","text":"<p>To run the script and execute one statement at a time (Step Into):</p> <ol> <li>Click Run or Step Into in the Debug tab.</li> </ol> <p>The debugger executes the next statement and then it pauses execution. If you step into a nested function call, the debugger steps into the most deeply nested function.</p> <ol> <li>Repeat step 1 to continue executing the script one statement at a time.</li> </ol> <p>To step into a specific function:</p> <ol> <li>Set a breakpoint just before the function call or use the Step Into command to advance the script execution to that point.</li> </ol> <p>For information on setting breakpoints see Setting Breakpoints (on page 121).</p> <ol> <li>Click Step Into in the Debug tab.</li> </ol>"},{"location":"recorder-user-guide/running_debugging_scripts/#stepping-out-or-over-a-function","title":"Stepping Out or Over a Function","text":"<p>To step over a function:</p> <ol> <li> <p>Click Run or Step Into in the Debug tab.</p> </li> <li> <p>Execute the script to the function call.</p> </li> <li> <p>Click Step Over in the Debug tab.</p> </li> </ol> <p>The debugger executes the next function, but pauses after the function returns.</p> <ol> <li>Continue executing the program.</li> </ol> <p>To step out of a function:</p> <ol> <li> <p>Click Run or Step Into in the Debug tab and execute the program to some point inside the function.</p> </li> <li> <p>Click Step Out in the Debug tab.</p> </li> </ol> <p>The debugger continues until it has completed execution of the return from the function, then pauses.</p>"},{"location":"recorder-user-guide/running_debugging_scripts/#stopping-the-playback-of-the-script","title":"Stopping the Playback of the Script","text":"<p>You can stop the playback of the script at a specific point. Stopping a script executes the TerminateClient or TerminateAgenda functions.</p> <p>To stop the playback of the script:</p> <ol> <li>Start debugging. Click Run or Step Into in the Debug tab.</li> <li>Click Break Execution in the Debug tab.</li> </ol> <p>The script stops running. You can continue the playback from this point, at a later time.</p> <ol> <li>Click Stop in the Debug tab.</li> </ol> <p>The script stops running. Continuing the playback from this point is not possible.</p>"},{"location":"recorder-user-guide/running_debugging_scripts/#aborting-the-playback-of-the-script","title":"Aborting the Playback of the Script","text":"<p>You can abort the playback of the script at a specific point. Aborting a script does not execute the TerminateClient or TerminateAgenda functions.</p> <p>To abort the execution of a script:</p> <ul> <li>Click Abort in the Debug tab. The playback session is aborted.</li> </ul>"},{"location":"recorder-user-guide/running_debugging_scripts/#using-the-watch-window","title":"Using the Watch Window","text":"<p>The Watch window is used for debugging your application, and is only available when you are running your script. The Watch window displays the values of selected variables or watch expressions that you specify while debugging your script. The values of the variables and expressions in the Watch window are only updated when execution is stopped at a breakpoint.</p> <p>Use the Watch window to specify variables and expressions that you want to watch while debugging your program. You can also modify the value of a variable using the Watch window. To add a watch variable, see Adding a Watch Variable or Expression (on page 128).</p> <p>To open the Watch window:</p> <ul> <li>Select the Watch Window checkbox in the Debug tab.</li> </ul> <p></p> <p>The Watch window contains four tabs:</p> <ul> <li>Watch1</li> <li>Watch2</li> <li>Watch3</li> <li>Watch4</li> </ul> <p>Each tab displays a user-specified list of variables and expressions in a grid field. You can group variables that you want to watch together onto the same tab. For example, you could put variables related to a specific page on one tab and variables related to second page on another tab. You could watch the first tab when debugging the first page and the second tab when debugging the second page.</p> <p>If you add an array variable to the Watch window, plus sign (+) or minus sign (-) boxes appear in the Name column. You can use these boxes to expand or collapse your view of the variable.</p>"},{"location":"recorder-user-guide/running_debugging_scripts/#viewing-the-value-of-a-variable-in-the-watch-window","title":"Viewing the Value of a Variable in the Watch Window","text":"<p>You can view the value of a variable in the Watch window.</p> <p>To view a variable or expression in the Watch window:</p> <ol> <li>Start debugging. Click Run or Step Into in the Debug tab of the ribbon.</li> <li>Select the Watch Window checkbox in the Debug tab to open the Watch window.</li> </ol> <p>In the Name column, plus sign (+) or minus sign (-) boxes may appear. These appear if you added an array or object variable to the Watch window. Use these boxes to expand or collapse your view of the variable.</p>"},{"location":"recorder-user-guide/running_debugging_scripts/#adding-a-watch-variable-or-expression","title":"Adding a Watch Variable or Expression","text":"<p>You can add a watch variable or expression to the Watch window, while you are running your script. Valid expressions accepted in the Watch window include any valid JavaScript expression that can be added to the script.</p> <p>The Watch dialog box is equivalent to using the JavaScript eval function. Using the eval function you can define a variable and its value. In the same way, you can use the watch dialog box to define values for variables used throughout a script.</p> <p>For example, if your script contains the variable a, when you type a=10 in the Watch window, the engine evaluates the expression as though it were written within the script. The result of the expression a=10 would be setting the variable a to 10. Then when you type a=a+1 in the watch window, the variable a would be set to 11. The value of the variable is always according to the last definition of the variable. So, if you type a=2, the variable a would be set to 2 regardless of what the variable\u2019s value was beforehand.</p> <p>To add a Watch variable or expression in the JavaScript View pane:</p> <ol> <li> <p>Start debugging. Click Run or Step Into in the Debug tab.</p> </li> <li> <p>Select the JavaScript View option in the View tab to open the JavaScript View pane.</p> </li> <li> <p>In the Script Tree, click the Agenda root node to display the entire script in the JavaScript View pane.</p> </li> <li> <p>In the JavaScript View pane, select the line where you want to add the Watch variable or expression.</p> </li> <li> <p>Right-click the variable in the JavaScript View pane, and click Add Watch from the pop-up menu.</p> </li> </ol> <p>The Add Watch dialog box opens.</p> <p></p> <ol> <li> <p>In the Expression field, type a variable or expression.</p> </li> <li> <p>Click Add.</p> </li> </ol> <p>The variable or expression is added to the Watch window. The Watch window evaluates the variable or expression immediately and displays the value or an error message.</p> <p>If you added an array or object variable to the Watch window, plus sign (+) or minus sign (-) boxes appear in the Name column. Use these boxes to expand or collapse your view of the variable.</p> <ol> <li>You can optionally edit the name or value of the variable or expression by double- clicking the name or value that you want to edit.</li> </ol>"},{"location":"recorder-user-guide/running_debugging_scripts/#viewing-the-variables-window","title":"Viewing the Variables Window","text":"<p>The Variables window provides quick access to variables that are important in the scripts current context.</p> <p>To open the Variables Window:</p> <ol> <li>Start debugging. Click Run or Step Into in the Debug tab.</li> <li>Select the Variables Window checkbox in the Debug tab.</li> </ol> <p></p> <p>The Variables window displays variables used in the current statement and in the previous statement. It also displays return values when you step over or out of a function.</p> <p>The Variables window contains a grid with fields for the variable name and value. The debugger automatically fills in these fields. You cannot add variables or expressions to the Variables window (you must use the Watch window, see *Adding a Watch Variable or Expression* on page 128), but you can expand or collapse the variables shown. You can expand an array, object, or structure variable in the Variables window if it has a plus sign (+) box in the Name field. If an array, object, or structure variable has a minus sign (-) box in the Name field, the variable is already fully expanded.</p> <p>The Variables window also has a Context dropdown list that displays the current scope of the variables displayed. To view variables in a different scope, select the scope from the drop-down list box.</p>"},{"location":"recorder-user-guide/running_debugging_scripts/#viewing-the-value-of-a-variable","title":"Viewing the Value of a Variable","text":"<p>You can view the value of a variable in the Variables window.</p> <p>To view a variable in the Variables window:</p> <ol> <li>Start debugging. Click Run or Step Into in the Debug tab.</li> <li>Select the Variables Window checkbox in the Debug tab to open the Variables window.</li> </ol>"},{"location":"recorder-user-guide/running_debugging_scripts/#viewing-the-call-stack-window","title":"Viewing the Call Stack Window","text":"<p>The Call Stack window lists the function calls that led to the current statement, with the current function on the top of the stack.</p> <p>To open the Call Stack Window:</p> <ol> <li>Start debugging. Click Run or Step Into in the Debug tab.</li> <li>Select the Call Stack checkbox in the Debug tab.</li> </ol> <p></p>"},{"location":"recorder-user-guide/running_debugging_scripts/#viewing-and-analyzing-the-test-results","title":"Viewing and Analyzing the Test Results","text":"<p>While recording, editing, and running your script, WebLOAD Recorder provides information on all major events that occurred during runtime such as failures and error messages. You can navigate through the Execution Tree to view the results of your test at increasing levels of detail. This technique lets you view detailed information on any errors.</p>"},{"location":"recorder-user-guide/running_debugging_scripts/#using-the-execution-tree-to-view-results","title":"Using the Execution Tree to View Results","text":"<p>As you execute a script, WebLOAD Recorder displays the Web pages accessed in the Web application in the Execution Tree.</p> <p>When working with a file JavaScript file that has not been converted to a WebLOAD Recorder project file, WebLOAD Recorder displays a playback node for each HTTP request of the JavaScript.</p> <p></p>"},{"location":"recorder-user-guide/running_debugging_scripts/#using-the-page-view-to-view-results","title":"Using the Page View to View Results","text":"<p>The Page View displays a visual representation of the baseline set of Web pages in your script. This view is available while recording, editing, or running your script.</p> <p>To open the Page View:</p> <ol> <li>Select the Page View checkbox in the View tab of the ribbon.</li> <li>Select the Page View tab.</li> </ol> <p></p>"},{"location":"recorder-user-guide/running_debugging_scripts/#using-the-dom-view-to-view-results","title":"Using the DOM View to View Results","text":"<p>DOM View displays all of the objects and the structure of the Web page displayed in Page View, giving you access to objects not visible in the pages presentation layer.</p> <p>DOM View is available when Page View is open, while recording, editing, or running your script. When an element is selected in the DOM View, the object is highlighted in the Page View.</p> <p>To open the DOM View:</p> <ol> <li>Select the DOM View checkbox in the View tab of the ribbon.</li> <li>Select the DOM View tab.</li> </ol> <p></p>"},{"location":"recorder-user-guide/running_debugging_scripts/#using-the-html-view-to-view-results","title":"Using the HTML View to View Results","text":"<p>HTML view displays an HTML preview of each page and frame requested in the script. When switching between the JavaScript, HTTP Headers, Browser, and HTML Views, the new view displays the node that is selected in the Script Tree (during edit mode) or Execution Tree (during debug mode). These views are available while recording, after the recording is finished, and after opening a saved script.</p> <p>To open the HTML View:</p> <ol> <li> <p>Select the HTML View checkbox in the View tab of the ribbon.</p> </li> <li> <p>Select the HTML View tab.</p> </li> </ol> <p></p> <ol> <li> <p>To search for text:</p> </li> <li> <p>Right-click and click Find from-the pop-up menu.</p> </li> <li> <p>Type the text you want to find, and click Find Next.</p> </li> <li> <p>To copy text:</p> </li> <li> <p>Select the text you want to copy.</p> </li> <li>Right-click and click Copy from-the pop-up menu.</li> </ol>"},{"location":"recorder-user-guide/running_debugging_scripts/#using-the-http-headers-view-to-view-results","title":"Using the HTTP Headers View to View Results","text":"<p>The HTTP Headers View displays the GET and POST HTTP protocol commands. Other commands can also be displayed, such as CONNECT. When switching between the various views, the new view displays the node that is selected in the Script Tree.</p> <p>These views are available while recording, after the recording is finished, during playback and debugging, and after opening a saved script.</p> <p>To open the HTTP Headers View:</p> <ol> <li> <p>Select the HTTP Headers View checkbox in the View tab of the ribbon.</p> </li> <li> <p>Select the HTTP Headers View tab.</p> </li> </ol> <p></p> <p>The headers are divided into groups of headers per playback request. For each request, only the relevant headers are displayed. You can expand the headers to show the form data and all other content.</p> <p></p> <ol> <li> <p>To view all of the headers on the script, click the Agenda root node.</p> </li> <li> <p>To view headers of a specific round, click the Round node in the Execution tree.</p> </li> <li> <p>To search for text:</p> </li> <li> <p>Right-click and click Find... from-the pop-up menu.</p> </li> <li> <p>In the Find what field, type the text you want to find. </p> <p>The Find what field is case sensitive.</p> </li> <li> <p>Click Find Next. The entire text of the selected node is selected.</p> </li> <li> <p>To copy text:</p> </li> <li> <p>Select the text you want to copy.</p> </li> <li>Right-click and click Copy from-the pop-up menu. The entire text of the selected node is copied.</li> </ol>"},{"location":"recorder-user-guide/running_debugging_scripts/#using-the-log-view-window-to-view-results","title":"Using the Log View Window to View Results","text":"<p>In addition to the results available through viewing the Script Tree and the Execution Tree, the Log View Window displays the errors encountered during playback and additional information about your test session results.</p> <p>An Info Message or a minor error will not cause the playback to stop. Similarly, a generic message, issued when WebLOAD Recorder encounters HTTP errors that are undefined by WebLOAD, will not cause playback to stop. A higher level of severity (Error or Severe Error) ends the playback upon completion of the WebLOAD Recorder protocol block.</p> <p>To open the Log View Window:</p> <ul> <li>Select the Log View checkbox in the View tab of the ribbon.</li> </ul> <p>By default, the Log View pane appears at the bottom of the main window.</p> <p></p> <p>The following information is displayed:</p> <ul> <li>! \u2013 The result and severity of each message:</li> <li>Information message</li> <li>Minor error message</li> <li>Error message</li> <li> <p>Severe error message</p> </li> <li> <p>Time \u2013 The amount of runtime.</p> </li> <li>Description \u2013 The runtime action and information about failed actions, including the date and time the action occurred.</li> </ul>"},{"location":"recorder-user-guide/running_debugging_scripts/#performing-a-full-search-in-the-test-results","title":"Performing a Full Search in the Test Results","text":"<p>You can search for a specific string in all views at once.</p> <p>To search for text in all views:</p> <ol> <li>Select Find All in the Edit tab of the ribbon.</li> </ol> <p></p> <ol> <li> <p>In the Find what field, type the text you want to find.</p> </li> <li> <p>Under Look at, specify in which view you wish to search. You can select any combination of the following:</p> </li> <li> <p>JavaScript</p> </li> <li>HTTP Headers</li> <li> <p>HTML</p> </li> <li> <p>Optionally check the Match case checkbox.</p> </li> <li> <p>Click Find.</p> </li> </ol> <p>A results pane appears in the bottom half of the screen, displaying all the search results.</p> <p></p> <ul> <li> <p>The icon to the left of each search result indicates in which page view the result appears.</p> </li> <li> <p>Double clicking a search result highlights the result both in the Script Tree and in the corresponding page view.</p> </li> </ul>"},{"location":"recorder-user-guide/running_debugging_scripts/#printing-the-contents-of-the-log-view-window","title":"Printing the Contents of the Log View Window","text":"<p>To print the contents of the Log View Window:</p> <ol> <li>Right-click inside the Log View window.</li> <li>Select Print from the right-click menu. The Print Setup dialog displays.</li> <li>Select a printer and click OK.</li> </ol>"},{"location":"recorder-user-guide/running_debugging_scripts/#saving-the-contents-of-the-log-view-window","title":"Saving the Contents of the Log View Window","text":"<p>To save the contents of the Log View Window:</p> <ol> <li>Right-click inside the Log View window.</li> <li>Select Save from the right-click menu. The Save As dialog displays.</li> <li>In the File Name field, type in the name for the file.</li> <li>Click Save.</li> </ol> <p>The file is saved with the extension *.log.</p> <p>You can view the saved log file with any text editor.</p>"},{"location":"recorder-user-guide/running_debugging_scripts/#viewing-a-log-message","title":"Viewing a Log Message","text":"<p>To view the complete log message:</p> <ol> <li>Right-click an entry in the Log View window.</li> <li>Select Display Message from the right-click menu.</li> </ol> <p>The Log Message window with detailed information on the selected entry appears.</p>"},{"location":"recorder-user-guide/running_debugging_scripts/#validating-responses","title":"Validating Responses","text":"<p>WebLOAD Recorder enables you to validate a response in a script by adding a response validation function. You can validate a Web page\u2019s title, the maximum time taken to load the Web page, its content, and the length of its content. You can also</p> <p>determine WebLOAD\u2019s behavior if validation fails. During playback, the results of the validation process (failure or success) are displayed in the Log View window.</p> <p>To add a response validation function:</p> <ol> <li> <p>Select a node in the Script Tree.</p> </li> <li> <p>Click Response Validation in the Home tab of the ribbon.</p> </li> </ol> <p>-Or-</p> <p>Right-click the node and select Response Validation.</p> <p>-Or-</p> <p>Perform the following:</p> <ol> <li>Click the HTML View tab to view the node in HTML View.</li> <li>Select HTML text within the node.</li> <li>Right-click the selection and click Response Validation. The Response Validation dialog box appears.</li> </ol> <p>Note: When accessing the Response Validation dialog box from HTML View, the dialog box appears automatically configured with the selected content.</p> <p></p> <ol> <li> <p>Configure the responses you wish to validate during playback, according to the information displayed in Table 13, and click OK.</p> </li> <li> <p>The Response Validation function is added to your script.</p> </li> </ol> Field Description Page Title Validate Select to validate the page title. Success if Page Title is The title of the Web page. During playback, if the title of the Web page matches the text entered in this field, the validation is successful. Recorded page title is The page title as defined in the HTML  tag. Page Time Validate Select to validate the page time. Page Time limit x sec The maximum number of seconds that may elapse while waiting for the Web page to open for the validation to be successful. Content length Validate Select to validate the content length. Equal to x bytes The size of the Web page content, in bytes, must equal the specified value for the validation to be successful. Greater than x bytes The size of the Web page content, in bytes, must be greater than the specified value for the validation to be successful. Lower than x bytes The size of the Web page content, in bytes, must be less than the specified value for the validation to be successful. Recorded Content Length is The size of the response, in bytes. Content Validate Select to validate the content. For a full explanation, refer to *Performing Multiple Text Validations of Web Page Content* (on page 142). Success if response contains/does not contain x For each JavaScript expression you include in your validation check, specify whether it must or must not appear in the Web page for the validation to be successful. Add <p>Click this button to add a new JavaScript expression to the list of validations that must or must not appear in the Web page.</p><p>The string \"\" appears in the box above the button. Delete this string and instead do either or both of the following:<p>- Enter a text string in quote marks. For example, \"Welcome\".</p><p>- Enter a parameter without quote marks. For example, TodaysDate(). You can click Add Parameter and select a parameter from the list.</p><p>Note that you can concatenate strings and/or parameters to create a JavaScript expression. For example: \"Welcome\" + params_user.getValue().</p> Remove Click this button to delete a selected JavaScript expression from the list of validations that must or must not appear in the Web page. Add Parameter Opens a list of parameters you can include in the contains/does not contain text. This list is identical to the list available in the Insert Variable menu (Figure 54). In case of validation failure Display warning and continue running Select to display a warning during playback and continue running the script, if the verification fails. Display error and stop the round Select to display an error during playback and stop the round, if the verification fails. Display fatal error and stop test execution Select to display a fatal error and stop running the script, if the verification fails. Call to JS function Select to run a specified JavaScript function, if the verification fails. Error message (Optional) Enter an error message to be displayed if the verification fails (optional). <ol> <li>Click OK. The Response Validation function is added to your script.</li> </ol>"},{"location":"recorder-user-guide/running_debugging_scripts/#performing-multiple-text-validations-of-web-page-content","title":"Performing Multiple Text Validations of Web Page Content","text":"<p>You can use the Response Validation feature to validate a Web page\u2019s content.</p> <p>To validate the content of a Web page:</p> <ol> <li> <p>Follow the instructions in Validating Responses (on page 139) to access the Response Validation dialog box (Figure 90).</p> </li> <li> <p>In the Content section, check the Validate checkbox.</p> </li> <li> <p>Click Add.</p> </li> </ol> <p>The box above the Add button displays \u201c\u201d. <p></p> <ol> <li> <p>Define a JavaScript expression and whether it must or must not appear in the Web page, as follows:</p> </li> <li> <p>Delete the string \u201c\u201d and instead do either or both of the following: <ul> <li>Enter a text string enclosed in quote marks. For example, \"Welcome\".</li> <li>Enter a parameter without quote marks. For example, TodaysDate(). Alternatively, you can click Add Parameter and select a parameter from the list of predefined parameters.</li> </ul> <p>Note that you can concatenate strings and/or parameters to create a JavaScript expression. For example: \"Welcome\" + params_user.getValue().</p> <li> <p>Select contains if the expression must appear in the Web page; select does not contain if it should not appear in the Web page.</p> </li> <li> <p>Repeat the previous step for every additional expression you wish to define.</p> </li> <p>The below image shows a content validation example. In this example, the page content will be validated only if it contains the string Welcome followed by a user name, and does not contain the string Error.</p> <p></p>"},{"location":"recorder-user-guide/running_debugging_scripts/#editing-a-script-for-dynamic-html-pages","title":"Editing a Script for Dynamic HTML Pages","text":"<p>When you record an HTML page in the WebLOAD Recorder, there can be dynamic values that WebLOAD adds to the script, which are recorded in the WebLOAD Recorder. Such dynamic values can contain state management information, such as the session-id, which is usually passed as URL encoded parameters or hidden form fields. The dynamic values that are recorded in the WebLOAD Recorder are different during each run. Since the value that was recorded in the WebLOAD Recorder and the dynamic value do not match, you will receive an error.</p> <p>To overcome this situation, you need to edit the script and perform correlation. This can be done manually, or by using WebLOAD\u2019s Smart Copy feature. This feature</p> <p>enables you to convert the dynamic value into the correct value for the specific session.</p> <p>Notes: </p> <ul> <li>The Smart Copy feature supports converting the dynamic value of the following HTML objects: images, links, and form elements.</li> <li>Editing the script and performing correlation is not necessary for static HTML pages, since they do not contain dynamic values. In this case, the script executes smoothly with no need for initial editing.</li> </ul> <p>To edit a script using Smart Copy:</p> <ol> <li>After recording and running your script, open the Page View with the DOM View. Select the DOM View checkbox in the View tab of the ribbon.</li> </ol> <p>The Page and DOM View appear.</p> <ol> <li> <p>In the Execution Tree, select the first node.</p> </li> <li> <p>In the Page View, search for an error message. If there is no message, select the next node in the Execution Tree and search for a message there.</p> </li> </ol> <p></p> <ol> <li>Once you locate the message, open the JavaScript View. Select the JavaScript View checkbox in the View tab of the ribbon.</li> </ol> <p>The JavaScript View appears with the requested block of code selected.</p> <ol> <li>Within the selected block of code, locate the dynamic value (for example, the session-id field). This field must be retrieved from the previous block of code.</li> </ol> <p></p> <ol> <li> <p>Click the previous node in the Execution Tree to search for the element that contains the dynamic value. Make sure the Browser and DOM Views are open. Select the Page View and DOM View checkboxes in the View tab of the ribbon.</p> </li> <li> <p>In the DOM View, locate the element that contains the dynamic value. This is usually a hidden input field.</p> </li> </ol> <p></p> <p>Note: You cannot use the value recorded in the script, since the value that was recorded was dynamic, and will not match the new value that is given when you run the script.</p> <ol> <li>Right-click the element and select Smart Copy from the pop-up menu.</li> </ol> <p></p> <p>The Smart Copy dialog box appears.</p> <p></p> <ol> <li> <p>Click Copy to clipboard and click OK.</p> </li> <li> <p>To edit the JavaScript, click Full Script in the Home tab of the ribbon.</p> </li> <li> <p>Create a variable for the dynamic field by typing the following at the end of the selected block of code:</p> </li> </ol> <p><code>Session\\_id =</code></p> <ol> <li>Paste the clipboard text (using Paste in the Edit tab of the ribbon) after the equal sign.</li> </ol> <p>For example:</p> <p><code>Session\\_id = document.forms[1].elements[2].value</code></p> <ol> <li>In the subsequent block of code, replace</li> </ol> <p>wlHttp.FormData[\u201csession_id\u201d] =  <p>with</p> <p><code>wlHttp.FormData[\u201csession\\_id\u201d] = session\\_id</code></p> <p>The script is edited. You can now run the script successfully without receiving error messages.</p>"},{"location":"recorder-user-guide/working_with_git/","title":"Working with Git","text":"<p>Git is a free and open source distributed version control system for tracking changes in computer files and coordinating work on those files among multiple people.</p> <p>WebLOAD supports basic Git operations, with easy access to Git operations from within WebLOAD Recorder and WebLOAD Console. WebLOAD assumes that you have downloaded and installed Git, and are familiar with the way it works.</p>"},{"location":"recorder-user-guide/working_with_git/#prerequisites-to-working-with-git","title":"Prerequisites to working with Git","text":"<p>As prerequisites to working with Git, you need to:</p> <ol> <li> <p>Specify once in WebLOAD how to access the Git Local and Remote Repositories. Refer to Setting up Access to Git Local and Remote Repositories (on page 149).</p> </li> <li> <p>Make sure your WebLOAD files are saved in the directory defined as the Git local repository. This can be done in one of two ways:</p> </li> <li> <p>Define the Git local repository directory to be the WebLOAD default directory.</p> </li> <li> <p>Change the WebLOAD default directory to be the directory of the Git local repository.</p> <p>To do either of the above, you need to access the window where you can view or change the location of the WebLOAD default directory:</p> </li> <li> <p>In the WebLOAD Console, navigate to Global Options &gt; File Locations.</p> </li> <li> <p>In the WebLOAD Recorder, navigate to Settings &gt; File Locations.</p> </li> </ol> <p>Note that changing the WebLOAD default directory in either the Console UI or the WebLOAD Recorder UI, changes it for both.</p>"},{"location":"recorder-user-guide/working_with_git/#setting-up-access-to-git-local-and-remote-repositories","title":"Setting up Access to Git Local and Remote Repositories","text":"<p>As a prerequisite to using Git operation from within WebLOAD, you need to once specify in WebLOAD how to access the Git Local Repository and Remote Repository.</p> <p>Note: You can perform this prerequisite task either from the WebLOAD Recorder, or from the WebLOAD Console. Once you perform it in one of them, Git operations will be accessible from both.</p> <p>To specify the Git local and remote repositories:</p> <ol> <li>Click Repository Settings in the Tools tab of the ribbon. </li> </ol> <p>The WebLOAD Repository Settings window appears.</p> <p></p> <ol> <li> <p>In the Local Repository section:</p> </li> <li> <p>Specify the location of the local repository.</p> </li> <li> <p>Specify the current branch.</p> </li> <li> <p>In the Remote Repository section:</p> </li> <li> <p>Specify the location of the remote repository (either a URL or a directory).</p> </li> <li>Specify the remote branch.</li> <li> <p>Specify the User Name and Password for accessing the remote repository.</p> </li> <li> <p>Click OK.</p> </li> </ol>"},{"location":"recorder-user-guide/working_with_git/#performing-a-commit-action","title":"Performing a Commit action","text":"<p>If you setup WebLOAD to support Git, you can perform a Commit, that is, save to the Git local repository, any WebLOAD objects you are currently working on. This functionality is available in both the WebLOAD Recorder and the WebLOAD Console.</p> <ul> <li>When you select Commit in the WebLOAD Recorder, the script you are currently working on as well as all its additional information, are saved to the Git local directory.</li> <li>When you select Commit in the WebLOAD Console, the test definition of the test you are currently working on, as well as the session created by test execution, are saved to the Git local directory</li> </ul> <p>To Commit a WebLOAD object:</p> <ol> <li>Click Commit in the Tools tab of the ribbon.</li> </ol> <p>A window appears in which you can enter a Commit comment. </p> <p></p> <ol> <li>Optionally enter a comment, and click OK.</li> </ol>"},{"location":"recorder-user-guide/working_with_git/#performing-a-commit-dir-action","title":"Performing a Commit Dir action","text":"<p>If you setup WebLOAD to support Git, you perform a Commit dir, that is, save to the Git local repository an entire folder (with all its descendants). This folder must be located under the local repository folder. This functionality is available in both the WebLOAD Recorder and the WebLOAD Console.</p> <p>To perform a Commit dir:</p> <ol> <li> <p>Click Commit dir in the Tools tab of the ribbon.</p> </li> <li> <p>In the File Explorer window that appears, specify the directory you wish to commit.</p> </li> </ol> <p>A window appears in which you can enter a Commit dir comment.</p> <p></p> <ol> <li>Optionally enter a comment, and click OK.</li> </ol>"},{"location":"recorder-user-guide/working_with_git/#performing-a-push-action","title":"Performing a Push action","text":"<p>If you setup WebLOAD to support Git, you can perform a Push, which causes all Commits you had made to the Git local repository, to be pushed to the Git remote repository. This functionality is available in both the WebLOAD Recorder and the WebLOAD Console.</p> <p>To perform a Push:</p> <ol> <li> <p>Click Push in the Tools tab of the ribbon.</p> </li> <li> <p>A window appears, informing you of the Git Push operation and its success status.</p> </li> </ol> <p></p> <ol> <li> <p>Click OK.</p> </li> <li> <p>If the Push operation is rejected, for example because a conflict has arisen due to changes made by two different users, a window appears, displaying the Git rejection message. Follow the instructions in the message, and resolve the rejection using your chosen Git UI.</p> </li> </ol>"},{"location":"recorder-user-guide/working_with_git/#performing-a-pull-action","title":"Performing a Pull action","text":"<p>If you setup WebLOAD to support Git, you can perform a Pull, which pulls data from the remote repository to the local repository. This functionality is available in both the WebLOAD Recorder and the WebLOAD Console.</p> <p>A Pull operation pulls the entire branch from the remote repository and updates the local repository and directories.</p> <p>To perform a Pull:</p> <ol> <li>Click Pull in the Tools tab of the ribbon.</li> </ol> <p>A window appears, informing you of the Git Pull operation and its success status.</p> <p></p> <ol> <li>Click OK.</li> </ol>"},{"location":"recorder-user-guide/working_with_git/#opening-the-git-ui","title":"Opening the Git UI","text":"<p>If you setup WebLOAD to support Git, you can launch your Git UI from within WebLOAD. This functionality is available in both the WebLOAD Recorder and the WebLOAD Console.</p> <p>To launch the Git UI:</p> <ol> <li>Click Open Git Gui in the Tools tab of the ribbon.</li> </ol> <p>The Git UI is launched.</p>"}]}